#!/bin/csh -f
#
# MAKE-HTML - create HTML documents by wrapping content
#           - with standard HTML boilerplate
#           - handles a certain amount of consistency
#

unalias ls

@ Err = 0

set InF = ""
set Sfx = local

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: make-html [-h] [-i] <file>*"
           echo "   h       this help message"
           echo "   i       use institutional attribution content"
           echo "   s       suffix"
           echo "       local, inst, lc"
           echo "   <file>  should be <name>.h"
           echo ""
           exit(1)
      case -i:
           set Sfx = inst
           breaksw
      case -s:
           shift
           set Sfx = $1
           breaksw
      default:
           set InF = ( $InF $1 )
           breaksw
   endsw
   shift
end

if ("$InF" == "") then
   set InF = ( `ls -1 *.h` )
endif

set Hdr = html-header.$Sfx
set Trl = html-trailer.$Sfx

foreach i ($InF)
   set Base = $i:r
   set OutF = $Base.html

   set Title = ( `awk '$1 == "TXT:" { print }' $i | sed 's/TXT: //' | sed "s/'/\\\&rsquo;/g" | sed 's/"/\\\&quot;/g'` )
   set LastM = ( `awk '$1 == "MOD:" { print }' $i | sed 's/MOD: //'` )

   echo "$i $OutF $LastM" | awk '{printf("   %-16s -> %-20s (%s)\n", $1, $2, $3);}'

   cat $Hdr $i $Trl                              | \
   awk '$1 != "TXT:" && $1 != "MOD:" { print }'  | \
   sed 's/$TXT/'"$Title"'/'                      | \
   sed 's+$MOD+'"$LastM"'+'                      >! $OutF
end

exit($Err)

