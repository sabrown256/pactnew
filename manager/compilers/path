#
# PATH - define PathScale compiler
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

run analyze/rpath -a /usr/${LIB}
run analyze/rpath path

Tool CC {
   Exe       = pathcc
   Flags    += [ _env_ = STD_C ;                # C standard flags
                 C89   = -std=c89 ;
                 C99   = -std=c99 ;
                 X89   = -std=gnu89 ;           # gcc default
                 X99   = -std=gnu99 ]
   Flags    += [ _env_ = Bits ;                 # address bit size
                 32    = -m32 ;
                 64    = -m64 -fPIC ]
   Flags    += [ _cmd_ = -p ;                   # profiling
	         on    = -pg ]
   Debug     = -g -Wall
   Optimize  = -g -O1
   Version   = --version
}

Tool FC {
   Exe     = pathf90
   Mod     = -module@                           # see afc about @
   Flags   = -freeform
   Version = --version
}

Tool CXX {
   Exe       = pathCC
   Flags     = 
   Debug     = -g -Wall
   Optimize  = -g -O1
   Version   = --version
}

Tool LD {
   RPath  = -Wl,-rpath,@
   Flags += -Wl,-export-dynamic
   Flags += [ _env_ = Bits ;               # address bit size
              *     = -m* ]
   Flags += [ _cmd_ = -p ;                 # profiling
	      on    = -pg ]
   Lib    = -lc
}

Tool Lex {
   Flags  = -w
   Flags += [ _env_ = Bits ;               # address bit size
              *     = -m* ]
}

Tool OpenMP_Lex {
   Flags = -mp
}

Group Cdefine {
   BAD_COMPLEX_INITIALIZER = TRUE
}

Group AF {
   PATTERN_WARN = ":+sp+warning:"
   PATTERN_ERR  = ":+sp+error:"
}

Group Cfg {
   Use      = Std
   LD_Flags = ${LD_Flags}
}

Group Shared {
   LD_Exe   = pathcc
   CC_Flags = -fPIC
   LD_Flags = -shared
}

Group PThread {
   LD_Lib = -lpthread 
}

Group OpenMP {
   CC_Flags  = -mp
   LD_Flags  = -mp
   LD_Lib    = -lpthread
   SharedFnc = yes
}

Group TEST {
   SKIP    += pdb:pdb_chk++
}

include cpp-rule
include serial

