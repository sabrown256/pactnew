Comments on the build system discovered while doing CMake conversion.

dbget   = PERDB -e 

manager/pact.env  - environment variable to use

dsys
   scripts/cfgsys

   case config:

      perdb    Uses files with suffix .db, .log, .pid

      $(PSY_Root)/bin/pco -f $(PSY_Root)/etc/cfg     # path to database
                          -pact
                          -env $(PSY_Base)/manager/pact.env
                          -l                         # append to log file
                          -g                         # build debuggable version
                          -ft                        # hypen delimited feature list
                          -s lnx-2.12-o              # explicit system id
                          gen/lnx-2.12-o/empress
          Reads program-init
          perdb -f $(PSY_Root)/etc/cfg -l -c  -s   # log, create, server
          writes cfg.inp.pco
                 cfg.inp.db
                 cfg.inp.pl

        manager/std/program-fin
          write/package-links
          write/cfg.db
             writes cfg.pco
                    cfg.db
                    cfg.pl
          write/make-def
             make-def.c
          write/make-macros

          write/smake
          write/dmake
            smake clean
            dmake generate
               bproto
                  blang
            dsys pact $opt

   case build:
       cd score; pact generate
       pact -log $Log -f $EtcDir/Makefile

blang - generate wrappers for languages
  gc-$libname.h   for C
  gf-$libname.h   for fortran
  gs-$libname.h   for scheme
  gp-$libname.h   for python
bproto runs blang and installs files

import-api
  acpp

dmake
  score/scmkut.c

make-macros
  PACTSrcDir = $cwd from dmake/smake
  PACTTmpDir = ${PACTSrcDir}/${PSY_BldObj}
  PACTTstDir = ${PACTSrcDir}/${PSY_BldTst}

  patch-fpe


out of source build
  if PSY_base == PSY_build
     original build layout
  else
     cmake style out of source build
  endif


dsys build
  pact generate
  dsys linstall
  pact lib


etc/Makefile
build : generate incinstall devlib
lib : generate incinstall build
link : link unilib


standard Make targets:
  ${gcb} :
      bproto
  generate : ${gcb} ${hdrf}
  ${TGTLib} : ${LibDep}
      ${LibAction}
  devlib : ${TGTLib}
  devgen
      bindings
  libinstall
  archinstall
  incinstall
  bininstall
  scminstall
  extinstall
  scrinstall
  man1install
  man3install







------------------
Tests are compiled by 'make' and run by 'make test'
$MAKE is set to no-op in test-env, since tests are already compiled
------------------
test
   score
     sctest
       source $PSY_Base/scripts/test-env
         set TestScrDir   - test scripts dir
         source $TestScrDir/functions-pact.csh
         eval `$TestScrDir/cfgsys`
         source $EtcDir/env-pact.csh
       $SrcDir/tests/$i   type, ...


          type
             source $PSY_Base/score/tests/common
               source $PSY_Base/scripts/test-env
             push $TestPkgBuild     # was: push $SrcDir
             $MAKE type
             source $PSY_Base/scripts/test-run
             $TestScrDir/test-check

     pml
        source ../../tests/common         ->  $PSY_Base/pml/common
        source ../../../scripts/test-run  -> $PSY_Base/scripts/test-run
------------------

    TestDir
    TestSrcDir    - test scripts dr
Add TestPkgBuild
------------------







------------------
pdb depends on pgs_gen.h




-------------------
changes for closed
  sx/extensions
