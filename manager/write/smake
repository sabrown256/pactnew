#!/bin/csh -f
#
# SMAKE - compile the smake program
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

Note $WLog "----- write/smake -----"
Note $WLog "Write: smake"
Note $WLog ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

Separator $WLog

Note $WLog "   System make wrapper - smake"
Note $WLog ""

dbmget $WLog Cfg_CC_Exe^       \
             Cfg_CC_Flags^     \
             Cfg_Lex_Flags^    \
             Cfg_LD_Flags^     \
             Cfg_LD_RPath^     \
             MAKE_UseGNU^      \
             PACT_CC_VERSION^  \
             PSY_CfgDir^       \
             PSY_MngDir^       \
             PSY_Root^         \
             PSY_ID^           \
             PSY_InstRoot^     \
             PSY_Prefix^       \
             USE_TmpDir

setenv BinDir  $PSY_Root/bin
setenv EtcDir  $PSY_Root/etc
setenv IncDir  $PSY_Root/include
set lpactver = `cat $PSY_MngDir/.pact-version`

Note $WLog "   lpactver      = |$lpactver|"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

    flog $WLog pushd $PSY_CfgDir

    set InstOld = instold

    set Tmp    = tmp-$PSY_ID
    set TPACTX = pactx.$Tmp
    set TMAKEF = mk.$Tmp

# backup the public files
    if ($PSY_InstRoot != "none") then
       if (-d $InstOld) then
          flog $WLog $RMDir $InstOld
       endif
       flog $WLog mkdir $InstOld

       if (-e $PSY_InstRoot/bin/pact) then
          flog $WLog cp $PSY_InstRoot/bin/pact $InstOld
       endif
       if (-e $PSY_InstRoot/etc/make-def) then
          flog $WLog cp $PSY_InstRoot/etc/make-def $InstOld
       endif
       if (-e $PSY_InstRoot/etc/make-macros) then
          flog $WLog cp $PSY_InstRoot/etc/make-macros $InstOld
       endif

       if (-d $PSY_InstRoot/include) then
          sed "s|$PSY_Root|$PSY_InstRoot|" $EtcDir/make-def > $PSY_InstRoot/etc/make-def
          flog $WLog cp $EtcDir/make-macros $PSY_InstRoot/etc/make-macros
       endif
    endif

# write a test Makefile
    flog $WLog $RM $TMAKEF
    flog $WLog touch $TMAKEF pre-Make

cat << EOF >! $TMAKEF
b:
	@csh -cf "echo OK"

a:
	@$BinDir/smake -f $TMAKEF b

EOF

    flog $WLog cat $TMAKEF

# build the small version of the PACT program - smake
    set mkopt = ""
    set mkopt = ( $mkopt -g )
    set mkopt = ( $mkopt -DPSY_ID=\"${PSY_ID}\" )
    set mkopt = ( $mkopt -DPSY_Prefix=\"${PSY_Prefix}\" )
    set mkopt = ( $mkopt -DPACT_VERSION=\"${lpactver}\" )
    set mkopt = ( $mkopt $MAKE_UseGNU )
    set mkopt = ( $mkopt -I${IncDir} )

    set RootOpt = ( $mkopt )
    if ($USE_TmpDir == TRUE) then
       set RootOpt = ( $RootOpt -DUSE_TMP_DIR )
    endif

    flog $WLog set direct = FALSE

    set ok = FALSE
    foreach n ( 1 2 )
       Note $WLog "--------  Pass $n ---------"
       flog $WLog ${RM} $BinDir/smake

       if ($n == 2) then
          set RootOpt = ( $RootOpt -DSTUPID_MAKE )
       endif

       if ($direct == TRUE) then
          set opt = ""
          set opt = ( $opt $RootOpt $Cfg_CC_Flags $Cfg_Lex_Flags )
          set opt = ( $opt $Cfg_LD_Flags $Cfg_LD_RPath )

          flog $WLog $Cfg_CC_Exe $opt ../../psh/smake.c -o $BinDir/smake
       else

# put path to compiler at the head of the path variable for ccw
          source $EtcDir/env-pact.csh

          flog $WLog pushd ../../psh
          flog $WLog ./ccw "$RootOpt" smake.c -o $BinDir/smake
          flog $WLog $BinDir/smake incinstall
          flog $WLog popd
       endif

       flog $WLog ls -l $BinDir/smake
       flog $WLog $BinDir/smake -f $TMAKEF a
       set xstatus = $status

       NoteD $WLog -n "   System make wrapper - smake"
       if ($xstatus == 0) then
          if ($n == 1) then
             NoteD $WLog " (Does use PATH)"
          else
             NoteD $WLog " (Does NOT use PATH)"
          endif
          set ok = TRUE
          break
       endif
    end
    Note $WLog "--------  Pass $n ---------"

    if ($ok == FALSE) then
       flog $WLog ${RM} $BinDir/smake
       NoteD $WLog " "
       NoteD $WLog " "
       NoteD $WLog "ERROR: SERIOUS MAKE PROBLEM ON THIS PLATFORM"
       NoteD $WLog " "
       exit(1)
    endif

    unset opt
    unset ok

    flog $WLog $RMDir ${PSY_Prefix}*
    flog $WLog $RM `ls`
    flog $WLog popd

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

unset lpactver

source $Me:h/post-common

exit(0)

