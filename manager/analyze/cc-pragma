#!/bin/csh -f
#
# CC-PRAGMA - analyze the handling of _Pragma
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

Note $ALog "----- analyze/cc-pragma -----"
Note $ALog "Analyze: pragma handling"
Note $ALog ""

dbmget $ALog USE_ACC   =\? FALSE^   \
             PACT_CC_VERSION

cat << EOF >! $Tmp.c
#define LOCKON(_l)         \
  _Pragma("omp critical")  \
  {
#define LOCKOFF(_l)  }
int main(int c, char **v)
   {static int first = 1;
    if (first)
       {LOCKON(foo);
	first = 0;
	LOCKOFF(foo);};
    return(0);}
EOF

flog $ALog $lCC $Tmp.c -o $Tmp
set xstatus = $status
if ($xstatus == 0) then
   setenv HAVE_GOOD_OMP_PRAGMAS  TRUE
   NoteD $ALog "      proper pragma handling"
else
   Note $ALog ""
   Note $ALog "--Compilation failed--"
   Note $ALog "/* $lCC $Tmp.c -o $Tmp */"
   cat $Tmp.c >>& $ALog

   setenv HAVE_GOOD_OMP_PRAGMAS  FALSE
   setenv USE_ACC                TRUE
   NoteD $ALog "      bad pragma handling"
endif

flog $ALog rm -f $Tmp.c $Tmp

# export the results
dbmset $ALog HAVE_GOOD_OMP_PRAGMAS = $HAVE_GOOD_OMP_PRAGMAS^   \
             USE_ACC               = $USE_ACC

source $Me:h/post-common

exit(0)

