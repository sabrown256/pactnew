6/22/2015

PACT and PACTNEW are now sync'd as per the notice posted on
the pactatlab mailing list on 6/8/2015.  They are the same version.


1/05/2015

ULTRA changes:

1) ULTRA is now a pcsh script like PDBView.  This means that
   users must have the full path to ULTRA in their PATH variables.
   The best way to do this is to add the following to their
   .cshr file:

       set path = ( /usr/local/apps/pactnew/bin $path )

2) An inconsistency bug was fixed affecting color usages.  Users
   wanting a white background should change any line in their
   .ultrarc file that looks like:

      background-color-flag white

   to

      background-color-flag on


6/5/2012

For a long time the PACT Python bindings
were made using the Python Numeric package.  This has been
superceeded by the NumPy package.  When we build PACT
we look for both Numeric and NumPy now.  Because the two
packages have some differences we build a set of bindings for
each one that is available.  Since Numeric is the original package,
the bindings using it are in:

     /usr/local/apps/pactnew/gnu/lib/pythond.d/pact

and the new Numeric bindings are in:

     /usr/local/apps/pactnew/gnu/lib/pythond.d/pact_2

Each of those directories will be there if and only if the
Python package that it corresponds to is there.

The Chaos 5 machines appear to have only the NumPy package
and consequently only the pact_2 bindings.

To use the Numeric bindings you do:

    setenv PYTHONPATH  /usr/local/apps/pactnew/gnu/lib/pythond.d/pact

    and

    import pact.pdb as pdb

To use the NumPy bindings you do:

    setenv PYTHONPATH  /usr/local/apps/pactnew/gnu/lib/pythond.d/pact_2

    and

    import pact_2.pdb as pdb


1/26/2011

PDBLib supports C99 data types (version 26).

SCORE type manager expanded and made integral to
PACT in general.  The template utility was added to
generate functions for specified data types.  The
advantage over macros is debuggability and more
nearly first class behavior with respect to types.

More general polygon intersection handles non-simple,
non-convex polygons, multiple discreet polygon
intersections, and polygon unions as well.


11/10/2009

For developers, moved and consolidated "most"
#define'd constants into named enum's.  This allows the
compiler to do better error checking and helps in debugging
where you see symbolic names rather than numerical values.


For end users, there are many, many new features:

1) ULTRA now has a fill command to allow you to color
   the area under curves or fill closed curves.

2) Colors can be expressed as RGB values in many
   contexts.  I intend to get them all in time.
   An RGB color is specified as:

      #x7frrggbb

   where r, g, and b above are hex digits.

3) If you do the following in your .ultrarc

   ld mouse.scm

   you can can control the viewport with the
   mouse.  The functionality is more or less modelled
   after the Google map and other similar usages.

4) PDBView can now look at PDB files inside TAR
   files or AR archives.  This currently works only
   with a serial version of PDBView

5) PDBView can read mySQL and SQLite databases.
   Writing capabilities will come next.  This capability
   depends on the appropriate libraries and headers
   being installed on the platform where PACT is built.

6) A rudimentary ability to write PDB files which are
   plain text.  This will be fully developed in future
   releases.

01/10/2008

Collect PGS global attribute variables into struct and add
PG_get_attrs_glb, PG_set_attrs_glb, and PG_ptr_attrs_glb as the
sole accessors.  This keeps PGS state from conflicting with
applications or forcing them to change unnecessarily.

11/18/2007

Divide headers into public and private parts.  The publics parts
have the old names (e.g. score.h).  The private parts have the
old name with _int added (e.g. score_int.h).  Move most of the
_XX variables and functions into the private headers to hide them
from applications which should use standard accessors in the
public parts.


04/19/2006

Introduce PDB format version III.


08/13/2004

Introduce the hserve utility.
