#!/bin/csh -f
#
# PERDB8 - test authentication
#        - NOTE: cannot do 'ls -l' on results because the formats
#        - for ls are all over the place, even the permissions get
#        - hosed with access list syntax
#

unalias *

@ err = 0

set opt = "-l"
set db  = ./db8

setenv PERDB_PATH $db

set lst = ( 1 2 3 4 )
#set lst = ( 1 )
foreach i ($lst)

# NOTE: the current model is that the server and client must
# both be authenticating or neither be authenticating
# a mixed mode is rejected

   switch ($i)
      case 1:
           set msg = "no authentication"
           set ac  = ""
           set as  = ""
           set est = 0
           breaksw
      case 2:
           set msg = "with authentication"
           set ac  = "-a"
           set as  = "-a"
           set est = 0
           breaksw
      case 3:
           set msg = "with authentication on server"
           set ac  = ""
           set as  = "-a"
           set est = 0
           breaksw
      case 4:
           set msg = "with authentication on client"
           set ac  = "-a"
           set as  = ""
           set est = 0
           breaksw
   endsw

   echo "-----------------------------------"
   echo "   $msg"

   rm -f db8* >& /dev/null
   sign -q db8. >& /dev/null
#   ls-jobs -q | grep bin/perdb

   perdb $opt $as v1=$i
   @ err = $err + $status

   ls -1 $db.conn

   set v1 = ( `perdb $opt $ac v1` )
   set xstatus = $status

   if ($xstatus == $est) then
      echo "-> v1 = |$v1| ok"
   else
      echo "-> v1 = |$v1| ng"
      @ err = $err + 1
   endif

   perdb $opt $as quit:
#   sleep 1
   ls -1 $db.[cd]*

end

echo "-----------------------------------"

sign -q db8. >& /dev/null
rm -f db8* >& /dev/null

exit($err)

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

echo "-----------------------------------"
echo "   no authentication"

rm -f db8* >& /dev/null
sign -q db8
ls-jobs

perdb $opt v1=1
ls -1 $db.conn

perdb $opt v1
set v1 = ( `perdb $opt v1` )
echo "-> v1 = |$v1| ($status)"

perdb $opt quit:
sleep 1
ls -1 $db*

echo "----------------"
echo "   with authentication"

rm -f db8* >& /dev/null
sign -q db8
ls-jobs

perdb $opt -a v1=2
ls -1 $db.conn

set v1 = ( `perdb $opt -a v1` )
echo "-> v1 = |$v1| ($status)"

perdb $opt -a quit:
sleep 1
ls -1 $db*

echo "----------------"
echo "   with authentication on server"

rm -f db8* >& /dev/null
sign -q db8
ls-jobs

perdb $opt -a v1=3
ls -1 $db.conn

set v1 = ( `perdb $opt v1` )
echo "-> v1 = |$v1| ($status)"

perdb $opt quit:
sleep 1
ls -1 $db*

echo "----------------"
echo "   with authentication on client"

rm -f db8* >& /dev/null
sign -q db8
ls-jobs

perdb $opt v1=4
ls -1 $db.conn

#perdb $opt -a v1
set v1 = ( `perdb $opt -a v1` )
echo "-> v1 = |$v1| ($status)"

perdb $opt -a quit:
sleep 1
ls -1 $db*
rm -f db8* >& /dev/null

echo "-----------------------------------"

sign -q db8

exit($status)
