#!/bin/csh -f
#
# PS-PAGE - break a multipage PS file generated by PGS
#         - into a family of files with one page per file
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

@ err = 0

set fa = ""
set sfx = png

while ($#argv > 0)
   switch ($1)
      case -h:
           echo ""
           echo "Usage: ps-page [-h] [-s <sfx>] <file>*"
           echo "   h  this help message"
           echo "   s  set suffix to <sfx>"
           echo "      use jpg to compare JPEG files"
           echo "      use png to compare PNG files (default)"
           echo ""
           exit(1)
           breaksw
      default:
           set fa = ( $fa $1 )
           breaksw
   endsw
   shift
end

if ("$fa" == "") then
   echo "No file specified - exiting"
   exit(1)

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

else
   
   set prolog = $cwd/prolog-$$.ps

   foreach f ($fa)

# get prolog
      cat $f                                          | \
      awk '$1 == "%%Page:" {exit(0);}                   \
           {print}' >&! $prolog

# write the page files
      @ n = ( `grep "Pend showpage" $f | wc -l` )
      @ i = 0
      while ($i < $n)
         @ i = $i + 1
         set fp = $fa:r
         set fp = $fp-$i.ps

         echo -n "Writing page #$i to $fp ... "

         cat $prolog >&! $fp

         cat $f                                                | \
         awk 'BEGIN {inp = 0; nps = 0 ; npe = 0; npr = '$i';}    \
              $1 == "%%Page:" {nps++; inp = (nps == npr);}       \
              inp == 1 {print}                                   \
              $0 == "Pend showpage" {npe++;                      \
                                     if (inp == 1)               \
                                         exit(0);}' >>& $fp

         echo "" >>& $fp
         echo "%%Trailer" >>& $fp
         echo "%%EOF" >>& $fp
         echo "done"
      end

# clean up
      rm -f $prolog

   end

endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

exit($err)

