#!/bin/csh -f
#
# TRANS - PDB character translation test
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

InitLog Log $TestDir/log.trans.$LogSfx

set msg = "PDB Translation Test ..............."
set exe = $BinDir/pdctrns
set io  = flog

NoteD $Log ""
NoteD $Log "                    $msg"
Note $Log ""

flog $Log pushd $SrcDir
flog $Log pact trans
set xstatus = $status
flog $Log popd

if ($xstatus != 0) then
   NoteD $Log ""
   NoteD $Log "                         Can't build PDB Test Programs"
else

   set TFile  = $FilesDir/tst-ascii-7.txt

   if ("$Valgrind" == "") then

      Separator $Log
      NoteD $Log -n "                        from ......................."
      Note $Log ""
      @ lerr = 0
      set lst = ( -oe tst-ebcdic.res -o5 tst-ita2.res -o6 tst-ascii-6.res -o7 tst-ascii-7.res )
      while ($#lst > 0)
         set ostd = $lst[1]
         set file = $lst[2]
         set ref  = $RefDir/$file:r.ref
         shift lst
         shift lst
         Note $Log "-------------------"
         Note $Log "   $ostd   $file"

         set opt = ( $ostd $TFile -f $file )
         source ../../../scripts/test-run

#         flog $Log $CFE $exe $ostd $TFile -f $file
         if ($xstatus >= 254) then
            NoteD $Log -n "o"
         else if ($xstatus != 0) then
            @ lerr = $lerr + 1
            NoteD $Log -n "x"
         else if (-f $ref) then
            flog $Log diff $file $ref
            if ($status != 0) then
               @ lerr = $lerr + 1
               NoteD $Log -n "+"
            else
               NoteD $Log -n "."
            endif
         else
            flog $Log cp $file $ref
            NoteD $Log -n "."
         endif
      end
      set xstatus = $lerr
      if ($lerr == 0) then
         NoteD $Log " ok"
      else
         NoteD $Log " ng ($lerr)"
      endif

      Separator $Log
      NoteD $Log -n "                        to ........................."
      Note $Log ""
      @ lerr = 0
      set lst = ""
      set lst = ( $lst -ie tst-ebcdic.ref tst-ascii-7.ref )
      set lst = ( $lst -i5 tst-ita2.ref tst-ascii-7-5.ref )
      set lst = ( $lst -i6 tst-ascii-6.ref tst-ascii-7-6.ref )
      set lst = ( $lst -i7 tst-ascii-7.ref tst-ascii-7.ref )
      while ($#lst > 0)
         set istd = $lst[1]
         set file = $RefDir/$lst[2]
         set ref  = $RefDir/$lst[3]
         set res  = tmp.txt
         shift lst
         shift lst
         shift lst
         Note $Log "-------------------"
         Note $Log "   $istd   $file   $ref"

         set opt = ( $istd $file -f $res )
         source ../../../scripts/test-run

         if ($xstatus >= 254) then
            NoteD $Log -n "o"
         else if ($xstatus != 0) then
            @ lerr = $lerr + 1
            NoteD $Log -n "x"
         else if (-f $ref) then
            flog $Log diff -i $res $ref
#            flog $Log cmp -l $res $ref
            if ($status != 0) then
               NoteD $Log -n "+"
               flog $Log cat $res
            else
               NoteD $Log -n "."
            endif
         else
            flog $Log cp $res $ref
            NoteD $Log -n "."
         endif
         flog $Log $RM $res
      end
      set xstatus = $lerr
      if ($lerr == 0) then
         NoteD $Log " ok"
      else
         NoteD $Log " ng ($lerr)"
      endif

   else
      flog $Log $Valgrind $exe -oe $TFile -f tst-ebcdic.txt
      set xstatus = $status
   endif
endif

touch tst-foo
set rpf = ( $rpf tst-*)
rm tst-foo

$TEST_CHECK part -a trans -e $xstatus -x $exe -rpf "$rpf" "$msg"

exit($status)
