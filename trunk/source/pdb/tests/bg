#!/bin/csh -f
#
# BG - PDBNet foreground/background tests
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "PDBNET Background Test ........."

set PNFGBG = $SrcDir/tests/pnfgbg

set LogFB = log.fgbg.$LogSfx

NoteD $Log ""
NoteD $Log -n "                    $msg"
Note $Log ""

# PDBNET Background test
      set ok = TRUE
      if ($?DP_Path == 1) then
         if ("$DP_Path" != "") then
            set ok = FALSE
         endif
      endif

      set TCSH = `which tcsh`
      if (($ok == TRUE) && ($?CROSS_COMPILE == 0) && (-x "$TCSH")) then

# do foreground part
         NoteD $Log "                       foreground .........."
         Note $Log "( $CROSS_FE tcsh -f $PNFGBG -fg ) >&! res.fg"
         $CROSS_FE tcsh -f $PNFGBG -fg >&! res.fg
         set xstatus = $status

         cat res.fg
         flog $Log cat $LogFB

         $TEST_CHECK part -a bg_foreground -e $xstatus -l -rpf "$rpf" none

         @ nerr = $nerr + $status

# do background part
         NoteD $Log "                       background .........."
         Note $Log "( $CROSS_FE tcsh -f $PNFGBG -bg & ) >&! res.bg"
         ( $CROSS_FE tcsh -f $PNFGBG -bg & ) >&! res.bg
         set xstatus = $status

         @ count = 0
         while ($count < 20)
            sleep 5
            flog $Log grep "Exit status = " $LogFB
            if ($status == 0) break
            @ count = $count + 1
         end
         flog $Log sign pnfgbg

         cat res.bg
         flog $Log cat $LogFB

         $TEST_CHECK part -a bg_background -e $xstatus -l -rpf "$rpf" none

         @ nerr = $nerr + $status

         set rpf = ( $rpf res.fg res.bg )

      endif

$TEST_CHECK part -a bg -e $nerr -rpf "$rpf" none

exit($status)


