#!/bin/csh -f
#
# SQL - analyze platform SQL
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "----- analyze/sql -----"
Note $ALog "Analyze: MySQL and SQLite"
Note $ALog ""

dbmget $ALog HSY_RootInc^                  \
             HSY_RootLib^                  \
             SQL_Inc    =\? ""^            \
             SQL_Lib    =\? ""^            \
             SQL_RPath  =\? $HSY_RootLib^  \
             SQL_Path   =\? /usr^          \
             MYSQL_SO   =\? ""^            \
             SQLITE3_SO =\? ""^            \
             HAVE_SQL   =\? FALSE^         \
             Cfe_CC_Exe^                   \
             Cfe_CC_Flags^                 \
             Cfe_LD_Flags^                 \
             Cfe_LD_Lib^                   \
             Cfe_LD_RPath^                 \
             LD_Lib^                       \
             LIB^                          \
             LibM_Lib^                     \
             PACT_CC_VERSION^              \
             RF_Linking^                   \
             RPATH

# if we have explicitly said we do not want SQL
# do NOT detect it
if ("$SQL_Path" == none) then
   NoteD $ALog "      no SQL (by request)"

else

   set incl = ""
   set pthl = ""
   set libl = ""
   set spkl = ""
   set esql = FALSE

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# MYSQL

   Separator $ALog
   Note $ALog "MYSQL"
   Note $ALog ""

   set lvms = ""

   set UTime = `timer -r`

# write a little MYSQL test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   cat << EOF >! $Tmp.c
#include <stdlib.h>
#include <stdio.h>
#include <mysql.h>
int main(int c, char **v)
{MYSQL *conn;
 conn = mysql_init(NULL);
 if (mysql_real_connect(conn, v[1], v[2], NULL, v[3], 0, NULL, 0) != NULL)
    mysql_query(conn, "SET NAMES 'utf8'");
 printf("%s\n", MYSQL_SERVER_VERSION);
 return(0);}
EOF

   set lIncDirs = ""
   set lLibDirs = ""
   foreach i ($SQL_Path)
      set lIncDirs = ( $lIncDirs $i/include )
      set lLibDirs = ( $lLibDirs $i/$LIB )
   end
   set lIncDirs = ( $lIncDirs /usr/local/include $HSY_RootInc/mysql $HSY_RootInc )
#   set lLibDirs = ( $lLibDirs /usr/local/lib /usr/$LIB/mysql /usr/lib/mysql /usr/$LIB /sw/lib/mysql )
   set lLibDirs = ( $lLibDirs /usr/local/lib /usr/lib/mysql /usr/$LIB /sw/lib/mysql )

   set Implicit = FALSE
   set lHdrs    = ( mysql.h )
   set ASList   = ( a so )
   set lLib     = mysqlclient
   set lFile    = $Tmp
   set lKeep    = TRUE

   set lALibs = ""
   foreach i ( `var-list -l $RPATH` )
       set lALibs = ( $lALibs -L$i )
   end
   set lALibs = ( $lALibs $LD_Lib $LibM_Lib -lz )

   source $PSY_AnaDir/find-package

   if (("$PckLib" != "") && ("$PckInc" != "")) then
      set esql = TRUE
      if (("$PckInc" != "none") && ("$PckInc" != "-I$HSY_RootInc")) then
         set incl = ( $incl $PckInc )
      endif
      if ("$PckPath" != "") then
         set pthl = ( $pthl $PckPath )
      endif
      if (($RF_Linking == dynamic) && ($?lSO == 1)) then
         flog $ALog setenv MYSQL_SO    $lSO
      else
         set libl = ( $libl $PckLib )
      endif
      flog $ALog set spkl = ( $spkl mysql )

      flog $ALog setenv HAVE_MYSQL  TRUE

      flog $ALog $Tmp
      set lvms = ( `$Tmp` )

   else
      flog $ALog setenv HAVE_MYSQL  ""
   endif

   flog $ALog $RM $Tmp $Tmp.c

   set ETime = `timer -b $UTime`

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# SQLITE - version 1

   Separator $ALog
   Note $ALog "SQLITE 1"
   Note $ALog ""

   set lvsl = ""

   set UTime = `timer -r`

# write a little SQLITE test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   cat << EOF >! $Tmp.c
#include <stdlib.h>
#include <stdio.h>
#include <sqlite3.h>
int main(int c, char **v)
{sqlite3 *conn;
 sqlite3_open(v[1], &conn);
 printf("%s\n", SQLITE_VERSION);
 return(0);}
EOF

   if ($?SQL_Path == 1) then
      set lIncDirs = ( $SQL_Path/include /usr/local/include $HSY_RootInc )
      set lLibDirs = ( $SQL_Path/$LIB /usr/local/lib /usr/$LIB )
   else
      set lIncDirs = ( /usr/local/include $HSY_RootInc )
      set lLibDirs = ( /usr/local/lib /usr/$LIB )
   endif
   set Implicit = FALSE
   set lHdrs    = ( sqlite3.h )
   set ASList   = ( a so )
   set lLib     = sqlite3
   set lFile    = $Tmp
   set lKeep    = TRUE

   set lALibs = ""
   foreach i ( `var-list -l $RPATH` )
       set lALibs = ( $lALibs -L$i )
   end
   set lALibs = ( $lALibs $LD_Lib )

   source $PSY_AnaDir/find-package

   if (("$PckLib" != "") && ("$PckInc" != "")) then
      set esql = TRUE
      if (("$PckInc" != "none") && ("$PckInc" != "-I$HSY_RootInc")) then
         set incl = ( $incl $PckInc )
      endif
      if ("$PckPath" != "") then
         set pthl = ( $pthl $PckPath )
      endif
      if (($RF_Linking == dynamic) && ($?lSO == 1)) then
         flog $ALog setenv SQLITE3_SO    $lSO
      else
         set libl = ( $libl $PckLib )
      endif
      flog $ALog set spkl = ( $spkl sqlite )

      flog $ALog setenv HAVE_SQLITE TRUE

      flog $ALog $Tmp
      set lvsl = ( `$Tmp` )

   else
      flog $ALog setenv HAVE_SQLITE ""
   endif

   flog $ALog $RM $Tmp $Tmp.c

   set ETime = `timer -b $UTime`

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# SQLITE - version 2

   Separator $ALog
   Note $ALog "SQLITE 2"
   Note $ALog ""

   set UTime = `timer -r`

# write a little SQLITE test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   cat << EOF >! $Tmp.c
#include <stdlib.h>
#include <stdio.h>
#include <sqlite3.h>
int main(int c, char **v)
{sqlite3 *conn;
 sqlite3_open_v2(v[1], &conn,
		 SQLITE_OPEN_READONLY | SQLITE_OPEN_NOMUTEX,
  	         NULL);
 printf("%s\n", SQLITE_VERSION);
 return(0);}
EOF

   if ($?SQL_Path == 1) then
      set lIncDirs = ( $SQL_Path/include /usr/local/include $HSY_RootInc )
      set lLibDirs = ( $SQL_Path/lib /usr/local/lib /usr/$LIB )
   else
      set lIncDirs = ( /usr/local/include $HSY_RootInc )
      set lLibDirs = ( /usr/local/lib /usr/$LIB )
   endif
   set Implicit = FALSE
   set lHdrs    = ( sqlite3.h )
   set ASList   = ( a so )
   set lLib     = sqlite3
   set lFile    = $Tmp
   set lKeep    = TRUE
   set lALibs   = ( $LD_Lib )

   source $PSY_AnaDir/find-package

   if (("$PckLib" != "") && ("$PckInc" != "")) then
      set esql = TRUE
      if (("$PckInc" != "none") && ("$PckInc" != "-I$HSY_RootInc")) then
         set incl = ( $incl $PckInc )
      endif
      if ("$PckPath" != "") then
         set pthl = ( $pthl $PckPath )
      endif
      if (($RF_Linking == dynamic) && ($?lSO == 1)) then
         flog $ALog setenv SQLITE3_SO    $lSO
      else
         set ok = TRUE
         foreach l ($libl)
            if ("$PckLib" =~ *$l*) then
               set ok = FALSE
               break
            endif
         end
         if ($ok == TRUE) then
            set libl = ( $libl $PckLib )
         endif
         unset ok
      endif

      flog $ALog setenv HAVE_SQLITE_V2 TRUE
      flog $ALog setenv HAVE_SQLITE    TRUE

      flog $ALog $Tmp
      set lvsl = ( `$Tmp` )

   else
      flog $ALog setenv HAVE_SQLITE_V2 ""
   endif

   flog $ALog $RM $Tmp $Tmp.c

   set ETime = `timer -b $UTime`

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   Separator $ALog
   Note $ALog "Finish"
   Note $ALog ""

   flog $ALog setenv SQL_Inc   "$incl"
   flog $ALog setenv SQL_Lib   "$libl"
   flog $ALog setenv SQL_RPath "$pthl"

# NOTE: used SQL_Path to find libs, incs - there are no executables
   if ("$SQL_Path" == /usr) then
      flog $ALog setenv SQL_Path  ""
   endif

   foreach p ($pthl)
      setenv RPATH   ${RPATH}:$p
   end

   if ($esql == TRUE) then
      flog $ALog setenv HAVE_SQL   TRUE
      NoteD $ALog "      has SQL ($spkl)"
   else
      NoteD $ALog "      no SQL"
   endif

# export the results
   dbmset $ALog SQL_Inc         = $SQL_Inc^        \
                SQL_Lib         = $SQL_Lib^        \
                SQL_RPath       = $SQL_RPath^      \
                SQL_Path        = $SQL_Path^       \
                HAVE_MYSQL      = $HAVE_MYSQL^     \
                MYSQL_SO        = $MYSQL_SO^       \
                MYSQL_VERSION   = $lvms^           \
                HAVE_SQLITE     = $HAVE_SQLITE^    \
                HAVE_SQLITE_V2  = $HAVE_SQLITE_V2^ \
                SQLITE3_SO      = $SQLITE3_SO^     \
                SQLITE3_VERSION = $lvsl^           \
                RPATH           = $RPATH

endif

dbexp HAVE_SQL

exit(0)

