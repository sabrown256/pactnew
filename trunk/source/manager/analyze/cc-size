#!/bin/csh -f
#
# CC-SIZE - analyze the integer type sizes
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

Note $ALog "----- analyze/cc-size -----"
Note $ALog "Analyze: Find Integer Sizes"
Note $ALog ""

dbmget $ALog AF_INT4       =\? int^   \
             AF_INT8       =\? long^  \
             CROSS_FE^                \
             PACT_CC_VERSION

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

cat << EOF >! $Tmp.c
#include <stdio.h>
#include <stdlib.h>
int main(int c, char **v)
{long long i;
 i = strtoll("3", NULL, 10);
 return(0);}
EOF

flog $ALog $lCC $Tmp.c -o $Tmp
set xstatus = $status
if ($xstatus == 0) then
   setenv HAVE_LONG_LONG FALSE
else
   Note $ALog ""
   Note $ALog "--Compilation failed--"
   Note $ALog "/* $lCC $Tmp.c -o $Tmp */"
   cat $Tmp.c >>& $ALog

   setenv HAVE_LONG_LONG TRUE
endif

flog $ALog rm -f $Tmp.c $Tmp

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# AF_INT4

cat << EOF >! $Tmp.c
#include <stdio.h>
int main(int c, char **v)
{
 if (sizeof(int) == 4)
    printf("int\n");
 else if (sizeof(long) == 4)
    printf("long\n");
 else
    printf("unknown\n");
return(0);}
EOF

flog $ALog $lCC $Tmp.c -o $Tmp
set xstatus = $status
if ($xstatus == 0) then
   fexec $ALog $CROSS_FE $Tmp @o2 @e3 vw:AF_INT4 @ fw:/dev/null
else
   Note $ALog ""
   Note $ALog "--Compilation failed--"
   Note $ALog "/* $lCC $Tmp.c -o $Tmp */"
   cat $Tmp.c >>& $ALog
endif

flog $ALog rm -f $Tmp.c $Tmp

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# AF_INT8

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

if ($HAVE_LONG_LONG == FALSE) then
   goto VERSIONA
else
   goto VERSIONB
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

VERSIONA:

   cat << EOF >! $Tmp.c
#include <stdio.h>
int main(int c, char **v)
{
 if (sizeof(int) == 8)
    printf("int\n");
 else if (sizeof(long) == 8)
    printf("long\n");
 else
    printf("unknown\n");
return(0);}
EOF

   goto COMPILE

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

VERSIONB:

   cat << EOF >! $Tmp.c
#include <stdio.h>
int main(int c, char **v)
{
 if (sizeof(int) == 8)
    printf("int\n");
 else if (sizeof(long) == 8)
    printf("long\n");
 else if (sizeof(long long) == 8)
    printf("long long\n");
 else
    printf("unknown\n");
return(0);}
EOF

   goto COMPILE

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

COMPILE:

flog $ALog $lCC $Tmp.c -o $Tmp
set xstatus = $status
if ($xstatus == 0) then
   fexec $ALog $CROSS_FE $Tmp @o2 @e3 vw:AF_INT8 @ fw:/dev/null
else
   Note $ALog ""
   Note $ALog "--Compilation failed--"
   Note $ALog "/* $lCC $Tmp.c -o $Tmp */"
   cat $Tmp.c >>& $ALog
endif

flog $ALog rm -f $Tmp.c $Tmp

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

dbmget $ALog AF_INT4^   \
             AF_INT8

Note $ALog ""
Note $ALog "Integer size info:"
Note $ALog "   AF_INT4        = $AF_INT4"
Note $ALog "   AF_INT8        = $AF_INT8"
Note $ALog "   HAVE_LONG_LONG = $HAVE_LONG_LONG"
Note $ALog ""

dbexp HAVE_LONG_LONG

source $Me:h/post-common

exit(0)

