#!/bin/csh -f
#
# READLINE - analyze platform READLINE
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Separator $Log
Note $Log "Analyze: readline"

# vanilla place to look if previously undefined
SafeEnv MD_Inc     ""
SafeEnv MD_Lib     ""
SafeEnv MD_Pck     ""
SafeEnv RL_Path   /usr
SafeEnv RL_RPath  /usr/${LIB}
SafeEnv RL_Inc    ""
SafeEnv RL_Lib    ""
SafeEnv HAVE_READLINE   FALSE

# if we have explicitly said we do not want READLINE
# do NOT detect it
if ("$RL_Path" == none) then
   NoteD $ALog "      no readline (by request)"

else

   set incl = ""
   set pthl = ""
   set libl = ""
   set spkl = ""

   set UTime = `timer -r`

# write a little readline test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   cat << EOF >! $Tmp.c
#include <stdio.h>
#include <readline/readline.h>
#include <readline/history.h>
int main(int c, char **v)
{int rv;
 char *(*f)(const char *p);
 f  = readline;
 rv = (f == NULL);
 return(rv);}
EOF

   setenv HAVE_READLINE FALSE

   set libl = ( -lreadline -lcurses )
   set opt  = ""
   set opt  = ( $opt $CC_Flags $Cfe_LD_Flags $Cfe_LD_RPath $libl )
   flog $ALog $CC_Exe $Tmp.c -o $Tmp $opt
   if ($status == 0) then
      flog $ALog $CFE $Tmp
      if ($status == 0) then
         setenv HAVE_READLINE TRUE
         flog $ALog setenv MD_Lib        "$libl $MD_Lib"
         flog $ALog setenv MD_Pck        "$MD_Pck RL"
         flog $ALog setenv RL_Lib        "$libl"
         set spkl = ( $libl )
         flog $ALog $RM $Tmp.c $Tmp
      endif
   endif

   if ("$RL_Lib" != "") then
      flog $ALog setenv HAVE_READLINE   TRUE
      NoteD $ALog "      has readline ($spkl)"
   else
      NoteD $ALog "      no readline"
   endif

# export the results
   SetParent RPATH
   SetParent MD_Lib
   SetParent MD_Pck
   SetParent RL_Path
   SetParent RL_RPath
   SetParent RL_Lib
   SetParent RL_Inc
   SetParent HAVE_READLINE

endif

SetParent HAVE_READLINE

exit(0)

