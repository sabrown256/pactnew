#!/bin/csh -f
#
# CC-FLOAT16 - analyze long double support for C compiler
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "----- analyze/cc-float16 -----"
Note $ALog "Analyze: C90 long double support"
Note $ALog ""

dbmget $ALog CROSS_FE^        \
             PACT_CC_VERSION

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# detect long double support

Separator $ALog

cat << EOF >! $Tmp.c
#include <float.h>
#include <limits.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
int main(int c, char **v)
   {int rv;
    double y;
    long double b, d;
    char s[100];
    b = sqrtl(2.0);
    y = sqrt(2.0);
    d = fabsl(b - y);
    printf("max = %50.42Le\n", LDBL_MAX);
    printf("b = %44.34Le\n", b);
    printf("d = %44.34Le\n", d);
    if ((1.414 < b) && (b < 1.415) && (1.0e-18 < d) && (d < 1.0e-14))
       {rv = 2;
        fprintf(stderr, "TRUE\n");}
    else
       {rv = 1;
        fprintf(stderr, "FALSE\n");};
    return(rv);}
EOF

flog $ALog cat $Tmp.c

# AF_LONG_DOUBLE
#   0 - no long double support
#   1 - have non-standard long double support
#   2 - have standard long double support

# no long double support at all
setenv AF_LONG_DOUBLE 0
set ld = "no long double support"

flog $ALog $lCC $Tmp.c -o $Tmp -lm
if ($status == 0) then
   fexec $ALog $CROSS_FE $Tmp @o2 @e3 fa:$ALog @ vw:HAVE_ANSI_FLOAT16
   flog $ALog setenv AF_LONG_DOUBLE $gstatus[1]
   if ($AF_LONG_DOUBLE == 2) then
      set ld = "has long double support"
   else
      set ld = "has broken long double support"
   endif
endif

rm -f $Tmp $Tmp.c $Tmp.o

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# detect long double I/O issues

Separator $ALog

cat << EOF >! $Tmp.c
#include <float.h>
#include <limits.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
int main(int c, char **v)
   {int rv;
    long double b;
    char s1[100],  s2[100];
    b = sqrt(2.0);
    snprintf(s1, 100, "%50.42Le", b);
    snprintf(s2, 100, "%50.42le", b);
    if (strstr(s1, "1.4142135623730") != NULL)
       {rv = 2;
        printf("standard long double I/O\n");}
    else if (strstr(s2, "1.4142135623730") != NULL)
       {rv = 1;
        printf("non-standard long double I/O\n");}
    else
       {rv = 0;
        printf("no long double I/O\n");}
    return(rv);}
EOF

flog $ALog cat $Tmp.c

# AF_LONG_DOUBLE_IO
#   0 - no long double I/O
#   1 - have non-standard long double I/O (%le instead of %Le)
#   2 - have standard long double I/O (%Le)

flog $ALog $lCC $Tmp.c -o $Tmp -lm
if ($status == 0) then
   fexvars $ALog ldio $CROSS_FE $Tmp
   flog $ALog setenv AF_LONG_DOUBLE_IO $gstatus[1]
else
   flog $ALog set ldio = "no long double I/O"
   flog $ALog setenv AF_LONG_DOUBLE_IO 0
endif

rm -f $Tmp $Tmp.c $Tmp.o

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

Separator $ALog

NoteD $ALog "      $ld ($ldio)"

dbmset $ALog AF_LONG_DOUBLE    = $AF_LONG_DOUBLE^              \
             AF_LONG_DOUBLE_IO = $AF_LONG_DOUBLE_IO
