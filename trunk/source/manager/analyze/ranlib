#!/bin/csh -f
#
# RANLIB - analyze the platform ranlib utility
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "----- analyze/ranlib -----"
Note $ALog "Analyze: ranlib utility"
Note $ALog ""

dbmget $ALog AR_Exe   =\? ar^    \
             AR_Flags =\? ""^    \
             Cfe_CC_Exe^         \
             Cfe_CC_Flags

rm -f foo.c foo.o bar.c bar.o main.c libfoo.a $Tmp

# this script is necessary because some idiot ld writers insist
# that error messages be printed directly to /dev/tty in addition to
# stdout or stderr

rm -f load
touch load

Note load '#\!/bin/csh -f'
Note load "rm -f $Tmp.err"
Note load "$Cfe_CC_Exe $Cfe_CC_Flags main.c -o $Tmp" '$1' ">& $Tmp.err"
Note load 'grep -i "$1"' "$Tmp.err"
Note load 'set Value = $status'
Note load "rm -f $Tmp.err"
Note load 'exit($Value)'

chmod a+x load

if ($Cfe_CC_Exe != "") then

# build something to stick in an archive

cat << EOF >! foo.c
extern int bar();
int foo(int x){return(bar(x));}
EOF

   flog $ALog $Cfe_CC_Exe $Cfe_CC_Flags -c foo.c

cat << EOF >! bar.c
int bar(int x){return(x);}
EOF

   flog $ALog $Cfe_CC_Exe $Cfe_CC_Flags -c bar.c

# build a main to load with

cat << EOF >! main.c
extern int foo();
int main(int c, char **v)
{return(foo(0));}
EOF

   if ($?AR_IFlag == 0) then
      foreach i (rsc rc)
         setenv AR_IFlag $i
         flog $ALog $AR_Exe $AR_Flags $AR_IFlag libfoo.a bar.o foo.o
         if ($status == 0) then
            break
         endif
      end
   endif

   if ($?AR_XFlag == 0) then
      foreach i (x -x)
         setenv AR_XFlag $i
         flog $ALog $AR_Exe $AR_Flags $AR_XFlag libfoo.a
         if ($status == 0) then
            break
         endif
      end
   endif

# figure out what to do about RANLIB
   if ($?Ranlib_Exe == 0) then
      foreach i (touch ranlib)

         rm -f libfoo.a
         flog $ALog $AR_Exe $AR_Flags $AR_IFlag libfoo.a bar.o foo.o

         $i libfoo.a
         if ($status != 0) then
            continue
         endif

         load libfoo.a
         if ($status == 0) then
            continue
         endif

         setenv Ranlib_Exe "$i"
         break
      end

# GOTCHA: what if we still do not have ranlib?
      if ($?Ranlib_Exe == 0) then
         setenv Ranlib_Exe touch
      endif
   endif

   if ($Ranlib_Exe == ranlib) then
      flog $ALog ranlib -t libfoo.a
      if ($status == 0) then
         set ranlib_exe = "ranlib -t"
      else
         set ranlib_exe = "ranlib"
      endif
      NoteD $ALog "   Ranlib: $ranlib_exe"
   else
      NoteD $ALog "   Ranlib: no ranlib"
   endif

endif

rm -f foo.c foo.o bar.c bar.o main.c libfoo.a $Tmp load

# export the results
dbmset $ALog AR_Exe     = $AR_Exe^       \
             AR_Flags   = $AR_Flags^     \
             AR_IFlag   = $AR_IFlag^     \
             AR_XFlag   = $AR_XFlag^     \
             Ranlib_Exe = $Ranlib_Exe

exit(0)

