#!/bin/csh -f
#
# SUMMARY - summarize important PACT configuration information
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

set vl = ""
set vl = ( $vl HAVE_FORTRAN )
set vl = ( $vl HAVE_PYTHON HAVE_PY_NUMERIC HAVE_PY_NUMPY )
set vl = ( $vl MAKE_Shared_Libs PY_Exe PY_DirPy PY_DirSrc PY_DirDst )
set vl = ( $vl CC_Exe )
set vl = ( $vl FC_Exe FC_Flags Cfe_FC_Exe Cfe_FC_Flags )
set vl = ( $vl Yacc_Exe )

source $MngDir/write/import-db

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

    NoteD $Log "Configuration Summary"

    if (($?Cfe_CC_Exe == 0) || ("$Cfe_CC_Exe" == "none") || ("$Cfe_CC_Exe" == "")) then
       NoteD $Log "   ERROR: No C compiler available - check your system or your path"
       NoteD $Log ""
       exit(1)
    else
       set UCC = `$MngDir/pwhich $CC_Exe`
       NoteD $Log "   C Compiler used is $UCC"
    endif

    if ($HAVE_FORTRAN == FALSE) then
       if (($?Cfe_FC_Exe == 0) || ("$Cfe_FC_Exe" == "none")) then
          NoteD $Log "   No Fortran compiler found"
       else
          NoteD $Log "   Not building Fortran bindings"
       endif
    else if ("$Cfe_FC_Exe" == "") then
       NoteD $Log "   ERROR: No Fortran compiler available - check your system or your path"
       NoteD $Log ""
    else
       set UFC = `$MngDir/pwhich $FC_Exe`
       if (-x "$UFC") then
          NoteD $Log "   Fortran Compiler used is $UFC"
       else
          NoteD $Log "   Fortran Compiler requested is $Cfe_FC_Exe (not available)"
       endif
    endif

    if ("$Bits" != "") then
       NoteD $Log "   Building for $Bits bit pointers"
    endif

    if ($CROSS_COMPILE != "FALSE") then
       NoteD $Log "   Cross compiling for target $CROSS_COMPILE"
    endif

    if ($MAKE_Shared_Libs == TRUE) then
       NoteD $Log "   Building shared libraries"
    else
       NoteD $Log "   Building static libraries"
    endif

    Note $Log "   Cfg C Compiler used is $Cfe_CC_Exe"
    Note $Log "   Cfg Fortran Compiler used is $Cfe_FC_Exe"

    if ($AbsoluteDeb == TRUE) then
       NoteD $Log "   Building absolutely debuggable version"
       dbset BUILD_DEBUG TRUE
    endif

    if ($AbsoluteOpt == TRUE) then
       NoteD $Log "   Building absolutely optimized version"
       dbset BUILD_OPTIMIZE TRUE
    endif

    if ($Profile == TRUE) then
       NoteD $Log "   Building profiling version"
       dbset BUILD_PROFILE TRUE
    endif
       
# PY_Exe       the full path to the python executable
# PY_Vers      the version of the python executable
# PY_Path addition to path in order to find python executable
#             this comes from config files only
# PY_DirSrc    pact/dev/$arch/lib/pythond.d         (install to PY_DirDst and PY_DirPy)
# PY_DirDst    pact    lib/pythond.d                (install into)
# PY_DirPy     python  lib/pythond.d/site-packages  (install into)

    if (("$PY_Exe" != "") && ("$PY_Exe" != "wrong-cc") && \
        ("$PY_Exe" != "no-numeric") && ($MAKE_Shared_Libs == TRUE)) then
       flog $ALog mkdir -p $PY_DirPy

       NoteD $Log "   Python bindings will be built in:"
       NoteD $Log "      $PY_DirSrc"
       if ("$InstBase" != none) then
          NoteD $Log "   Python bindings will be installed in:"
          NoteD $Log "      $PY_DirDst"
          if (-d $PY_DirPy) then
             NoteD $Log "      $PY_DirPy"
          else
             NoteD $Log "      $PY_DirPy (no permissions)"
          endif
       endif
    else if ($MAKE_Shared_Libs == FALSE) then
       NoteD $Log "   Python bindings will not be built (need shared library option)"
    else if ("$PY_Exe" == "wrong-cc") then
       NoteD $Log "   Python bindings will not be built (wrong compiler)"
    else if ("$PY_Exe" == "no-numeric") then
       NoteD $Log "   Python bindings will not be built (no numeric extensions)"
    else if ("$PY_Exe" == "") then
       NoteD $Log "   Python bindings will not be built (no python)"
    endif

    if ("$Yacc_Exe" == "") then
       NoteD $Log "   Scheme syntax modes will not be built (no yacc or bison)"
    endif

    if ($UseTmpDir == TRUE) then
       NoteD $Log "   Doing fast builds using /tmp"
    endif

    NoteD $Log "   Building into $cwd:h/dev/$System"

    NoteD $Log ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

exit(0)

