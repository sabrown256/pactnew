#!/bin/csh -f
#
# CC-VALIST - analyze the handling of VA_LIST
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

Note $ALog "----- analyze/cc-valist -----"
Note $ALog "Analyze: VA_LIST handling"
Note $ALog ""

setenv HAVE_VA_COPY FALSE
setenv HAVE_VA_LIST TRUE

dbmget $ALog PACT_CC_VERSION

cat << EOF >! $Tmp.c
#include <stdarg.h>
int foo(va_list lst)
   {int i;
    va_list _a;
    va_copy(_a, lst);
    i = va_arg(_a, int);
    va_end(_a);
    return(i);}
int bar(int i, ...)
   {int j;
    va_list _a;
    va_start(_a, i);
    j = foo(_a);
    va_end(_a);
    return(j);}
int main(int c, char **v)
   {int i;
    i = bar(1, 2);
    return(i != 2);}
EOF

flog $ALog $lCC $Tmp.c -o $Tmp
if (($status == 0) && ($IBM_HW != BGL)) then
   setenv HAVE_VA_COPY TRUE
   NoteD $ALog "      has va_copy"
else
   Note $ALog ""
   Note $ALog "--Compilation failed--"
   Note $ALog "/* $lCC $Tmp.c -o $Tmp */"
   cat $Tmp.c >>& $ALog

   cat << EOF >! $Tmp.c
#include <stdarg.h>
void foo(va_list *lst)
   {int i;
    va_list _a;
    _a   = *lst;
    i    = va_arg(_a, int);
    *lst = _a;
    return;}
EOF

   flog $ALog $lCC -c $Tmp.c -o $Tmp.o
   set xstatus = $status
   if ($xstatus == 0) then
      NoteD $ALog "      has complete variable arg list support"
   else
      Note $ALog ""
      Note $ALog "--Compilation failed--"
      Note $ALog "/* $lCC -c $Tmp.c -o $Tmp */"
      cat $Tmp.c >>& $ALog

      setenv HAVE_VA_LIST FALSE
      NoteD $ALog "      has partial variable arg list support"
   endif
endif

rm -f $Tmp $Tmp.c $Tmp.o

# export the result
dbmset $ALog HAVE_VA_LIST = $HAVE_VA_LIST^  \
             HAVE_VA_COPY = $HAVE_VA_COPY

source $Me:h/post-common

exit(0)
