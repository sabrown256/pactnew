#!/bin/csh -f
#
# FORK - analyze platform fork/exec
#      - Computes: HAVE_FORK_EXEC
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "Analyze: fork/exec"

dbmget $ALog CC_Exe^          \
             CC_Flags^        \
             CROSS_FE^        \
             Cfe_LD_Flags^    \
             Cfe_LD_RPath^    \
             PACT_CC_VERSION

cat << EOF >! $Tmp.c
#include <stdlib.h>
#include <stdio.h>
int main(int c, char **v)
   {int rv;
    rv = system("echo 'foo bar baz' > /dev/null 2>&1");
    if (rv == 0)
       fprintf(stdout, "TRUE\n");
    else
       fprintf(stdout, "FALSE\n");
    return(rv);}
EOF

set ok = FALSE

set opt = ""
set opt = ( $opt $CC_Flags $Cfe_LD_Flags $Cfe_LD_RPath )
flog $ALog $CC_Exe $Tmp.c -o $Tmp $opt
if ($status == 0) then
   flog $ALog $CROSS_FE $Tmp
   if ($status == 0) then
      dbset HAVE_FORK_EXEC TRUE
      set ok = TRUE
   else
      dbset HAVE_FORK_EXEC FALSE
   endif
#   fexvar $ALog HAVE_FORK_EXEC $CROSS_FE $Tmp
#   if ($gstatus[1] == 0) then
#      set ok = TRUE
#   endif
endif

flog $ALog $RM $Tmp.c $Tmp

if ($ok == TRUE) then
   NoteD $ALog "      has working fork/exec"
else
   NoteD $ALog "      no working fork/exec"
endif

unset ok

exit(0)

