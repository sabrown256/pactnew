#!/bin/csh -f
#
# POLL - analyze the handling of poll or select
#      - Computes: HAVE_STREAMS, HAVE_SELECT
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "Analyze: poll"

dbmget $ALog HAVE_SELECT  =\? FALSE^  \
             HAVE_STREAMS =\? FALSE^  \
             Cfe_CC_Exe^              \
             Cfe_CC_Flags^            \
             Cfe_LD_Flags^            \
             Cfe_LD_RPath^            \
             PACT_CC_VERSION

set poll = ""

set IOHandling = ""

# check for select

cat << EOF >! $Tmp.c
#include <sys/time.h>
#include <sys/types.h>
#include <unistd.h>
int main(int c, char **v)
{fd_set as, bs, cs;
 struct timeval ds;
 select(0, &as, &bs, &cs, &ds);
 return(0);}
EOF

set FOUND_SELECT = FALSE

set opt = ""
set opt = ( $opt $Cfe_CC_Flags )
set opt = ( $opt $Cfe_LD_Flags $Cfe_LD_RPath )

flog $ALog $Cfe_CC_Exe $Tmp.c -o $Tmp $opt
if ($status == 0) then
   set IOHandling   = ($IOHandling select)
   set FOUND_SELECT = TRUE
   set poll = ( $poll select )
endif

rm -f $Tmp.c $Tmp

# check for poll

if (-f /usr/include/stropts.h) then
   cat << EOF >! $Tmp.c
#include <sys/poll.h>
#include <stropts.h>
int main(int c, char **v)
{struct pollfd as;
 poll(&as, 0, 0);
 return(0);}
EOF

else
   cat << EOF >! $Tmp.c
#include <poll.h>
int main(int c, char **v)
{struct pollfd as;
 poll(&as, 0, 0);
 return(0);}
EOF

endif

flog $ALog cat $Tmp.c

set FOUND_POLL = FALSE
flog $ALog $Cfe_CC_Exe $Tmp.c -o $Tmp $opt
if ($status == 0) then
   set IOHandling = ($IOHandling poll)
   set FOUND_POLL = TRUE
   set poll = ( $poll poll )
endif

rm -f $Tmp.c $Tmp

if ("$poll" == "") then
   NoteD $ALog "      no file polling"
else
   NoteD $ALog -n "      has $poll file polling"
   Note $ALog ""
endif

# make the decisions
if ($HAVE_SELECT == File) then
   if ($FOUND_SELECT == FALSE) then
      NoteD $ALog "   select requested but not found"
   else
      set FOUND_POLL = FALSE
   endif
endif
setenv HAVE_SELECT $FOUND_SELECT

if ($HAVE_STREAMS == File) then
   if ($FOUND_POLL == FALSE) then
      NoteD $ALog "   poll requested but not found"
   else
      set FOUND_SELECT = FALSE
   endif
endif
setenv HAVE_STREAMS $FOUND_POLL

if (($HAVE_SELECT == TRUE) && ($HAVE_STREAMS == TRUE)) then
   setenv HAVE_SELECT FALSE
   NoteD $ALog -n " (using poll)"
else if ($#IOHandling > 1) then
   if ($HAVE_STREAMS == TRUE) then
      NoteD $ALog -n " (using poll)"
   else if ($HAVE_SELECT == TRUE) then
      NoteD $ALog -n " (using select)"
   endif
endif

NoteD $ALog ""

# export the results
dbmset $ALog HAVE_STREAMS = $HAVE_STREAMS^   \
             HAVE_SELECT  = $HAVE_SELECT

exit(0)


