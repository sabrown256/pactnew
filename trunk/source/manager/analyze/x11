#!/bin/csh -f
#
# X11 - analyze platform X11
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Separator $Log
Note $Log "Analyze: x11"

dbini MDG_Inc           ""
dbini MDG_Lib           ""
dbini MDG_Pck           ""
dbini X11_Inc           $RootInc
dbini X11_Lib           ""
dbini X11_RPath         $RootLib
dbini X11_Path          /usr
dbini GRAPHICS_Windows  ""
dbini GRAPHICS_Devices  ""
dbini GRAPHICS_Flags    ""
dbini Std_UseX          TRUE

envini AnaDir           analyze
envini ALog             $cwd/cfg-$System/log.analyze
envini OS_Name           `uname -s`
envini Cfe_CC_Exe       "cc"
envini Cfe_CC_Flags     "-g"

set vl = ""
set vl = ( $vl RPATH )
source $MngDir/write/import-db

# if we have explicitly said we do not want X11
# do NOT detect it
if ("$X11_Path" == none) then
   NoteD $ALog "      no X11 (by request)"
   setenv Std_UseX FALSE

else if ($Std_UseX == TRUE) then

   set UTime = `timer -r`

   set lLibDirs = ""
   foreach i ($MDG_Lib)
      set j = $i:h
      if (-d $j) then
         set lLibDirs = ( $lLibDirs $j )
      endif
   end

# write a little X test that works around dumb Solaris
# on which XOpenDisplay hangs forever if it does not
# like the DISPLAY variable value
   if ($OS_Name == SunOS) then

      cat << EOF >! $Tmp.c
#include <stdint.h>
#include <X11/Xlib.h>
int main(int c, char **v)
{char *dsp;
 Display *d;
 volatile Display (*pf)(char *name);
 extern char *getenv(char *s);

 pf = XOpenDisplay;

 return(0);}
EOF

# write a little X test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   else

      cat << EOF >! $Tmp.c
#include <stdint.h>
#include <X11/Xlib.h>
int main(int c, char **v)
{char *dsp;
 Display *d;
 extern char *getenv(char *s);
 dsp = getenv("DISPLAY");
 if (dsp == NULL)
    dsp = ":0.0";
 d = XOpenDisplay(dsp);
 return(0);}
EOF
   endif

   set lIncDirs = ""
   set lLibDirs = ""
   foreach i ($X11_Path)
      set lIncDirs = ( $lIncDirs $i/include )
      set lLibDirs = ( $lLibDirs $i/$LIB )
   end
   set lIncDirs = ( $lIncDirs $X11_Inc )
   set lLibDirs = ( $lLibDirs $X11_RPath )

# the X11R6 directories are pretty much gone
# except for some older systems
   set lIncDirs = ( $lIncDirs /usr/X11R6/include )
   set lLibDirs = ( $lLibDirs /usr/X11R6/$LIB /usr/X11R6/lib )

   set Implicit = TRUE
   set lHdrs    = ( X11/Xlib.h )
   set ASList   = ( so a )
   set lLib     = X11
   set lFile    = $Tmp

   set lALibs = ""
   foreach i ( `var-list -l $RPATH` )
       set lALibs = ( $lALibs -L$i )
   end

   source $AnaDir/find-package

   if (("$PckLib" != "") && ("$PckInc" != "") && ($?IBM_BGL == 0)) then
      NoteD $ALog "      has X11 ($PckLib)"

#      setenv HAVE_SOCKETS   Envir
      setenv GRAPHICS_Windows             "X"
      setenv GRAPHICS_Devices  "$GRAPHICS_Devices X"
      setenv GRAPHICS_Flags     "$GRAPHICS_Flags -DX11"

      set lok = FALSE
      if ("$PckInc" != "none") then

# NOTE: we really mean /usr/include and not Root Inc here because
# all compilers automatically look to /usr/include but not necessarily
# to whatever RootInc is set to
         if (("$PckInc" != "-I/usr/include") || ($?IBM_BGP == 1)) then
            set lok = TRUE
         endif
      endif

      if ($lok == TRUE) then
         flog $ALog setenv MDG_Inc "$MDG_Inc $PckInc"
      endif
      unset lok

      if ("$PckPath" != "") then
         flog $ALog setenv RPATH    ${RPATH}:${PckPath}
      endif
      flog $ALog setenv MDG_Lib     "$MDG_Lib $PckLib"
      flog $ALog setenv MDG_Pck     "$MDG_Pck X11"
      flog $ALog setenv Std_UseX    TRUE
   else
      NoteD $ALog "      no X11"
      flog $ALog setenv Std_UseX    FALSE
   endif

   set ETime = `timer -b $UTime`

   setenv X11_Inc   "$PckInc"
   setenv X11_Lib   "$PckLib"
   setenv X11_RPath "$PckPath"

# NOTE: used X11_Path to find libs, incs - there are no executables we need
   if ("$X11_Path" == /usr) then
      setenv X11_Path  ""
   endif

# export the results
   dbexp MDG_Inc
   dbexp MDG_Lib
   dbexp MDG_Pck
   dbexp X11_Inc
   dbexp X11_Lib
   dbexp X11_RPath
   dbexp X11_Path
   dbexp RPATH
   dbexp GRAPHICS_Windows
   dbexp GRAPHICS_Devices
   dbexp GRAPHICS_Flags

   envexp RPATH

endif

dbexp Std_UseX

exit(0)

