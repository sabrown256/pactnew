#!/bin/csh -f
#
# FINISH - final environment adjustments
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Separator $Log
Note $Log "Analyze: finish"

dbmget $ALog AbsoluteDeb^              \
             CC_Exe^                   \
             CC_Flags^                 \
             CC_Optimize^              \
             CC_Debug^                 \
             FC_Optimize^              \
             FC_Debug^                 \
             Save_CC^                  \
             Save_CFLAGS^              \
             Cfe_CC_Inc^               \
             USE_IMF^                  \
             MD_Inc     =\? ""^        \
             MD_Lib     =\? ""^        \
             MD_Pck     =\? ""^        \
             Z_Inc^                    \
             Z_Lib^                    \
             Z_RPath^                  \
   	     HAVE_ZLIB^                \
             USE_MPI^                  \
             MDE_Lib      =\? ""^      \
             HAVE_DYNAMIC_LINKER^      \
             HAVE_BFD^                 \
             BFD_Lib^                  \
             MDI_Inc^                  \
             MDI_Lib^                  \
             MDI_Pck^                  \
             HDF_Inc^                  \
             HDF_Lib^                  \
             SQL_Inc^                  \
             SQL_Lib^                  \
             SSL_Inc^                  \
             SSL_Lib^                  \
             HAVE_READLINE^            \
             HAVE_HDF5^                \
             HAVE_SQL^                 \
             HAVE_SSL^                 \
             MDG_Inc^                  \
             MDG_Lib^                  \
             MDG_Pck^                  \
             JPEG_Inc^                 \
             JPEG_Lib^                 \
             PNG_Inc^                  \
             PNG_Lib^                  \
             X11_Inc^                  \
             X11_Lib^                  \
             X11_RPath^                \
             OGL_Inc^                  \
             OGL_Lib^                  \
             OGL_RPath^                \
             GRAPHICS_Windows =\? ""^  \
             GRAPHICS_Devices =\? ""^  \
             GRAPHICS_Flags   =\? ""^  \
   	     HAVE_PNGLIB^              \
   	     HAVE_JPEGLIB^             \
             Std_UseOGL^               \
             Std_UseQD^                \
             Std_UseX^                 \
             OS_Name^                  \
             RPATH

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# finalize graphics features
   
   Separator $ALog

# regularize (all have -I) and complete MDG_Inc
   set minc = ""
   foreach i ( $MDG_Inc $OGL_Inc $X11_Inc $PNG_Inc $JPEG_Inc )
      if ("$i" =~ "-I"*) then
         set minc = ( $minc $i)
      else
         set minc = ( $minc -I$i)
      endif
   end
   flog $ALog setenv MDG_Inc "$minc"

   flog $ALog setenv MDG_Lib "$MDG_Lib $OGL_Lib $X11_Lib $PNG_Lib $JPEG_Lib"

   if ($Std_UseQD == TRUE) then
      flog $ALog setenv MDG_Pck            "$MDG_Pck QD"
      flog $ALog setenv GRAPHICS_Windows   "QD"
      flog $ALog setenv GRAPHICS_Devices   "$GRAPHICS_Devices QD"
      flog $ALog setenv GRAPHICS_Flags     "$GRAPHICS_Flags -framework Carbon"
   endif
   if ($Std_UseOGL == TRUE) then
      if (($OS_Name == Darwin) && ($CC_Exe !~ pgc*)) then
         Note $ALog "Have GL on MAC OS X"
         flog $ALog setenv MDG_Lib "$MDG_Lib -framework GLUT -framework OpenGL"
      endif
      flog $ALog setenv MDG_Pck            "$MDG_Pck OGL"
      flog $ALog setenv GRAPHICS_Windows   "OGL"
      flog $ALog setenv GRAPHICS_Devices   "$GRAPHICS_Devices OGL"
      flog $ALog setenv GRAPHICS_Flags     "$GRAPHICS_Flags -DOGL"
   endif
   if ($Std_UseX == TRUE) then
      flog $ALog setenv MDG_Pck            "$MDG_Pck X11"
      flog $ALog setenv GRAPHICS_Windows   "X"
      flog $ALog setenv GRAPHICS_Devices   "$GRAPHICS_Devices X"
      flog $ALog setenv GRAPHICS_Flags     "$GRAPHICS_Flags -DX11"
      if ("$X11_RPath" != "") then
         flog $ALog setenv RPATH           ${RPATH}:${X11_RPath}
      endif
   endif
   if ($HAVE_PNGLIB == TRUE) then
      flog $ALog setenv MDG_Pck          "$MDG_Pck PNG"
   endif
   if ($HAVE_JPEGLIB == TRUE) then
      flog $ALog setenv MDG_Pck          "$MDG_Pck JPEG"
   endif

   if ($Std_UseX == FALSE) then

# have OpenGL
      if ($Std_UseOGL == "TRUE") then
         flog $ALog setenv GRAPHICS_Windows OGL

# have Quickdraw
      else if ($Std_UseQD == "TRUE") then
         flog $ALog setenv GRAPHICS_Windows QD

# no screen graphics
      else
         flog $ALog setenv GRAPHICS_Windows       ""
         flog $ALog setenv Std_UseX   FALSE
         flog $ALog setenv Std_UseOGL FALSE
         flog $ALog setenv Std_UseQD  FALSE

         dbmset $ALog Std_UseX   = $Std_UseX^    \
                      Std_UseOGL = $Std_UseOGL^  \
                      Std_UseQD  = $Std_UseQD
      endif

      dbexp GRAPHICS_Windows

   endif

   Note $ALog "Graphics summary variables:"
   Note $ALog "   MDG_Inc = |$MDG_Inc|"
   Note $ALog "   MDG_Lib = |$MDG_Lib|"
   Note $ALog "   MDG_Pck = |$MDG_Pck|"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# finalize I/O features into MDI_ variables

   Separator $ALog

   setenv MDI_Inc "$MDI_Inc $HDF_Inc $SQL_Inc $SSL_Inc"
   setenv MDI_Lib "$MDI_Lib $HDF_Lib $SQL_Lib $SSL_Lib"

   if ($HAVE_HDF5 == TRUE) then
      flog $ALog setenv MDI_Pck "HDF $MDI_Pck"
   endif

   if ($HAVE_SQL == TRUE) then
      flog $ALog setenv MDI_Pck "SQL $MDI_Pck"
   endif

   if ($HAVE_SSL == TRUE) then
      flog $ALog setenv MDI_Pck "SSL $MDI_Pck"
   endif

   Note $ALog "I/O summary variables:"
   Note $ALog "   MDI_Inc = |$MDI_Inc|"
   Note $ALog "   MDI_Lib = |$MDI_Lib|"
   Note $ALog "   MDI_Pck = |$MDI_Pck|"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# finalize exec features into MDE_ variables

   Separator $ALog

   if ($HAVE_BFD == TRUE) then
      flog $ALog setenv MDE_Lib "$MDE_Lib $BFD_Lib"
   endif

   if ($HAVE_DYNAMIC_LINKER == TRUE) then
      flog $ALog setenv MDE_Lib "$MDE_Lib -ldl"
   endif

   Note $ALog "Execution summary variables:"
   Note $ALog "   MDE_Lib = |$MDE_Lib|"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# finalize MD_ variables

   Separator $ALog

   if ($USE_IMF == TRUE) then
      flog $ALog setenv MD_Pck "$MD_Pck LibM"
   endif

   if ($HAVE_ZLIB == TRUE) then
      flog $ALog setenv MD_Inc "$MD_Inc $Z_Inc"
      flog $ALog setenv MD_Lib "$MD_Lib $Z_Lib"
      flog $ALog setenv MD_Pck "Z $MD_Pck"
   endif

   if ($USE_MPI == TRUE) then
      flog $ALog setenv MD_Pck "DP $MD_Pck"
   endif

   if ($HAVE_READLINE == TRUE) then
      flog $ALog setenv MD_Pck "RL $MD_Pck"
   endif

   Note $ALog "MD summary variables:"
   Note $ALog "   MD_Inc = |$MD_Inc|"
   Note $ALog "   MD_Lib = |$MD_Lib|"
   Note $ALog "   MD_Pck = |$MD_Pck|"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# eliminate redundancies in MDx_Inc especially /usr/include
# NOTE: compilers look at /usr/include by default not
# necessarily $RootInc

   Separator $ALog

   foreach p (MDE_Inc MDG_Inc MDI_Inc MD_Inc)

      Note $ALog "Cleanup $p"

      set lincs = ""
      foreach i (`printenv $p`)
         if ("$i" != "-I/usr/include") then
            set ok = TRUE
            foreach j ( $lincs )
                if ("$i" == "$j") then
                   set ok = FALSE
                   break
                endif
            end
            if ($ok == TRUE) then
               set lincs = ( $lincs $i )
            endif
         endif
      end

      flog $ALog setenv $p  "$lincs"
      unset lincs

   end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# eliminate redundancies in MDx_Lib

   Separator $ALog

   foreach p (MDE_Lib MDG_Lib MDI_Lib MD_Lib)

      Note $ALog "Cleanup $p"

      set llibs = ""
      foreach i (`printenv $p`)
         set ok = TRUE
         foreach j ( $llibs )
             if (("$i" == "$j") && ("$i" != "-framework")) then
                set ok = FALSE
                break
             endif
         end
         if ($ok == TRUE) then
            set llibs = ( $llibs $i )
         endif
      end
      flog $ALog setenv $p  "$llibs"
      unset llibs

   end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# finalize compiler settings

   Separator $ALog

   if ("$Cfe_CC_Inc" == "$RootInc") then
      flog $ALog setenv Cfe_CC_Inc ""
   endif

   if ($?Save_CC == 1) then
      flog $ALog setenv CC_Exe "$Save_CC"
   endif

   set tmp = ($Save_CFLAGS)
   flog $ALog setenv CC_Flags "$tmp"

   flog $Log setenv CC_Optimize_Default "$CC_Optimize"
   flog $Log setenv CC_Debug_Default    "$CC_Debug"
   flog $Log setenv FC_Optimize_Default "$FC_Optimize"
   flog $Log setenv FC_Debug_Default    "$FC_Debug"

   flog $Log setenv ACC_Optimize_Default "-aO"
   flog $Log setenv ACC_Debug_Default    "-ag"
   flog $Log setenv AFC_Optimize_Default "-aO"
   flog $Log setenv AFC_Debug_Default    "-ag"

   if ($AbsoluteDeb == TRUE) then
      flog $Log setenv CC_Optimize_Default "$CC_Debug"
      flog $Log setenv FC_Optimize_Default "$FC_Debug"
      flog $Log setenv ACC_Optimize_Default "-ag"
      flog $Log setenv AFC_Optimize_Default "-ag"
   else if ($AbsoluteOpt == TRUE) then
      flog $Log setenv CC_Debug_Default "$CC_Optimize"
      flog $Log setenv FC_Debug_Default "$FC_Optimize"
      flog $Log setenv ACC_Optimize_Default "-aO"
      flog $Log setenv AFC_Optimize_Default "-aO"
   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# export the results
dbmset $ALog CC_Exe               = $CC_Exe^               \
             CC_Flags             = $CC_Flags^             \
             CC_Debug_Default     = $CC_Debug_Default^     \
             CC_Optimize_Default  = $CC_Optimize_Default^  \
             FC_Debug_Default     = $FC_Debug_Default^     \
             FC_Optimize_Default  = $FC_Optimize_Default^  \
             ACC_Debug_Default    = $ACC_Debug_Default^     \
             ACC_Optimize_Default = $ACC_Optimize_Default^  \
             AFC_Debug_Default    = $AFC_Debug_Default^     \
             AFC_Optimize_Default = $AFC_Optimize_Default^  \
             Cfe_CC_Inc           = $Cfe_CC_Inc^           \
             GRAPHICS_Windows     = $GRAPHICS_Windows^     \
             GRAPHICS_Devices     = $GRAPHICS_Devices^     \
             GRAPHICS_Flags       = $GRAPHICS_Flags^       \
             MD_Inc               = $MD_Inc^               \
             MD_Lib               = $MD_Lib^               \
             MD_Pck               = $MD_Pck^               \
             MDG_Inc              = $MDG_Inc^              \
             MDG_Lib              = $MDG_Lib^              \
             MDG_Pck              = $MDG_Pck^              \
             MDI_Inc              = $MDI_Inc^              \
             MDI_Lib              = $MDI_Lib^              \
             MDI_Pck              = $MDI_Pck^              \
             MDE_Lib              = $MDE_Lib^              \
             RPATH                = $RPATH

exit(0)

