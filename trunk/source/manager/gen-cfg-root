#!/bin/csh -f
#
# GEN-CFG-ROOT - find the root config file
#              - which is the existing file matching the
#              - longest substring of $cfg
#              - this must be called under 'dsys config'
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set raw = FALSE
set cfg = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo ""
           echo "Usage: gen-cfg-root [-h] [-r] <cfg>"
           echo "   h     this help message"
           echo "   r     do not process platform specifications out"
           echo "   <cfg> configuration specification"
           echo ""
           exit(1)
      case -r:
           set raw = TRUE
           breaksw
      default:
           set cfg = $1
           breaksw
   endsw
   shift
end

set features = ( `echo $cfg | sed 's/-/ /g'` )

if ($?PSY_CONFIG_PATH == 0) then
   setenv PSY_CONFIG_PATH "local std"
endif

set croot = "none"
set ok    = FALSE
@ i = $#features
while (($i > 0) && ($ok == FALSE))
   set lname = `echo $features[1-$i] | sed 's/ /-/g'`
   foreach d ($PSY_CONFIG_PATH)
      if (-f $d/$lname) then
         set croot = $d/$lname
         set ok    = TRUE
         break
      endif
   end
   @ i = $i - 1
end

# complete the features list
@ i = $i + 2
if ($i > $#features) then
   set features = ""
else
   set features = ( $features[$i-] )
endif

# reassemble no-xxx type features
set nf = ""
while ($#features > 0)
   set f = $features[1]
   shift features
   if ($f == "no") then
      set f = "no-$features[1]"
      shift features
   endif
   set nf = ( $nf $f )
end
set features = ( $nf )
unset nf
unset f

unset i
unset ok
unset lname

if ($raw == FALSE) then

# work over the features list to accomodate platform targets
# platform 0 is the "main" config which gets the default PSY_ID
# all other platforms are specified by the 'platform' command in
# the config file and are assigned an index 1, ...
# every platform should get non-targeted features
# specific platforms should get targeted features
# targeted feature syntax is:
#   <spec> := <n> . <f>+
#   <n>    := integer platform index (0 for base config)
#   <f>    := feature specification (e.g. py or s)

   set nfeat = ""

# add all non-targeted features
   foreach i ($features)
      if ($i !~ [0-9]*.*) then
         set nfeat = ( $nfeat $i )
      endif   
   end

# expand and add features targeted at platform 0
   foreach i ($features)
      if ($i =~ 0.*) then
         set inf   = ( `echo $i | sed 's/\./ /g'` )
         set nfeat = ( $nfeat $inf[2-] )
      endif
   end

# last add all targeted features
   foreach i ($features)
      if ($i =~ [1-9]*.*) then
         set nfeat = ( $nfeat $i )
      endif
   end

   set features = ( $nfeat )

   unset nfeat
endif

unset inf

echo "$croot $features"

exit(0)

