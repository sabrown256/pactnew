#!/bin/csh -f
#
# DMAKE - compile the dmake program
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

Note $WLog "----- write/dmake -----"
Note $WLog "Write: dmake"
Note $WLog ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

Separator $WLog

NoteD $WLog "   Persistent Portable Parallel Make - dmake"
Note $WLog ""

dbmget $WLog CROSS_COMPILE^               \
             CROSS_REF       =\?  "none"^ \
             PACT_CC_EXE^                 \
             PACT_CC_FAMILY^              \
             PACT_CC_PATH^                \
             PACT_CC_VERSION^             \
             BinDir^                      \
             LibDir^                      \
             PSY_ID^                      \
             PSY_Base^                    \
             PSY_MngDir

    flog $WLog set DSYS = $PSY_MngDir/dsys
    flog $WLog set MAKE = $BinDir/smake
    flog $WLog set opt  = smake
    flog $WLog set path = ( $BinDir $path )

    set err = 1

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# BUILD - if not cross-compile then build dmake for this platform

    if ($CROSS_COMPILE == "FALSE") then

       Note $WLog "Build local dmake"

       flog $WLog pushd $PSY_Base/score

# always remove and start clean in case there is toxic rubble
# left over from a failed build
# NOTE: the pact link may not be in place so remove may not invoke
# clean - therefore do both separately
       flog $WLog $MAKE -i -na 1 clean
       flog $WLog $MAKE -i -na 1 remove

       flog $WLog ls -l ${PERDB_PATH}*

       flog $WLog $MAKE dmake
       set err = $status
       if ($err == 0) then
          Note $WLog "Build of dmake succeeded"
       else
          Note $WLog "Build of dmake failed"
       endif
       flog $WLog popd

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# FIND - if cross-compile then try to find a dmake to use on this platform

    else

       Note $WLog "Find dmake for CROSS_COMPILE"
       Note $WLog "   PSY_ID    = |$PSY_ID|"
       Note $WLog "   BinDir    = |$BinDir|"
       Note $WLog "   CROSS_REF = |$CROSS_REF|"

       set srcb = $CROSS_REF/bin

       set dm = $srcb/dmake
       Note $WLog "   dmake     = |$dm|"
       if (-x "$dm") then
          flog $WLog cp $dm ${BinDir}/dmake
          flog $WLog set err = 0

# try pact if no dmake found
       else
          set dm = $srcb/pact
          Note $WLog "   pact      = |$dm|"
          if (-x "$dm") then
             flog $WLog cp $dm ${BinDir}/dmake
             flog $WLog set err = 0
          else
             Note $WLog "No dmake found for bootstrap CROSS_COMPILE"
          endif
       endif
       unset dm

    endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# decide whether to use smake or dmake
    if ($err == 0) then
       flog $WLog ${BinDir}/dmake -v
       if ($status == 0) then
          flog $WLog set opt = dmake
       endif
    endif

    flog $WLog setenv SESSION_CONFIG $PSY_ID
    ftee $WLog $DSYS pact $opt
    unset opt

source $Me:h/post-common

exit($err)

