#!/bin/csh -f
#
# CFG-BASE - common code to generate the main part of a config
#          - from OS, Compiler, and bits
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

@ err = 0

set lbts = ""
set cf   = /dev/stdout
set clst = ""
set ilst = ""
set gdir = $cwd

while ($#argv > 0)
   switch ($1)
      case -h:
           echo ""
           echo "Usage: cfg-base [-bits <bits>] [-gdir <dir>] [-h] [-i <inst>] [-o <outfile>] <cc>"
           echo "   bits   number of bits in address"
           echo "   h      this help message"
           echo "   o      the output config file name"
           echo "   <cc>   := <compiler>[:<compiler>]*"
           echo "   <inst> := <instdir>[:<instdir>]*"
           echo ""
           exit(1)
      case -bits:
           shift
           set lbts = $1
           breaksw
      case -gdir:
           shift
           set gdir = $1
           breaksw
      case -i:
           shift
           set ilst = ( $ilst `echo $1 | sed 's|:| |g'` )
           breaksw
      case -o:
           shift
           set cf = $1
           breaksw
      default:
           set clst = ( $clst `echo $1 | sed 's|:| |g'` )
           breaksw
   endsw
   shift
end

if ("$clst" == "") then
   set clst = gnu
endif

# NOTE: use node name for config file base
# if multiple hosts have the same PSY_TYPE there will be contention
# over the file - the node name is truly host specific
   set los = `uname -s | tr "[A-Z]" "[a-z]"`
   set lhw = `uname -m | tr "[A-Z]" "[a-z]"`

   set instb = none
   if ("$ilst" == "") then
      @ ni = 0
   else
      @ ni = $#ilst
   endif

   @ ic = 0
   @ nc = $#clst
   while ($ic < $nc)
      @ ic = $ic + 1

      set lcc = $clst[$ic]

# get the installation base directory name
      if ("$ilst" == "") then
         set instb = none
      else if ($ic <= $ni) then
         set instb = $ilst[$ic]
      else if ($ic == 1) then
         set instb = $ilst[1]
      else if ("$instb" != none) then
         @ ii = $ic - 1
         set instb = `echo $instb:r.$ii | sed 's| ||g'`
      endif

      switch ($lcc)
         case clang:
              set lcc = clang
              breaksw
         case gnu:
              set lcc = gcc
              breaksw
         case intel:
              set lcc = icc
              breaksw
         case open64:
              set lcc = opencc
              breaksw
         case path:
              set lcc = pathcc
              breaksw
         case pgi:
              set lcc = pgcc
              breaksw
         case sun:
              set lcc = suncc
              breaksw
      endsw

      if ($cf != /dev/stdout) then
         rm -f $cf
         touch $cf
      endif

      if ($ic > 1) then
         set pf = $gdir/$cf:t.$ic
         echo "platform $pf $instb -cc $lcc" >>& $cf
      else
         set pf = $cf
      endif

# build the config off the operating system
      echo "include spokes" >>& $pf
      switch ($los)

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# ONE_OF - handle OSes with only one compiler option

         case aix:
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include compilers/xlc-aix" >>& $pf
              breaksw
         case beos:
         case haiku:
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include compilers/gnu-lnx" >>& $pf
              breaksw
         case cygwin*:
              set ladv = ""
              set ladv = ${ladv}:psh_dorun:psh_verify
              set ladv = ${ladv}:score_mpi:score_error
              set ladv = ${ladv}:pml_perf:pml_nan:pml_fpe:pml_interp
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include compilers/gnu-cygwin" >>& $pf
              echo "Group TEST {" >>& $pf
              echo "   ADVISORY = "'${TEST_ADVISORY}'"$ladv" >>& $pf
              echo "}" >>& $pf
              unset ladv
              breaksw
         case freebsd:
              echo "run std/use-compiler $lcc" >>& $pf
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include compilers/gnu-freebsd" >>& $pf
              echo "include features/no-sql" >>& $pf
              breaksw
         case gnu:
              echo "run std/use-compiler $lcc" >>& $pf
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include compilers/gnu-hurd" >>& $pf
              breaksw
         case hp-ux*:
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include compilers/hpux" >>& $pf
              breaksw
         case irix*:
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include cpp-rule" >>& $pf
              echo "include compilers/irix" >>& $pf
              breaksw
         case osf1:
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "include compilers/osf" >>& $pf
              breaksw
         case sunos:
              set lccsys  = `where cc |& head -n 1`
              set lccroot = $lccsys:h
              set lccroot = $lccroot:h
              if ("$lbts" != "") then
                 echo "include ${lbts}-bit" >>& $pf
              endif
              echo "Group PACT {" >>& $pf
              echo "   CC_PATH = $lccroot" >>& $pf
              echo "   FC_PATH = $lccroot" >>& $pf
              echo "}" >>& $pf
              if (-x "$lccsys") then
                 $lccsys -v |& grep gcc >& /dev/null
                 if ($status == 0) then
                    echo "include compilers/gnu-sol" >>& $pf
                 else
                    echo "include compilers/sol" >>& $pf
                 endif
              endif
              echo "Group TEST {" >>& $pf
              echo '   ADVISORY = ${TEST_ADVISORY}:score_mpi' >>& $pf
              echo "}" >>& $pf
              breaksw

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# DARWIN - multi-compiler OS

         case darwin:

# get the main compiler family
              switch ($lcc)
                 case clang:
                      set lcfam = clang-osx
                      breaksw
                 case *intel:
                 case *icc*:
                      set lcfam = icc-osx
                      breaksw
                 case *pgi:
                 case *pgcc*:
                      set lcfam = pgi-osx
                      breaksw
                 default:
                 case *gnu:
                 case *gcc*:
                      set lcfam = gnu-osx
                      breaksw
              endsw

# build the config off the compiler and compiler family
              switch ($lcc)
                 default:
                 case clang:
                 case *intel:
                 case *icc*:
                 case *pgi:
                 case *pgcc*:
                 case *gcc*:
                      if ("$lbts" != "") then
                         echo "include ${lbts}-bit" >>& $pf
                      endif
                      echo "run std/use-compiler $lcc" >>& $pf
                      echo "include compilers/$lcfam" >>& $pf
                      echo "include no-opengl" >>& $pf
                      breaksw
              endsw

              set ladv = ""
              set ladv = ${ladv}:score_mpi:score_mk_async
              set ladv = ${ladv}:pml_perf
              set ladv = ${ladv}:ppc_pty_interrupt
              set ladv = ${ladv}:sx_hdf
              echo "Group TEST {" >>& $pf
              echo "   ADVISORY = "'${TEST_ADVISORY}'"$ladv" >>& $pf
              echo "}" >>& $pf
              unset ladv
              breaksw

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# LINUX - multi-compiler OS

         default:
         case linux:

# get the main compiler family
              switch ($lcc)
                 case clang:
                      set lcfam = clang-lnx
                      breaksw
                 case *mpicc*:
                      if ("$lbts" != "") then
                         echo "include ${lbts}-bit" >>& $pf
                      endif
                      echo "run std/use-compiler $lcc" >>& $pf
                      echo "include features/gnu-bgq-set" >>& $pf
                      set lcc = none
                      breaksw
                 case *mpgcc*:
                      if ("$lbts" != "") then
                         echo "include ${lbts}-bit" >>& $pf
                      endif
                      echo "run std/use-compiler $lcc" >>& $pf
                      echo "include features/gnu-bgl-set" >>& $pf
                      set lcc = none
                      breaksw
                 case *intel:
                 case *icc:
                      set lcfam = icc-lnx
                      breaksw
                 case *mingw*:
                      set lcfam = mingw-lnx
                      breaksw
                 case *open64:
                 case *opencc:
                      set lcfam = open64-lnx
                      breaksw
                 case *path:
                 case *pathcc:
                      set lcfam = path
                      breaksw
                 case *pgi:
                 case *pgcc:
                      set lcfam = pgi-lnx
                      breaksw
                 case *sun:
                 case *suncc:
                      set lcfam = sun
                      breaksw
                 case *xlc*:
                      set lcfam = xlc-lnx
                      breaksw
                 default:
                 case *gnu:
                 case *gcc:
                      set lcfam = gnu-lnx
                      breaksw
              endsw

# build the config off the compiler and compiler family
              switch ($lcc)
                 case none:
                      breaksw
                 case *mingw*:
                      if ("$lbts" != "") then
                         echo "include ${lbts}-bit" >>& $pf
                      endif
                      echo "include auto-win" >>& $pf
                      breaksw

                 case gnu-bgl:
                 case gnu-bgp:
                 case gnu-bgq:
                 case gnu-cxe:
                 case pgi-cxe:
                 case xlc-bgl:
                 case xlc-bgp:
                 case xlc-bgq:
                 case mp-gnu-bgl:
                 case mp-gnu-bgp:
                 case mp-gnu-bgq:
                 case mp-gnu-cxe:
                 case mp-gnu-win:
                 case mp-pgi-cxe:
                 case mp-xlc-bgl:
                 case mp-xlc-bgp:
                 case mp-xlc-bgq:
                      if ("$lbts" != "") then
                         echo "include ${lbts}-bit" >>& $pf
                      endif
                      echo "include auto-$lcc" >>& $pf
                      breaksw

                 default:
                 case clang:
                 case *gnu:
                 case *gcc:
                 case *intel:
                 case *icc:
                 case *opencc:
                 case *path:
                 case *pathcc:
                 case *pgi:
                 case *pgcc:
                 case *sun:
                 case *suncc:
                 case *xlc*:
                      if ("$lbts" != "") then
                         echo "include ${lbts}-bit" >>& $pf
                      endif
                      echo "run std/use-compiler $lcc" >>& $pf
                      echo "include compilers/$lcfam" >>& $pf
                      unset lcc
                      breaksw
              endsw
              breaksw
      endsw
   end

exit($err)
