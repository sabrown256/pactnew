#
# CFG-BASE - common code to generate the main part of a config
#          - from OS, Compiler, and bits
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

# NOTE: use node name for config file base
# if multiple hosts have the same PSY_TYPE there will be contention
# over the file - the node name is truly host specific
   set cfg = `uname -n | tr "[A-Z]" "[a-z]" | sed 's/\..*\..*$//'`
   set los = `uname -s | tr "[A-Z]" "[a-z]"`
   set lhw = `uname -m | tr "[A-Z]" "[a-z]"`

   rm -f $Tmp
   touch $Tmp

   set lcc = $CCompiler
   switch ($lcc)
      case clang:
           set lcc = clang
           breaksw
      case gnu:
           set lcc = gcc
           breaksw
      case intel:
           set lcc = icc
           breaksw
      case path:
           set lcc = pathcc
           breaksw
      case pgi:
           set lcc = pgcc
           breaksw
      case sun:
           set lcc = suncc
           breaksw
   endsw

# build the config off the operating system
   echo "include spokes" >>& $Tmp
   switch ($los)
      case aix:
           set cfg = "$cfg-$Bits"
           echo "include ${Bits}-bit" >>& $Tmp
           echo "include compilers/xlc" >>& $Tmp
           breaksw
      case beos:
      case haiku:
           set cfg = "$cfg-$Bits"
           echo "include ${Bits}-bit" >>& $Tmp
           echo "include compilers/gnu" >>& $Tmp
           breaksw
      case cygwin*:
           set ladv = ""
           set ladv = ${ladv}:psh_dorun:psh_verify
           set ladv = ${ladv}:score_mpi:score_error
           set ladv = ${ladv}:pml_perf:pml_nan:pml_fpe:pml_interp
           echo "include ${Bits}-bit" >>& $Tmp
           echo "include compilers/gnu-cygwin" >>& $Tmp
           echo "Group TEST {" >>& $Tmp
           echo "   ADVISORY = "'${TEST_ADVISORY}'"$ladv" >>& $Tmp
           echo "}" >>& $Tmp
           unset ladv
           breaksw
      case freebsd:
           echo "define FREEBSD" >>& $Tmp
           echo "run std/use-compiler $lcc" >>& $Tmp
           echo "include ${Bits}-bit" >>& $Tmp
           echo "include compilers/gnu-freebsd" >>& $Tmp
           echo "include features/no-sql" >>& $Tmp
           breaksw
      case hp-ux*:
           echo "include compilers/hpux" >>& $Tmp
           breaksw
      case irix*:
           echo "include ${Bits}-bit" >>& $Tmp
           echo "include cpp-rule" >>& $Tmp
           echo "include compilers/irix" >>& $Tmp
           breaksw
      case osf1:
           echo "include compilers/osf" >>& $Tmp
           breaksw
      case sunos:
           set CCSys = `where cc |& head -n 1`
           set CCRoot = $CCSys:h
           set CCRoot = $CCRoot:h
           echo "Group PACT {" >>& $Tmp
           echo "   CC_PATH = $CCRoot" >>& $Tmp
           echo "   FC_PATH = $CCRoot" >>& $Tmp
           echo "}" >>& $Tmp
           if (-x "$CCSys") then
              $CCSys -v |& grep gcc >& /dev/null
              if ($status == 0) then
                 echo "include compilers/gnu-sol" >>& $Tmp
              else
                 echo "include compilers/sol" >>& $Tmp
              endif
           endif
           echo "Group TEST {" >>& $Tmp
           echo '   ADVISORY = ${TEST_ADVISORY}:score_mpi' >>& $Tmp
           echo "}" >>& $Tmp
           breaksw

      case darwin:

# get the main compiler family
           switch ($lcc)
              case clang:
                   set lcfam = clang-osx
                   breaksw
              case *intel:
              case *icc*:
                   set lcfam = icc-osx
                   breaksw
              case *pgi:
              case *pgcc*:
                   set lcfam = pgi-osx
                   breaksw
              default:
              case *gnu:
              case *gcc*:
                   set lcfam = gnu-osx
                   breaksw
           endsw

# build the config off the compiler and compiler family
           switch ($lcc)
              default:
              case clang:
              case *intel:
              case *icc*:
              case *pgi:
              case *pgcc*:
              case *gcc*:
                   echo "run std/use-compiler $lcc" >>& $Tmp
                   echo "include compilers/$lcfam" >>& $Tmp
                   echo "include no-opengl" >>& $Tmp
                   breaksw
           endsw

           set ladv = ""
           set ladv = ${ladv}:score_mpi:score_mk_async
           set ladv = ${ladv}:pml_perf
           set ladv = ${ladv}:ppc_pty_interrupt
           set ladv = ${ladv}:sx_hdf
           echo "Group TEST {" >>& $Tmp
           echo "   ADVISORY = "'${TEST_ADVISORY}'"$ladv" >>& $Tmp
           echo "}" >>& $Tmp
           unset ladv
           breaksw

      default:
      case linux:

# get the main compiler family
           switch ($lcc)
              case clang:
                   set lcfam = clang
                   breaksw
              case *intel:
              case *icc:
                   set lcfam = icc
                   breaksw
              case *path:
              case *pathcc:
                   set lcfam = path
                   breaksw
              case *pgi:
              case *pgcc:
                   set lcfam = pgi
                   breaksw
	      case *sun:
	      case *suncc:
                   set lcfam = sun
                   breaksw
              default:
              case *gnu:
              case *gcc:
                   set lcfam = gnu
                   breaksw
           endsw

# build the config off the compiler and compiler family
           switch ($lcc)
              case mingw*:
                   echo "include auto-win-64" >>& $Tmp
                   breaksw

	      case *sun:
	      case *suncc:
                   echo "run std/use-compiler $lcc" >>& $Tmp
		   echo "include compilers/$lcfam" >>& $Tmp
                   breaksw

              case gnu-bgl:
              case gnu-bgp:
              case gnu-bgq:
              case gnu-cxe:
              case pgi-cxe:
              case xlc-bgl:
              case xlc-bgp:
              case xlc-bgq:
              case mp-gnu-bgl:
              case mp-gnu-bgp:
              case mp-gnu-bgq:
              case mp-gnu-cxe:
              case mp-pgi-cxe:
              case mp-xlc-bgl:
              case mp-xlc-bgp:
              case mp-xlc-bgq:
                   echo "include auto-$lcc" >>& $Tmp
                   breaksw

              default:
              case clang:
              case *intel:
              case *icc:
              case *path:
              case *pathcc:
              case *pgi:
              case *pgcc:
              case *gnu:
              case *gcc:
                   echo "run std/use-compiler $lcc" >>& $Tmp
                   echo "include ${Bits}-bit" >>& $Tmp
                   echo "include compilers/$lcfam" >>& $Tmp
                   unset lcc
                   breaksw
           endsw
           breaksw
   endsw
