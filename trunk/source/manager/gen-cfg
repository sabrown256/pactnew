#!/bin/csh -f
#
# GEN-CFG - generate a config file from a name
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

set Err  = 0
set cfg  = ""
set vrb  = FALSE
set flst = ""

while ($#argv > 0)
   switch ($1)
      case -f:
           shift
           set flst = ( $flst $1 )
           breaksw
      case -h:
           echo ""
           echo "Usage: gen-cfg [-f <feature>[,<feature>]*] [-h] [-v] <name>"
           echo "  h   this help message"
           echo "  v   verbose mode"
           echo ""
           exit(1)
      case -v:
           set vrb = TRUE
           breaksw
      default:
           set cfg = $1
           breaksw
   endsw
   shift
end

if ($?CCompiler == 0) then
   setenv CCompiler  gnu
endif

set flst = ( `echo "$flst" | sed 's/,/ /g'` )

if ("$cfg" == "") then
   echo "No name specified - exiting"
   exit(1)
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

set features = ( `gen-cfg-root $cfg` )
set croot    = $features[1]
shift features

if ($vrb == TRUE) then
   echo "Config directories: $ConfigDir"
   echo "Root config file:   $croot"
   echo "Feature list:       $features"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# check list of features and setup environment

if ($?bits == 0) then
   setenv bits ""
endif

set pthread = FALSE
set openmp  = FALSE
set shared  = FALSE
set mpi     = FALSE
set python  = FALSE
set pydir   = ""
set pyexe   = ""

foreach i ($features)
   switch ($i)
      case 32:
      case 64:
           setenv bits $i
           breaksw
      case t:
           set pthread = TRUE
           breaksw
      case s:
           set openmp = TRUE
           breaksw
      case sl:
           set shared = TRUE
           breaksw
      case mpi:
           set mpi = TRUE
           breaksw
      case py:
           set python = TRUE
           breaksw
   endsw
end

if (($pthread == TRUE) && ($openmp == TRUE)) then
   echo "pthread and openmp are mutually exclusive options - pick one"
   exit(1)
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

set arch = `system-id`
set gdir = gen/$arch
if (!(-d $gdir)) then
   mkdir -p $gdir
endif

set Tmp = $gdir/$cfg

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# generate a config file from scratch

if ("$croot" == "") then

   if ($vrb == TRUE) then
      echo "Generate from scratch"
   endif

   source write/cfg-base

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# use an existing config file

else if ("$features" == "") then

   if ($vrb == TRUE) then
      echo "Use existing config $croot"
   endif

   set Tmp = $croot

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# copy an existing config file which can be used as a base

else
   if ($vrb == TRUE) then
      echo "Start with existing config $croot"
   endif

   rm -f $Tmp
   cp $croot $Tmp
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

source write/cfg-features

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

echo "$Tmp"

exit($Err)

