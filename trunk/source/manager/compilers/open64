#
# OPEN64 - define OPEN64 compiler on LINUX
#        - derived from SGI IRIX compiler
#
# include "cpyright.h"
#

define BAD_COMPLEX_INITIALIZER

Tool CC {
   Exe      = opencc
   Flags    = -Wno-unknown-pragmas
   Flags   += [ _env_ = STD_C ;                # C standard flags
                C89   = -std=c89 ;
                C99   = -std=c99 ;
                C11   = -std=c11 ;
                X89   = -std=gnu89 ;           # gcc default
                X99   = -std=gnu99 ;
                X11   = -std=gnu11 ]
   Flags   += [ _env_ = Bits ;                # address bit size
                *     = -m* ]
#	-stdinc:  predefined include search path list

   Debug    = -g3 -O0 -Wall
   Optimize = -g3 -O
#   Optimize = -g3 -O -OPT:Olimit=0
   Profile  = 
   Version  = -V
}

Tool FC {
   Exe      = openf90
   Flags    = -freeform -funderscoring
   Flags   += [ _env_ = Bits ;                 # address bit size
                *     = -m* ]
   Debug    = -g3 -O0 -Wall
   Optimize = -g3 -O
#   Optimize = -g3 -O -OPT:Olimit=0
   Profile  = 
   Version  = -V
}

Tool CXX {
   Exe      = openCC
   Flags    = -Wno-unknown-pragmas
   Flags   += [ _env_ = STD_C ;                # C standard flags
                C89   = -std=c89 ;
                C99   = -std=c99 ;
                C11   = -std=c11 ;
                X89   = -std=gnu89 ;           # gcc default
                X99   = -std=gnu99 ;
                X11   = -std=gnu11 ]
   Flags   += [ _env_ = Bits ;                # address bit size
                *     = -m* ]
   Debug    = -g3 -O0 -Wall
   Optimize = -g3 -O
#   Optimize = -g3 -O -OPT:Olimit=0
   Version  = -V
}

Tool LD {
   RPath  = -Wl,-rpath,@
   Flags += -Wl,-export-dynamic
   Flags += [ _env_ = Bits ;                 # address bit size
              32    = -m32 ;
              64    = -m64 ]
}

Tool Lex {
   Exe    = opencc
   Flags  = -w
   Flags += [ _env_ = Bits ;                # address bit size
              *     = -m* ]
}

Group AF {
   PATTERN_WARN = "Warning: warning WARNING"
}

Group Std {
   CC_Flags = ${CC_Flags}
   FC_Flags = ${FC_Flags}
   LD_Flags = ${LD_Flags}
}

Group Cfg {
   Use      = Std
   CC_Exe   = opencc
}

Group Shared {
   LD_Exe    = opencc
   CC_Flags  = -fPIC
   LD_Flags  = -shared
   LD_Flags += [ _env_ = Bits ;                # address bit size
                 *     = -m* ]
}

Group PThread {
   LD_Lib = -lpthread 
}

Group OpenMP {
   CC_Flags  = -openmp
   LD_Flags  = -openmp
   LD_Lib    = 
   SharedFnc = yes
}

include cpp-rule
include serial

Group TEST {
  ADVISORY = ${TEST_ADVISORY}:pdb_fd
}

