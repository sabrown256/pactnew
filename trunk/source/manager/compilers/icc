#
# ICC - define Intel compiler
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

run analyze/rpath -a /usr/X11R6/${LIB}:/usr/${LIB}
run analyze/rpath intel

WARN_PATTERN = ":+sp+warning+sp+"
ERR_PATTERN  = ":+sp+error:"

Tool CC {
   Exe       = icc
   Flags     = -wd71,72,161,188,267,1357
   Flags    += [ _env_ = C_STD ;                # C standard flags
                 C89   = -std=c89 ;
                 C99   = -std=c99 ;
                 X89   = -std=gnu89 ;           # gcc default
                 X99   = -std=gnu99 ]
   Flags    += [ _env_ = Bits ;
                 64    = -fPIC ]
   Flags    += [ _cmd_ = -p ;                   # profiling
	         on    = -qp ]
   Debug     = -g
   Optimize  = -g
# Use this when icc PML Function test bug is fixed
#   Optimize = -g -O1
   Version  = -V
}

Tool FC {
   Exe     = ifort
   Flags   = -free
   Version = -V
}

Tool CXX {
   Exe       = icpc
   Flags     = 
   Debug     = -g
   Optimize  = -g
   Version   = -V
}

Tool LD {
   RPath  = -Wl,-rpath,@
   Flags += -Wl,-export-dynamic
   Lib    = -lc
}

Tool Lex {
   Flags = -wd177,266
}

Group Cfg {
   Use      = Std
   LD_Flags = ${LD_Flags}
   LD_Lib   =
}

Group Shared {
   LD_Exe   = icc
   CC_Flags = -fpic
   LD_Flags = -shared
}

Group PThread {
   LD_Lib = -lpthread 
}

Group OpenMP {
   CC_Flags = -openmp
   FC_Flags = -openmp
   LD_Lib   = -lpthread 
}

include cpp-rule
include serial

define NON_INTEGER_ENUM

