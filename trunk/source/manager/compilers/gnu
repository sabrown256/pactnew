#
# GNU - define GNU compiler
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

run analyze/rpath -a /usr/X11R6/${LIB}:/usr/${LIB}
run analyze/rpath gnu

WARN_PATTERN = ":+sp+warning:"
ERR_PATTERN  = ":+sp+error:"

Tool CC {
   Exe       = gcc
   Flags     = -ffloat-store
   Flags    += [ _env_ = C_STD ;                # C standard flags
                 C89   = -std=c89 ;
                 C99   = -std=c99 ;
                 X89   = -std=gnu89 ;           # gcc default
                 X99   = -std=gnu99 ]
   Flags    += [ _env_ = PACT_CC_VERSION ;      # compiler version flags
                 4.*   = -fsignaling-nans ]
   Flags    += [ _env_ = PACT_CC_VERSION ;      # stack checking
                 4.2.* >= -fstack-protector ]
   Flags    += [ _env_ = Bits ;                 # address bit size
                 32    = -m32 ;
                 64    = -m64 -fPIC ]
   Flags    += [ _cmd_ = -p ;                   # profiling
	         on    = -pg ]
   Flags    += [ _cmd_ = -cov ;                 # coverage analysis
	         on    = -fprofile-arcs -ftest-coverage ]
   Debug     = -g -O0 -Wall
   Optimize  = -g -O -Wunused
   Optimize += [ _cmd_ = -tune @ ;              # optimization tuning
                 *     = -mtune=* ]
   Version   = -v
}

Tool FC {
   Exe       = gfortran
   Flags     = -ffloat-store -ffree-form
   Flags    += [ _env_ = PACT_CC_VERSION ;      # compiler version flags
                 4.*   = -fsignaling-nans ;
                 4.6.* >= -fsignaling-nans -Wno-unused-dummy-argument ]
   Flags    += [ _env_ = Bits ;                 # address bit size
                 32    = -m32 ;
                 64    = -m64 -fPIC ]
   Flags    += [ _cmd_ = -p ;                   # profiling
	         on    = -pg ]
   Flags    += [ _cmd_ = -cov ;                 # coverage analysis
	         on    = -fprofile-arcs -ftest-coverage ]
   Debug     = -g -O0 -Wall
   Optimize  = -g -O -Wunused
   Version   = -v
}

Tool LD {
   RPath    = -Wl,-rpath,@
   Flags   += [ _cmd_ = -p ;                 # profiling
	        on    = -pg ]
   Flags   += [ _cmd_ = -cov ;               # coverage analysis
	        on    = -lgcov ]
   Lib      = -lc
}

Tool Lex {
   Flags  = -w
   Flags += [ _env_ = Bits ;                 # address bit size
              32    = -m32 ;
              64    = -m64 -fPIC ]
}

Group Std {
   CC_Flags = ${CC_Flags}
   FC_Flags = ${FC_Flags}
   LD_Flags = ${LD_Flags}
}

Group Cfg {
   Use    = Std
   CC_Exe = gcc
}

Group OpenMP {
   CC_Flags  = -fopenmp
   LD_Flags  = -fopenmp
   LD_Lib    = -lgomp
   SharedFnc = [ _env_ = PACT_CC_VERSION ;      # compiler version flags
                4.6.* <  yes ]
}

Group Shared {
   LD_Exe    = gcc
   CC_Shared = -fPIC
   LD_Shared = -shared
}

Group PThread {
   LD_Lib = -lpthread 
}

include cpp-rule
include serial

