#!/bin/csh -f
#
# USE-COMPILER - decide on the correct compiler environment
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

set lbits = ""
set lvers = ""
set cpath = ""

while ($#argv > 0)
   switch ($1)
      case bits:
           shift
           set lbits = $1
           breaksw
      case vers:
           shift
           set lvers = $1
           breaksw
      default:
           if ("$cpath" == "") then
              set cpath = $1
           endif
           breaksw
   endsw
   shift
end

if ("$cpath" == "") then
   echo "No compiler specified - exiting"
   exit(1)
endif
set cname = $cpath:t
if ($cpath == $cname) then
   set cpath = ""
endif

set Sed = `which sed`
set Awk = `which awk`

# find and source functions-pact.csh
if (-f ../scripts/functions-pact.csh) then
   set scrd = $cwd
else if (-f ../../scripts/functions-pact.csh) then
   set scrd = $cwd:h
endif
set ldir = $scrd:h/scripts
set path = ( $ldir $path )
source $ldir/functions-pact.csh
unset ldir
unset scrd

# figure out the site context
if (-f extensions/sys-site) then
   eval `extensions/sys-site`
else
   eval `sys-site -dc`
endif

# default compiler and query info
set cc = ( `which $cname` )
switch ($cname)

# ABSOFT
   case af90*:
        setenv PACT_CC_FAMILY   GNU
        setenv PACT_FC_FAMILY   ABSOFT
        set cname = gcc
        set fname = af90
        set opt   = ( --version )
        set pat   = ( Absoft )
        set prog  = ( '$0 ~ /'$pat'/ { print $5 } $0 ~ /Compile line:/ { print $3 }' )
        breaksw

# INTEL
   case icc*:
        setenv PACT_CC_FAMILY   INTEL
        setenv PACT_FC_FAMILY   INTEL
        set opt   = ( -v )
        set pat   = ( Version )
        set prog  = ( '$0 ~ /'$pat'/ { print $2 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = ifort
        breaksw

# OPEN64
   case opencc*:
        setenv PACT_CC_FAMILY   OPEN64
        setenv PACT_FC_FAMILY   OPEN64
        set opt   = ( -v )
        set pat   = ( Open64 Compiler Suite: Version )
        set prog  = ( '$0 ~ /'$pat'/ { print $NF } $0 ~ /Compile line:/ { print $3 }' )
        set fname = openf90
        breaksw

# PATHSCALE
   case pathcc*:
        setenv PACT_CC_FAMILY   PATHSCALE
        setenv PACT_FC_FAMILY   PATHSCALE
        set opt   = ( -v )
        set pat   = ( Compiler Suite: Version )
        set prog  = ( '$0 ~ /'$pat'/ { print $NF } $0 ~ /Compile line:/ { print $3 }' )
        set fname = pathf90
        breaksw

# PCC
   case pcc*:
        setenv PACT_CC_FAMILY   PCC
        setenv PACT_FC_FAMILY   GNU
        set opt   = ( -v )
        set pat   = ( pcc )
        set prog  = ( '$0 ~ /'$pat'/ { print $2 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = gfortran
        breaksw

# PGI
   case pgcc*:
        setenv PACT_CC_FAMILY   PGI
        setenv PACT_FC_FAMILY   PGI
        set opt   = ( -V )
        set pat   = ( target on )
        set prog  = ( '$0 ~ /'$pat'/ { print $2 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = pgf90
        breaksw

# SUN
   case suncc*:
        setenv PACT_CC_FAMILY   SUN
        setenv PACT_FC_FAMILY   SUN
        set opt   = ( -V )
        set pat   = ( cc: Sun C )
        set prog  = ( '$0 ~ /'$pat'/ { print $4 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = sunf90
        breaksw

# Tau
   case tau_cc*:
        setenv PACT_CC_FAMILY   TAU
        setenv PACT_FC_FAMILY   TAU
        set opt   = ( -v )
        set pat   = ( tau_cc version )
        set prog  = ( '$0 ~ /'$pat'/ { print $4 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = tau_f90
        breaksw

# TinyCC
   case tcc*:
        setenv PACT_CC_FAMILY   TCC
        setenv PACT_FC_FAMILY   GNU
        set opt   = ( -v )
        set pat   = ( tcc version )
        set prog  = ( '$0 ~ /'$pat'/ { print $4 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = gfortran
        breaksw

# XLC
   case *xlc*:
        setenv PACT_CC_FAMILY   XLC
        setenv PACT_FC_FAMILY   XLF
        set opt   = ( -qversion )
        set pat   = ( IBM XL C )
        set prog  = ( '$0 ~ /'$pat'/ { print $NF } $0 ~ /Compile line:/ { print $3 }' )
        set fname = ( `echo $cname | sed 's|xlc|xlf90|'` )
        breaksw

# GNU is default
   default:
        setenv PACT_CC_FAMILY   GNU
        setenv PACT_FC_FAMILY   GNU
        set opt   = ( -v )
        set pat   = ( gcc version )
        set prog  = ( '$0 ~ /'$pat'/ { print $3 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = gfortran
        breaksw
endsw

set cc     = none
set fc     = none
set croot  = none
set froot  = none
set lcvers = none
set lfvers = none

# in case compilers were put in different directories (ala Intel)
# check both Fortran and C compilers to get both on the PATH
# do C last to get its environment as the final result

set dirl = ""
foreach c ($fname $cname)

   set cmp = `which $c`

# if blank try to find compiler on your path
   if ("$cpath" == "") then
      if (-x $DAI_ROOT/pact/scripts/$c) then
         set cmp = $DAI_ROOT/pact/scripts/$c
         set opt = ( $opt -cwvrb )
         if ("$lvers" != "") then
            set opt = ( $opt -cwvers $lvers )
         endif
      endif

# if not a full path find it on your path
   else if ("$cpath" !~ /*) then
      set inf = ( `which $cpath` )
      if (-x "$inf") then
         set cmp = $inf
      endif

   else if (-xf "$cpath") then
      set cmp = $cpath

# try adding bin/$c
   else if (-x "$cpath/bin/$c") then
      set cmp = $cpath/bin/$c

   endif

# check for valid executable or else bail now
   if (-x "$cmp") then
      set sdir = $cmp:h
      set dirl = ( $dirl $sdir )
   else
      continue
   endif

# only take lfvers and froot from Fortran compiler
   if ($c == $fname) then
      set bindir = $sdir

# query the compiler for information
      set inf = ( `$cmp $opt |& $Awk "$prog"` )
      if ($#inf > 1) then
         set lfvers = $inf[2]
         set fc     = $inf[1]
         set bindir = $fc:h

      else if ($#inf > 0) then

# NOTE: some compilers such as ifort lie about their versions
# ifort 12.1.xxx all say they are 12.1.0
# so take the version from the installed path in such a case.
# this depends on some coordination with the ccomp script
# and the fact that installations of multiple versions must
# be more nearly correct in their identifications
         echo "$inf" |& grep $lvers >& /dev/null
	 if ($status == 0) then
            set lfvers = $lvers
            set fc     = $inf
            set bindir = $inf:h
         else
            set lfvers = $inf[1]
            set fc     = $cmp
         endif
      endif
      if (!(-f "$lfvers")) then
         set lfvers = ( `echo $lfvers | $Sed 's/[-_]/./g'` )
      endif
      set froot = $bindir:h
      unset bindir

# only take lcvers and croot from C compiler
   else if ($c == $cname) then
      set bindir = $sdir

# query the compiler for information
      set inf = ( `$cmp $opt |& $Awk "$prog"` )
      if ($#inf > 1) then
         set lcvers = $inf[2]
         set cc     = $inf[1]
         set bindir = $cc:h

      else if ($#inf > 0) then

# NOTE: some compilers such as icc lie about their versions
# icc 12.1.xxx all say they are 12.1.0
# so take the version from the installed path in such a case.
# this depends on some coordination with the ccomp script
# and the fact that installations of multiple versions must
# be more nearly correct in their identifications
         echo "$inf" |& grep $lvers >& /dev/null
	 if ($status == 0) then
            set lcvers = $lvers
            set cc     = $inf
            set bindir = $inf:h
         else
            set lcvers = $inf[1]
            set cc     = $cmp
         endif
      endif
      if (!(-f "$lcvers")) then
         set lcvers = ( `echo $lcvers | $Sed 's/[-_]/./g'` )
      endif
      set croot = $bindir:h
      unset bindir
   endif
end

# check the bits for the compiler library
if ("$lbits" == 32) then
   set croot = `echo $croot | $Sed 's/-64//'`
   set froot = `echo $froot | $Sed 's/-64//'`
endif

setenv PACT_CC_VERSION  $lcvers
setenv PACT_CC_PATH     $croot
setenv PACT_CC_EXE      $cc

setenv PACT_FC_VERSION  $lfvers
setenv PACT_FC_PATH     $froot
setenv PACT_FC_EXE      $fc

if ($PACT_CC_FAMILY == PATHSCALE) then
   setenv PACT_CC_PATH  $PACT_CC_PATH/lib/$lcvers
   setenv PACT_FC_PATH  $PACT_FC_PATH/lib/$lfvers
endif

dbmset /dev/null PACT_CC_FAMILY   = $PACT_CC_FAMILY^   \
                 PACT_CC_VERSION  = $PACT_CC_VERSION^  \
                 PACT_CC_PATH     = $PACT_CC_PATH^     \
                 PACT_CC_EXE      = $PACT_CC_EXE^      \
                 PACT_FC_FAMILY   = $PACT_FC_FAMILY^   \
                 PACT_FC_VERSION  = $PACT_FC_VERSION^  \
                 PACT_FC_PATH     = $PACT_FC_PATH^     \
                 PACT_FC_EXE      = $PACT_FC_EXE

source analyze/numa

# adjust the PATH to find the compiler
if ($#dirl == 1) then
   setenv PATH  $dirl[1]':$PATH'
else
   if ($dirl[1] == $dirl[2]) then
      setenv PATH  $dirl[1]':$PATH'
   else
      setenv PATH  ${dirl[1]}:${dirl[2]}':$PATH'
   endif
endif

envexp PATH

exit(0)

