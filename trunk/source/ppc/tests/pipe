#!/bin/csh -f
#
# PIPE - PPC pipe tests
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "PPC Pipe Test .................."
set exe = $PCEXEC

      NoteD $Log ""
      NoteD $Log "                    $msg "

      flog $Log rm -f pcexec.refi pcexec.refp

      NoteD $Log -n "                       polling ..................... "
      set rpf = "none"
      set opt = ( -i -c 30 -p $TEST )

      set BTime = `$TIMER -r`
      if ("$Valgrind" == "") then
         $CFE $exe $opt >&! pcexec.refp
         set xstatus = $status
      else
         ftee $Log $Valgrind $exe $opt       |& \
         grep "ERROR SUMMARY:"               |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
	 set rpf     = ( $rpf $Tmp )
      endif

      $TEST_CHECK part -a pipe_poll -e $xstatus -l -rpf "$rpf" none

      @ nerr = $nerr + $status

      NoteD $Log -n "                       interrupt ................... "
      set rpf = "none"
      set opt = ( -c 30 -p $TEST )

      set BTime = `$TIMER -r`
      if ("$Valgrind" == "") then
         $CFE $exe $opt >&! pcexec.refi
         set xstatus = $status
      else
         ftee $Log $Valgrind $exe $opt        |& \
         grep "ERROR SUMMARY:"                |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
	 set rpf     = ( $rpf $Tmp )
      endif

      $TEST_CHECK part -a pipe_interrupt -e $xstatus -l -rpf "$rpf" none

      @ nerr = $nerr + $status

$TEST_CHECK part -a pipe -e $nerr "$msg"

exit($status)

