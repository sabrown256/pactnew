#!/bin/csh -f
#
# PCTEST - test PPC
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

setenv Package ppc
setenv Test    ""
set vgdirs = ( score )
source ../scripts/test-env

if ($HaveIPC == NO) then
   exit(0)
endif

set Tests = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: pctest [-h] [-vg] [<test>]*"
           echo "  h       this help message"
           echo "  vg      run tests under valgrind"
           echo "  <test>  one of: pipe socket pty"
           echo "                  bg bin multi"
           echo ""
           exit(1)
      case -*:
           breaksw
      default:
           set Tests = ( $Tests $1 )
           breaksw
   endsw
   shift
end

cd $TestDir

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if (($RUN_TESTS == FALSE) || ($CROSS_COMPILE != FALSE)) then
   NoteD $Log ""
   NoteD $Log "PPC TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-e $BinDir/pcexec) then

   NoteD $Log ""
   NoteD $Log "PPC TEST ..."

# build PPC tests

   NoteD $Log ""
   NoteD $Log -n "                    Building PPC Test Programs ..... "
   Note $Log ""

   flog $Log pushd $BinDir
   flog $Log rm pcmtst pcbsts pcctst
   flog $Log popd

   flog $Log pushd $SrcDir
   flog $Log $MAKE Cstd
   set xstatus = $status
   flog $Log popd

   if ($xstatus != 0) then
      NoteD $Log ""
      NoteD $Log "                    Can't build Standard PPC Test Programs"
   else
      NoteD $Log "DONE"

      set TEST = "cat $SrcDir/DISCLAIMER"

      if ("$Tests" == "") then
         set Tests = ""
         set Tests = ( $Tests pipe socket pty bg bin multi )
      endif

      foreach i ($Tests)
         $SrcDir/tests/$i
         @ nerr = $nerr + $status
      end

      $TEST_CHECK clean -n PPC -e $nerr -raf "$Tmp"

      set xstatus = $status

   endif
endif

$TEST_CHECK fin -e $xstatus

exit($status)

