#!/bin/csh -f
#
# PYTEST - test PYA
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Package = pya
source ../scripts/test-env

setenv LogF  $Log

set Test = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: pytest [-h] [-vg] [<test>]*"
           echo "  h       this help message"
           echo "  vg      run tests under valgrind"
           echo "  <test>  one of: basic unit"
           echo ""
           exit(1)
      case -*:
           breaksw
      default:
           set Test = ( $Test $1 )
           breaksw
   endsw
   shift
end

cd $TestDir

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if ($RUN_TESTS == FALSE) then
   NoteD $Log ""
   NoteD $Log "SCORE TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-f $LPYTHON/pact/pdb.py) then

# clean up the test dir
   rm -f $Log
   touch $Log

   NoteD $Log ""
   NoteD $Log "PYA TEST ......"

   Note $Log "BinDir     = $BinDir"
   Note $Log "path       = $path"
   Note $Log "MAKE       = $MAKE"
   Note $Log "RootDir    = $RootDir"
   Note $Log "SrcDir     = $SrcDir"
   Note $Log "PYTHONPATH = $PYTHONPATH"
   Note $Log "python     = $PYTHON"
      
   Note $Log "PYVER       = |$PYVER|"
   Note $Log "PYTHONBIN   = |$PYTHONBIN|"
   Note $Log "LPYTHON     = |$LPYTHON|"
   Note $Log "PYTHON      = |$PYTHON|"
   Note $Log "PACT        = $PACT"
   Note $Log "Parallel    = |$Parallel|"
   Note $Log "MPI         = |$MPI|"
   flog $Log ../../../manager/pwhich pact
   flog $Log ../../../manager/pwhich cc

   if ("$Test" == "") then
      set Test = ""
      set Test = ( $Test basic unit )
   endif

   foreach i ($Test)
      $SrcDir/tests/$i
      if ($status == 1) then
         set ERROR = TRUE
      endif
   end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# CLEAN UP - we are all done now

   $TEST_CHECK -n PYA -e $ERROR -raf "../testfile" clean

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK -e $ERROR fin

exit($status)

