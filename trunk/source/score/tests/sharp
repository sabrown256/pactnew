#!/bin/csh -f
#
# SHARP - SCORE unit tests
#       - mostly due to Carolyn Sharp
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCORE Unit Tests .............. "

NoteD $LogF ""
NoteD $LogF "                    $msg"
Note $LogF ""

flog $LogF pushd $SrcDir
flog $LogF $MAKE compre
set xstatus = $status
flog $LogF popd

if ($xstatus != 0) then
   NoteD $LogF ""
   NoteD $LogF "                         Can't build SCORE Test Programs"
else

   if ("$CFE" != "") then
      setenv CFE   "$CFE -v"
   endif

   set DataFiles = ( fltfil intfil regxfil tokfil )

   foreach i ($DataFiles)
      flog $LogF cp $TDir/$i .
   end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   set exe = $BinDir/tscctl
   set rpf = none

   NoteD $LogF -n "                       scctl ...................... "
   Note $LogF ""

   if ("$Valgrind" == "") then
      flog $Log $CFE $exe
      set xstatus = $status
   else
      ftee $LogF $Valgrind $exe      |& \
      grep "ERROR SUMMARY:"          |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf     = ( $rpf $Tmp )
   endif

   $TEST_CHECK part -a sharp_scctl -e $xstatus -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   set exe = $BinDir/tscmemc
   set rpf = none

   NoteD $LogF -n "                       string-a ................... "
   Note $LogF ""

   if ("$Valgrind" == "") then
      flog $Log $CFE $exe
      set xstatus = $status
   else
      ftee $LogF $Valgrind $exe      |& \
      grep "ERROR SUMMARY:"          |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf     = ( $rpf $Tmp )
   endif

   $TEST_CHECK part -a sharp_memc -e $xstatus -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   set exe = $BinDir/tscstr
   set rpf = none

   NoteD $LogF -n "                       string-b ................... "
   Note $LogF ""

   if ("$Valgrind" == "") then
      flog $Log $CFE $exe
      set xstatus = $status
   else
      ftee $LogF $Valgrind $exe       |& \
      grep "ERROR SUMMARY:"           |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf     = ( $rpf $Tmp )
   endif

   $TEST_CHECK part -a sharp_str -e $xstatus -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   set exe = $BinDir/scvsts
   set rpf = none

   NoteD $LogF -n "                       vsnprintf .................. "
   Note $LogF ""

   if ("$Valgrind" == "") then
      flog $Log $CFE $exe
      set xstatus = $status
   else
      ftee $LogF $Valgrind $exe       |& \
      grep "ERROR SUMMARY:"           |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf     = ( $rpf $Tmp )
   endif

   $TEST_CHECK part -a sharp_vsnprintf -e $xstatus -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   flog $Log touch tsfoo.res
   set rpf = ( ts*.res $DataFiles )

endif

$TEST_CHECK part -a sharp -e $nerr -rpf "$rpf" "$msg"

exit($status)

