#!/bin/csh -f
#
# AR - test SCORE archive reading capability (for dmake)
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCORE Archive Scan Test ....... "
set exe = $BinDir/fcscan
@ nerr  = 0

NoteD $LogF ""
NoteD $LogF "                    $msg"
Note $LogF ""

flog $LogF pushd $SrcDir
flog $LogF $MAKE fcscan
set TStatus = $status
flog $LogF popd

if ($TStatus == 0) then

   if ("$CFE" != "") then
      setenv CFE   "$CFE -v"
   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test long or space-filled names
   set rpf = none

   NoteD $LogF -n "                       name ....................... "
   Note $LogF ""

   set BTime = `$TIMER -r`

   flog $LogF $RM f*.o libar.a

   echo "text 1" >! fx123.o
   echo "text 2" >! fabcdefghijklmnopqrstuvwxyz.o 
   echo "text 3" >! 'f0123456789 0123456789.o'
   echo "text 4" >! 'foo bar .o'

   set AR    = `pact +l -info AR`
   set AROpt = `pact +l -info AROpt`

   flog $LogF $AR $AROpt libar.a f*.o
   flog $LogF $AR -t libar.a

   if ("$Valgrind" == "") then
      flog $LogF $CFE $exe libar.a
      set xstatus = $status
   else
      ftee $LogF $Valgrind $exe libar.a    |& \
      grep "ERROR SUMMARY:"                |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf     = ( $rpf $Tmp )
   endif

   flog $LogF cat libar.a
   set rpf = ( $rpf f*.o libar.a )

   set ETime = `$TIMER -b $BTime`

   $TEST_CHECK part -a ar_name -e $xstatus -l -dt $ETime -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test working archive
   set rpf = none

   NoteD $LogF -n "                       working .................... "
   Note $LogF ""

   set BTime = `$TIMER -r`

   if ("$Valgrind" == "") then
      flog $LogF $CFE $exe -a $LibDir/libscore.a
      set xstatus = $status
   else
      ftee $LogF $Valgrind $exe -a $LibDir/libscore.a  |& \
      grep "ERROR SUMMARY:"                            |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf     = ( $rpf $Tmp )
   endif
   @ NL = `$CFE $exe -a $LibDir/libscore.a | sort | wc -l`
   @ NL = $NL

   flog $LogF ar -t $LibDir/libscore.a
   @ NLAr = `ar -t $LibDir/libscore.a | sort | wc -l`

   Note $LogF "fcscan count = $NL"
   Note $LogF "ar     count = $NLAr"

   set ETime = `$TIMER -b $BTime`

   $TEST_CHECK part -a ar_work -e $xstatus -l -dt $ETime -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK part -a ar -e $nerr "$msg"

exit($status)
