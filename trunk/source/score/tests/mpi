#!/bin/csh -f
#
# MPI - test MPI in SCORE
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCORE MPI Test ................ "
set exe = $BinDir/sctty
set rpf = none
@ nerr  = 0

if ($HAVE_READLINE == TRUE) then
   setenv TEST_ADVISORY "score_mpi_wrap"
endif

   NoteD $LogF ""
   NoteD $LogF "                    $msg"

   set UTime = `$TIMER -r`

   flog $LogF pushd $SrcDir
   flog $LogF $MAKE -i mpitty
   set TStatus = $status
   flog $LogF popd

   set ETime   = `$TIMER -b $UTime`

   if ($TStatus != 0) then
      if (!(-x $exe)) then
         NoteD $LogF ""
         NoteD $LogF "                         ERROR Building MPI Wrap Tests"
         NoteD $LogF "                    ${msg}FAILED ($ETime)"
         set Err = 1
      endif
   else

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# STDIN

      Separator $LogF
      NoteD $LogF -n "                       stdin ...................... "
      Note $LogF ""
      if ("$MPI" != "") then
         set lTime = `$TIMER -r`
         flog $Log $PFE -dr -p 2 $exe -t
         @ NOut = `echo "a" | $PFE -p 2 $exe -t |& grep "Proc" |& wc -l`
         set lTime = `$TIMER -b $lTime`
         if ($NOut < 2) then
            NoteD $LogF "one process only ($lTime)"
         else
            NoteD $LogF "all processes ($lTime)"
         endif
      else
         NoteD $LogF "not MPI (0)"
      endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# WRAP

      Separator $LogF
      NoteD $LogF -n "                       wrap ....................... "
      Note $LogF ""

      if ("$MPI" == "") then
         if (-x $BinDir/mpi-io-wrap) then
            Note $LogF "Running non-MPI version of test"
            flog $LogF ( (echo "a"; echo "b"; echo "end") | $BinDir/mpi-io-wrap $exe -q >& scmpiwrap.res )
            set xstatus = $status
         else
            Note $LogF "Running non-MPI version of test (without mpi-io-wrap)"
            flog $LogF ( (echo "a"; echo "b"; echo "end") | $DORUN -m $exe -q >& scmpiwrap.res )
            set xstatus = $status
         endif
      else
         Note $LogF "Running MPI version of test"
         flog $Log  ( (echo "a"; echo "b"; echo "end") | $PFE -f -p 1 $exe -q >&! scmpiwrap.res )
         set xstatus = $status
         flog $Log grep 'ATTENTION:' scmpiwrap.res 
         if ($status == 0) then
            flog $Log set xstatus = 255
         endif
      endif

# equate no output with unavailable resources and go the omitted route
      flog $Log cat scmpiwrap.res
      @ nl = ( `cat scmpiwrap.res | wc -l` )
      Note $Log "Status  = $xstatus"
      Note $Log "# lines = $nl"
      if ($nl == 0) then
         flog $Log set xstatus = 255
      endif

      if (($xstatus != -1) && ($xstatus != 255) && ($xstatus != 254)) then
         flog $Log ( diff scmpiwrap.res $RefDir/scmpiwrap >! scmpiwrap.res.diff )
         flog $Log cat scmpiwrap.res.diff
         set Files = `find . -name "scmpiwrap.res.diff" -size 0 -print`
         if ($#Files == 0) then
            set xstatus = 252
         else
            set rpf = ( $rpf scmpiwrap.res scmpiwrap.res.diff )
         endif
      endif

      $TEST_CHECK part -a mpi_wrap -e $xstatus -l -rpf "$rpf" none

      @ nerr = $nerr + $status

   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

$TEST_CHECK part -a mpi -e $nerr "$msg"

exit($status)

