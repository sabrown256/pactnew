#!/bin/csh -f
#
# PSYS - Python build script
#
# include "cpyright.h"
#

unalias *

@ err = 0

set exe = `which pact`
set bindir = $exe:h
set lroot  = $bindir:h
set etcdir = $lroot/etc
source $etcdir/env-pact.csh
unset etcdir
unset lroot
unset bindir
unset exe

source ../scripts/functions-pact.csh

@ n = $#argv
set tgt = $argv[$n]
@ n = $n - 1
set arg = ( $argv[1-$n] )
unset n

while ($#argv > 0)
   switch ($1)
      case -h:
           echo ""
           echo "Usage: psys [-h] [<arg>*] <tgt>"
           echo "   h     this help message"
           echo "   <arg> argument to pact executable"
           echo "   <tgt> make target"
           echo ""
           exit(1)
      default:
           breaksw
   endsw
   shift
end

InitLog log $cwd/z-${System}/log.psys.$tgt

set vlst = ""

set lhave_py    = ( $HAVE_PYTHON )
set lpy_vers    = ( $PY_Vers )
set lpy_inc     = ( $PY_Inc )
set lpy_numeric = ( $HAVE_PY_NUMERIC )
set lpy_numpy   = ( $HAVE_PY_NUMPY )

@ n = $#lhave_py
@ i = 0
while ( $i < $n)
   @ i = $i + 1

   set dev = ( lpycfg=$i )
   set dev = ( $dev lpyver=$lpy_vers[$i] lpyinc=$lpy_inc[$i] )
   if (($lpy_vers[$i] =~ 2*) && ($lpy_numeric[$i] == TRUE)) then
      flog $log set v = 2.numeric
      set dev = ( $dev lpynum=-DHAVE_NUMERIC )
   else if (($lpy_vers[$i] =~ 2*) && ($lpy_numpy[$i] == TRUE)) then
      flog $log set v = 2.numpy
      set dev = ( $dev lpynum=-DHAVE_NUMPY )
   else if (($lpy_vers[$i] =~ 3*) && ($lpy_numpy[$i] == TRUE)) then
      flog $log set v = 3.numpy
      set dev = ( $dev lpynum=-DHAVE_NUMPY )
   else
      continue
   endif

   NoteD $log "----------------------------------------------------------"
   NoteD $log ""
   NoteD $log "   in $v pact $arg $tgt"
   NoteD $log ""

   flog $log pushd $v

   pact $dev $arg $tgt
   @ err = $err + $status

   flog $log popd

end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

exit($err)
