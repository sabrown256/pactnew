#!/bin/csh -f
#
# EXT-VAR - test aexec with variables
#

unalias *

@ err = 0

source $TestScrDir/env-csh

alias pe  'unsetenv astatus ; echo "" ; echo "Command: \!*" ; aexec \!* ; dbget astatus'

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

foreach i (1 2 3 4 5 6)

   echo ""
   echo "---------------------------------------------------"
   echo ""

   set id  = v$i
   set res = ext-$id.res
   set raw = $res.raw
   set dif = $res.dif
   set ref = $RefDir/ext-$id

   set va = v1out

   switch ($i)

# simple stdout variants
      case 1:
           rm -rf $id
           set cmd = ( pe /bin/echo "$id" @o vw:${va} '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set pvl = ( $va )
           breaksw

# simple stdin variants
      case 2:
           set cmd = ( pe cat @i vr:${va} '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set pvl = ""
           breaksw

# simple append variants
      case 3:
           set cmd = ( pe /bin/echo "$id" @o2 va:${va} '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set pvl = ( $va )
           breaksw

# simple bonded variants
      case 4:
           set cmd = ( pe /bin/echo "$id" @b2 vw:v4bond '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set pvl = ( v4bond )
           breaksw

# non-simple stdout variants
      case 5:
           set cmd = ( pe /bin/echo "$id" @o2 @e3 vw:v5out @ vw:v5err '>&!' $res )
           set gst = "0 0 0"
           set srt = FALSE
           set pvl = ( v5out v5err )
           breaksw

      case 6:
           set cmd = ( pe ls 'ext-*' foo.h @o2 @e3 vw:v6out @ vw:v6err '>&!' $raw )
           set gst = "2 0 0"
           set srt = TRUE
           set pvl = ( v6out v6err )
           breaksw
   endsw

#   if ("$pvl" != NULL) then
#      foreach v ($pvl)
#         unsetenv $v
#      end
#   endif

   eval $cmd

   if ($srt == TRUE) then
      sort $raw >&! $res
      rm -f $raw
   endif

   if ("$pvl" != NULL) then
      foreach v ($pvl)
         dbget $v
         echo "> $v = `printenv $v`"
      end
   endif

   cat $res

   echo "> astatus = $astatus"
   if ("$astatus" != "$gst") then
      @ err = $err + 1
      echo "$id failed"
   else if (-f $ref) then
      diff $res $ref >&! $dif
      if ($status == 0) then
         echo "$id passed"
         rm -f $res $dif
      else
         echo "$id differed"
         cat $dif
      endif
   else
      cp $res $ref
      echo "$id added"
      rm -f $res
   endif

end

echo ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

exit($err)

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

echo "------------------------------------------------------------------------"
echo ""
echo "# simple stdout variants"

   unsetenv v1
   pe /bin/echo v1-text @o vw:v1 >&! ext-v1.res
   dbget v1
   cat ext-v1.res
   echo "> v1      = `printenv v1`"
   echo "> astatus = $astatus"
   if ("$astatus" != "0 0") then
      @ err = $err + 1
      echo "v1 failed"
   else
      rm -f ext-v1.res
      echo "v1 passed"
   endif

echo "------------------------------------------------------------------------"
echo ""
echo "# simple stdin variants"

   pe cat @i vr:v1 >&! ext-v2.res
   cat ext-v2.res
   echo "> astatus = $astatus"
   if ("$astatus" != "0 0") then
      @ err = $err + 1
      echo "v2 failed"
   else
      rm -f ext-v2.res
      echo "v2 passed"
   endif

echo "------------------------------------------------------------------------"
echo ""
echo "# simple append variants"

   pe /bin/echo v3-text @o2 va:v1 >&! ext-v3.res
   dbget v1
   cat ext-v3.res
   echo "> v1      = `printenv v1`"
   echo "> astatus = $astatus"
   if ("$astatus" != "0 0") then
      @ err = $err + 1
      echo "v3 failed"
   else
      rm -f ext-v3.res
      echo "v3 passed"
   endif

echo "------------------------------------------------------------------------"
echo ""
echo "# simple bonded variants"

   pe /bin/echo v4-text @b2 vw:v4 >&! ext-v4.res
   dbget v4
   cat ext-v4.res
   echo "> v4      = `printenv v4`"
   echo "> astatus = $astatus"
   if ("$astatus" != "0 0") then
      @ err = $err + 1
      echo "v4 failed"
   else
      rm -f ext-v4.res
      echo "v4 passed"
   endif

echo "------------------------------------------------------------------------"
echo ""
echo "# non-simple stdout variants"

if (0) then
   unsetenv v5out
   unsetenv v5err
   pe /bin/echo v5-text @o2 @e3 vw:v5out @ vw:v5err >&! ext-v5.res
   dbget v5out
   dbget v5err
   cat ext-v5.res
   echo "> v5out   = `printenv v5out`"
   echo "> v5err   = `printenv v5err`"
   echo "> astatus = $astatus"
   if ("$astatus" != "0 0 0") then
      @ err = $err + 1
      echo "v5 failed"
   else
      rm -f ext-v5.res
      echo "v5 passed"
   endif

   unsetenv v5out
   unsetenv v5err
   pe ls ext-* foo.h @o2 @e3 vw:v6out @ vw:v6err >&! ext-v6.res.raw
   sort ext-v6.res.raw >&! ext-v6.res
   rm -f ext-v6.res.raw
   dbget v6out
   dbget v6err
   cat ext-v6.res
   echo "> v6out   = `printenv v6out`"
   echo "> v6err   = `printenv v6err`"
   echo "> astatus = $astatus"
   if ("$astatus" != "2 0 0") then
      @ err = $err + 1
      echo "v6 failed"
   else
      rm -f ext-v6.res
      echo "v6 passed"
   endif
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

echo ""

exit($err)
