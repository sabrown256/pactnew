#!/bin/csh -f
#
# INFO - test pact-info
#

source ../../tests/common

set msg = "INFO Test ......................"

Note $Log "Args: $argv"

flog $Log setenv PERDB_PATH $EtcDir/cfg
flog $Log set PERDB = perdb

set lst = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo ""
           echo "Usage: info [-h]"
           echo "  h  this help message"
           echo ""
           exit(1);
      default:
           set lst = ( $lst $1 )
           breaksw
   endsw
   shift
end

if ("$lst" == "") then
   set lst = ( $lst RUN_SIGNATURE_DB SITE_SIGNATURE_DB )
   set lst = ( $lst SYS_SITE SYS_TYPE DAI_ROOT DAS_ROOT )
   set lst = ( $lst Bits OS_Name )
   set lst = ( $lst CC_Exe CC_Flags )
   set lst = ( $lst CC_Debug_Default CC_Optimize_Default )
   set lst = ( $lst Cfg_CC_Exe Cfg_CC_Flags Cfg_CC_Inc )
   set lst = ( $lst CXX_Exe CXX_Flags CXX_Linker )
   set lst = ( $lst FC_Exe FC_Flags )
   set lst = ( $lst FC_Debug_Default FC_Optimize_Default )
   set lst = ( $lst DP_Inc DP_Lib DP_RPath DP_Path )
   set lst = ( $lst LIB LibM_Lib LibM_RPath )
   set lst = ( $lst MDG_Inc MDG_Lib MDG_RPath MDG_Path )
   set lst = ( $lst PACT_CC_FAMILY PACT_CC_VERSION PACT_CC_PATH PACT_CC_EXE )
   set lst = ( $lst PACT_FC_FAMILY PACT_FC_VERSION PACT_FC_PATH PACT_FC_EXE )
   set lst = ( $lst PY_Inc PY_Lib PY_RPath PY_Path )
   set lst = ( $lst TRACKER_Exe HAVE_PYTHON HAVE_OPENMP )
   set lst = ( $lst CFE PFE CROSS_COMPILE )
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   NoteD $Log ""
   NoteD $Log "                    $msg"

   flog $Log pwd

   @ nerr = 0

   set tf = `timer -r`

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# PACT/PACT-INFO comparison

   if (($CROSS_COMPILE == FALSE) && ($HaveIPC == YES)) then
      set lmsg = "util ......................."
      NoteD $Log -n "                        $lmsg"
      Note $Log ""

      set lt = `timer -r`

      set dp = $cwd/info-diff

      @ lerr = 0
      foreach t (make $lst)
         Separator $Log

         set pa = $cwd/info-apa.$t
         set pi = $cwd/info-api.$t
         $RM $pa $pi
         touch $pa $pi

         flog $pa pact -info $t
         flog $pa pact +info $t
         flog $pa pact +l -info $t
         flog $pa pact +l +info $t

         flog $pi pact-info $t
         flog $pi pact-info -f $t
         flog $pi pact-info -l $t
         flog $pi pact-info -l -f $t

         flog $Log cat $pi

         grep -v Command: $pa >&! $pa.1
         grep -v Command: $pi >&! $pi.1

         flog $Log ( diff -w -B $pa.1 $pi.1 >&! $dp )
         if ($status == 0) then
            flog $Log $RM $pa $pi
         else
            Note $Log "$t differed"
            flog $Log cat $dp
            @ lerr = $lerr + 1
         endif
         $RM $pa.1 $pi.1

      end

      @ nerr = $nerr + $lerr

      set lt = `timer -b $lt`

      $TEST_CHECK part -a info_util -e $lerr -l -dt $lt -rpf "$rpf" none

   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# PACT/PERDB comparison

   set lmsg = "db ........................."
   NoteD $Log -n "                        $lmsg"
   Note $Log ""

   set lt = `timer -r`

   set dp = $cwd/info-diff

   @ lerr = 0
   foreach t ($lst)
      Separator $Log

      set pa = $cwd/info-bpa.$t
      set pi = $cwd/info-bpe.$t
      $RM $pa $pi
      touch $pa $pi

      flog $pa pact -info $t
#      flog $pa pact +l -info $t
      flog $pi $PERDB $t

      flog $Log cat $pi

      grep -v Command: $pa >&! $pa.1
#      grep -v Command: $pi >&! $pi.1
      grep -v Command: $pi | sed 's|\"||g' >&! $pi.1

      flog $Log ( diff -w -B $pa.1 $pi.1 >&! $dp )
      if ($status == 0) then
         flog $Log $RM $pa $pi
      else
         Note $Log "$t differed"
         flog $Log cat $dp
         @ lerr = $lerr + 1
      endif
      $RM $pa.1 $pi.1

      @ lerr = $lerr + $status
   end

   @ nerr = $nerr + $lerr

   set lt = `timer -b $lt`

   $TEST_CHECK part -a info_db -e $lerr -l -dt $lt -rpf "$rpf" none

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

set tf = `timer -b $tf`

$TEST_CHECK part -a info -e $nerr -dt $tf -rpf "$rpf" "$msg"

exit($status)

