#!/bin/csh -f
#
# PERDB - test perdb
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "PERDB Test ....................."

set PERDB = perdb

while ($#argv > 0)
   switch ($1)
      case -c:
           shift
           set PERDB = $1
           breaksw
      case -h:
           echo ""
           echo "Usage: perdb [-h]"
           echo "  c  test code (defaults to perdb)"
           echo "  h  this help message"
           echo ""
           exit(1);
      default:
           breaksw
   endsw
   shift
end

touch dbfoo.db
rm -f $TestDir/db*.*

InitLog Log $TestDir/log.perdb.$LogSfx

NoteD $Log ""
NoteD $Log "                    $msg"

# struct tests require shell to allow things like: 'setenv a.b foo'
# don't do them if the shell will not allow variable names of that sort
set too_strict = FALSE
/bin/csh -c '(setenv a.b foo)' >& /dev/null
if ($status != 0) then
   set too_strict = TRUE
endif

if ($too_strict == TRUE) then
   set List = (perdb1 perdb2 perdb3 perdb4 perdb5 perdb6)
else
   set List = (perdb1 perdb2 perdb3 perdb4 perdb5 perdb6 perdb7 perdb8)
endif

Note $Log "Using $PERDB"

foreach t ($List)
   Separator $Log

   set f = ( `fill-string -n 28 $t` )
   NoteD $Log -n "                        $f "
   Note $Log ""

   flog $Log set Res = $t.res
   flog $Log set Ref = $RefDir/$t

  flog $Log $RM ${t}* *= *@*

   set noglob
   flog $Log ( $FilesDir/$t |& grep -v '\[' | grep -v true >&! $Res )
   set xstatus = $status
   unset noglob

   if (-f $Ref) then
      flog $Log ( diff -w -b $Res $Ref >! $Res.diff )
      set xstatus = $status
   else
      flog $Log cp $Res $Ref
      set xstatus = $status
   endif

   if ($xstatus == 0) then
      NoteD $Log "ok"
      flog $Log rm -f $Res $Res.diff
   else
      if (-d $Res.log) then
         flog $Log cat $Res.log
      endif
      flog $Log cat $Res
      flog $Log cat $Res.diff
      NoteD $Log "ng"
      flog $Log @ nerr = 1
   endif
end

flog $Log touch dbfoo
set rpf = ( $rpf db* )

$TEST_CHECK part -a perdb -e $nerr -rpf "$rpf" "$msg"

exit($status)

