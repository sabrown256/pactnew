#!/bin/csh -f
#
# PERDB2 - test use of existing PERDB database
#        - use environment variable specification of DB
#        - test atomic get
#        - test suitability for environment variable
#

unalias *

@ err = 0

set opt = "-l"
set db  = ./db1

alias dbget     'setenv \!\!:1 "`perdb $opt \!\!:1`"'

setenv PERDB_PATH $db

perdb $opt -s
@ err = $err + $status

echo "-----------------------------------"
perdb $opt v1
@ err = $err + $status
perdb $opt v2
@ err = $err + $status
perdb $opt v3
@ err = $err + $status
perdb $opt v4
@ err = $err + $status
perdb $opt v5
@ err = $err + $status
perdb $opt v6
@ err = $err + $status
perdb $opt v7
@ err = $err + $status

echo "-----------------------------------"
dbget v1
echo "v1 : |$v1|"

echo "-----------------------------------"
dbget v2
echo "v2 : |$v2|"

echo "-----------------------------------"
dbget v3
echo "v3 : |$v3|"

echo "-----------------------------------"
dbget v4
echo "v4 : |$v4|"

echo "-----------------------------------"
dbget v5
echo "v5 : |$v5|"

echo "-----------------------------------"
dbget v6
echo "v6 : |$v6|"

echo "-----------------------------------"
dbget v7
echo "v7 : |$v7|"

echo "-----------------------------------"
perdb $opt quit:
@ err = $err + $status

exit($err)
