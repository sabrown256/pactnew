#!/bin/csh -f
#
# EXT-JOB - test gexec with processes only
#

unalias *

@ err = 0

source $TestScrDir/env-csh

alias pe  'unsetenv gstatus ; echo "" ; echo "Command: \!*" ; gexec \!* ; dbget gstatus'

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

foreach i (1 2 3 4 5 6 7 8 9)

   echo ""
   echo "---------------------------------------------------"
   echo ""

   set id  = j$i
   set res = ext-$id.res
   set raw = $res.raw
   set dif = $res.dif
   set ref = $RefDir/ext-$id

   switch ($i)

# simple stdout variants
      case 1:
           set cmd = ( pe /bin/echo "$id" @o cat -n '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           breaksw
      case 2:
           set cmd = ( pe /bin/echo "$id" @o+1 cat -n '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           breaksw
      case 3:
           set cmd = ( pe /bin/echo "$id" @o2 cat -n '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           breaksw

# simple stdout and stderr variants
      case 4:
           set cmd = ( pe ls ext-* foo.h @o+1 @e+2 cat -n @ cat -E '>&!' $raw )
           set gst = "2 0 0"
           set srt = TRUE
           breaksw
      case 5:
           set cmd = ( pe ls ext-* foo.h @o2 @e3 cat -n @ cat -E '>&!' $raw )
           set gst = "2 0 0"
           set srt = TRUE
           breaksw

# simple bonded stdout/stderr variants
      case 6:
           set cmd = ( pe ls ext-* foo.h @b cat -n '>&!' $raw )
           set gst = "2 0"
           set srt = TRUE
           breaksw
      case 7:
           set cmd = ( pe ls ext-* foo.h @b+1 cat -n '>&!' $raw )
           set gst = "2 0"
           set srt = TRUE
           breaksw
      case 8:
           set cmd = ( pe ls ext-* foo.h @b2 cat -n '>&!' $raw )
           set gst = "2 0"
           set srt = TRUE
           breaksw
      case 9:
           set cmd = ( pe ls ext-* foo.h @o2 @e2 cat -n '>&!' $raw )
           set gst = "2 0"
           breaksw
           set srt = TRUE
   endsw

   Note $Log "cmd = $cmd"
   Note $Log "srt = $srt"

   eval $cmd

   if ($srt == TRUE) then
      flog $Log ( sort $raw >&! $res )
      flog $Log rm -f $raw
   endif

   flog $Log cat $res

   if ($?PERDB_PATH == 0) then
      eval `grep "setenv gstatus" $res`
      grep -v "setenv gstatus" $res >&! $res.new
      flog $Log mv $res.new $res
   endif

   Note $Log "> gstatus = $gstatus"
   if ("$gstatus" != "$gst") then
      flog $Log @ err = $err + 1
      echo "$id failed"
   else if (-f $ref) then
      flog $Log ( diff $res $ref >&! $dif )
      if ($status == 0) then
         echo "$id passed"
         flog $Log rm -f $res $dif
      else
         flog $Log @ err = $err + 1
         echo "$id differed"
         flog $Log cat $dif
      endif
   else
      echo "$id added"
      flog $Log cp $res $ref
      flog $Log rm -f $res
   endif

end

Note $Log "exiting with err = $err"
Note $Log ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

exit($err)
