#
# BL4.BIND - systematic type case blang test
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

derived str	character-A	G_STR	PyObject

fb1	fortran()	scheme()	python()
fb2	fortran()	scheme()	python()
fb3	fortran()	scheme()	python()
fb4	fortran()	scheme()	python()
fb5	fortran()	scheme()	python()
fb6	fortran()	scheme()	python()
fb7	fortran()	scheme()	python()
fb8	fortran()	scheme()	python()
# fb9	fortran()	scheme()	python()
fb10	fortran()	scheme()	python()
fb11	fortran()	scheme()	python()
# fb12	fortran()	scheme()	python()
# fb13	fortran()	scheme()	python()

fr1	fortran()	scheme()	python()
fr2	fortran()	scheme()	python()
fr3	fortran()	scheme()	python()
fr4	fortran()	scheme()	python()
fr5	fortran()	scheme()	python()
fr6	fortran()	scheme()	python()
fr7	fortran()	scheme()	python()
fr8	fortran()	scheme()	python()
# fr9	fortran()	scheme()	python()
fr10	fortran()	scheme()	python()
fr11	fortran()	scheme()	python()
# fr12	fortran()	scheme()	python()
fr13	fortran()	scheme()	python()

fp1	fortran()	scheme()	python()
fp2	fortran()	scheme()	python()
fp3	fortran()	scheme()	python()
fp4	fortran()	scheme()	python()
fp5	fortran()	scheme()	python()
fp6	fortran()	scheme()	python()
fp7	fortran()	scheme()	python()
fp8	fortran()	scheme()	python()
# fp9	fortran()	scheme()	python()
fp10	fortran()	scheme()	python()
fp11	fortran()	scheme()	python()
# fp12	fortran()	scheme()	python()
fp13	fortran()	scheme()	python()

