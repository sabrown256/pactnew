#!/bin/csh -f
#
# GSTEST - test PGS
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

setenv Package pgs
source ../scripts/test-env

setenv LogF  $Log

set Test = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: gstest [-h] [-vg] [<test>]*"
           echo "  h       this help message"
           echo "  vg      run tests under valgrind"
           echo "  <test>  one of: rendlr rendac"
           echo "                  grot axis mpeg smp"
           echo ""
           exit(1)
      case -*:
           if ("$Test" != "") then
              break
           endif
           breaksw
      default:
           set Test = ( $Test $1 )
           breaksw
   endsw
   shift
end

set RefDir = $RootDir/pgs/ref

cd $TestDir

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if ($RUN_TESTS == FALSE) then
   NoteD $Log ""
   NoteD $Log "PGS TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-e $RootDir/pgs/pgs.h) then

   NoteD $Log ""
   NoteD $Log "PGS TEST ..."

   Note $Log "BinDir = $BinDir"
   Note $Log "path   = $path"  
   Note $Log "MAKE   = $MAKE"

   setenv Tmp $cwd/.tmp.$$
   if ("$Valgrind" != "") then
      setenv Valgrind  "$Valgrind --suppressions=$SrcDir/vg.suppress"
      setenv Valgrind  "$Valgrind --suppressions=$RootDir/score/tests/vg.suppress"
   endif

   Note $Log "Parallel = |$Parallel|"
   flog $Log ../../../manager/pwhich pact
   flog $Log ../../../manager/pwhich cc

   if ("$Test" == "") then
      set Test = ""
      set Test = ( $Test trans axis rendlr rendac grot mpeg smp )
   endif

   foreach i ($Test)
      $SrcDir/tests/$i $argv
      if ($status == 1) then
         set ERROR = TRUE
      endif
   end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# CLEAN UP

   $TEST_CHECK -n PGS -e $ERROR -raf "$Tmp" clean

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK -e $ERROR fin

exit($status)

