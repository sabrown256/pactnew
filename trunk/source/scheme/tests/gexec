#!/bin/csh -f
#
# GEXEC - SCHEME gexec tests
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCHEME GEXEC Test ............"
set exe = $BinDir/scheme

# NOTE: define PERDB_PATH to avoid it defaulting to
# your home directory and allowing collisions with
# tests on other platforms
setenv PERDB_PATH $cwd/tgexec

   if (($CROSS_COMPILE == FALSE) && ($HaveIPC == YES)) then
      NoteD $Log ""
      NoteD $Log "                    $msg"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# generic function test
      NoteD $Log -n "                       func ......................"
      Note $Log ""

      set t0 = `$TIMER -r`

      $CROSS_FE $exe -e -l $FilesDir/gexecp.scm >&! shgexp.res
      set xstatus = $status

      flog $Log ( sort shgexp.res >&! shgexp.srt )
      flog $Log mv shgexp.srt shgexp.res

      flog $Log ( diff shgexp.res $FilesDir/ref/shgexp >&! shgexp.res.diff )
      set dstatus = $status

      set dt = `$TIMER -b $t0`
      unset t0

      if (($xstatus != 0) || ($dstatus != 0)) then
         flog $Log cat shgexp.res
         flog $Log cat shgexp.res.diff
         set xstatus = 1
      endif

      set rpf = ( shgexp.res* )

      $TEST_CHECK part -a gexec_basic -e $xstatus -l -dt $dt -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# file test
      NoteD $Log -n "                       file ......................"
      Note $Log ""

      set t0 = `$TIMER -r`

      $CROSS_FE $exe -e -l $FilesDir/gexecf.scm >&! shgexf.res
      set xstatus = $status

#      flog $Log ( sort shgexf.res >&! shgexf.srt )
#      flog $Log mv shgexf.srt shgexf.res

      flog $Log ( diff shgexf.res $FilesDir/ref/shgexf >&! shgexf.res.diff )
      set dstatus = $status

      set dt = `$TIMER -b $t0`
      unset t0

      if (($xstatus != 0) || ($dstatus != 0)) then
         flog $Log cat shgexf.res
         flog $Log cat shgexf.res.diff
         set xstatus = 1
      endif

      set rpf = ( shgexf.res* )

      $TEST_CHECK part -a gexec_file -e $xstatus -l -dt $dt -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# variable test
      NoteD $Log -n "                       var ......................."
      Note $Log ""

      set t0 = `$TIMER -r`

      $CROSS_FE $exe -e -l $FilesDir/gexecv.scm >&! shgexv.res
      set xstatus = $status

#      flog $Log ( sort shgexv.res >&! shgexv.srt )
#      flog $Log mv shgexv.srt shgexv.res

      flog $Log ( diff shgexv.res $FilesDir/ref/shgexv >&! shgexv.res.diff )
      set dstatus = $status

      set dt = `$TIMER -b $t0`
      unset t0

      if (($xstatus != 0) || ($dstatus != 0)) then
         flog $Log cat shgexv.res
         flog $Log cat shgexv.res.diff
         set xstatus = 1
      endif

      set rpf = ( shgexv.res* )

      $TEST_CHECK part -a gexec_var -e $xstatus -l -dt $dt -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   endif

$TEST_CHECK part -a gexec -e $nerr "$msg"

exit($status)
