#!/bin/csh -f
#
# CSYNT - SCHEME C syntax tests
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCHEME C Syntax Test ......... "
set exe = $BinDir/scheme

   set do_syntax = 0

   grep -w Arc $IncDir/make-def >& /dev/null
   set do_syntax = $status
   if (($do_syntax == 0) && (-d $SrcDir/syntax/c)) then
      NoteD $Log ""
      NoteD $Log "                    $msg"

      flog $Log cp $FilesDir/shctst.c $FilesDir/shcdcl.c $FilesDir/shcppts.[ch] .

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

      Separator $Log 
      NoteD $Log -n "                       C Declaration Syntax ...... "
      Note $Log ""

      set rpf = none
      set opt = ( -e -l shcdcl.c )
      set io  = shcdcl.res

      set t0 = `$TIMER -r`
      source ../../../scripts/test-run
      set dt = `$TIMER -b $t0`

      if ($xstatus == 0) then
         flog $Log ( diff shcdcl.res $FilesDir/ref/shcdcl >! shcdcl.res.diff )
         set xstatus = $status
      endif

      set rpf = ( $rpf shcdcl.res shcdcl.res.diff shcdcl.[ch] )

      $TEST_CHECK part -a csynt_decl -e $xstatus -l -dt $dt -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

      Separator $Log 
      NoteD $Log -n "                       CPP Syntax ................ "
      Note $Log ""

      set rpf = none
      set opt = ( -e -l shcppts.c )
      set io  = shcppts.res

      set t0 = `$TIMER -r`
      source ../../../scripts/test-run
      set dt = `$TIMER -b $t0`

      if ($xstatus == 0) then
         flog $Log ( diff shcppts.res $FilesDir/ref/shcppts >! shcppts.res.diff )
         set xstatus = $status
      endif

      set rpf = ( $rpf shcppts.res shcppts.res.diff shcppts.[ch] )

      $TEST_CHECK part -a csynt_cpp -e $xstatus -l -dt $dt -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

      Separator $Log 
      NoteD $Log -n "                       C Syntax .................. "
      Note $Log ""

      set rpf = none
      set opt = ( -e -l shctst.c )
      set io  = shctst.res

      set t0 = `$TIMER -r`
      source ../../../scripts/test-run
      set dt = `$TIMER -b $t0`

      if ($xstatus == 0) then
         flog $Log ( diff shctst.res $FilesDir/ref/shctst >! shctst.res.diff )
         set xstatus = $status
      endif

      $TEST_CHECK part -a csynt_synt -e $xstatus -l -dt $dt -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

      Separator $Log 
      NoteD $Log -n "                       C Translation ............. "
      Note $Log ""

      set rpf = none
      set opt = ( -e )
      set io  = shctst.scm

      set t0 = `$TIMER -r`
      if ("$Valgrind" == "") then
         flog $Log ( $CFE $exe $opt \(translate-c-file \"shctst.c\"\) >! shctst.scm )
         set xstatus = $status
      else
         ftee $Log $Valgrind $exe $opt \(translate-c-file \"shctst.c\"\)  |& \
         grep "ERROR SUMMARY:"                                            |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      set dt = `$TIMER -b $t0`

      if ($xstatus == 0) then
         flog $Log ( $CFE $exe $opt -l shctst.scm >! shctst-scm.res )
         set xstatus = $status
      endif

# fix results
      if ($xstatus == 0) then
         cat shctst-scm.res | sed -e '/^$/d' >! junk
         flog $Log mv junk shctst-scm.res 
         cat $FilesDir/ref/shctst | sed -e '/^$/d' >! junk
         flog $Log mv junk shctst 

         diff shctst-scm.res shctst >! shctst-scm.res.diff
         set xstatus = $status
      endif

      set rpf = ( $rpf shctst-scm.res shctst-scm.res.diff )
      set rpf = ( $rpf shctst.res shctst.res.diff shctst.c )

      $TEST_CHECK part -a csynt_trans -e $xstatus -l -dt $dt -rpf "$rpf" none

      @ nerr = $nerr + $status

   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

$TEST_CHECK part -a csynt -e $nerr "$msg"

exit($status)
