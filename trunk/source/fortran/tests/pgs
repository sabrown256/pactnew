#!/bin/csh -f
#
# PGS - Fortran test
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "PGS API Test ....................... "

set tst = $1

# check for Fortran compiler before doing Fortran test
set FC = `awk '$1 == "FCompiler" { print $3 }' $IncDir/make-def`
if ("$FC" != "") then
   Note $Log "Using fortran compiler $FC"
   flog $Log swhich -1 $FC
   flog $Log set xstatus = $status
else
   fog $Log set xstatus = 1
endif

#if (($xstatus == 0) && ("$MPI" == "")) then
if ($xstatus == 0) then
   NoteD $Log ""
   NoteD $Log "                    $msg"

   flog $Log pushd $SrcDir
   flog $Log $MAKE +na 2 pgs
   set xstatus = $status
   flog $Log popd

   if ($xstatus != 0) then
      NoteD $Log ""
      NoteD $Log "                         Cannot build PGS FORTRAN Test Program"
      flog $Log rm -f $BinDir/pdftst
      flog $Log rm -f $BinDir/pdfgts
      flog $Log rm -f $BinDir/pdfhyts
   else

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test hand written wrappers
      NoteD $Log -n "                        manual ......................... "
      Note $Log ""

      set exe = $BinDir/gsftst
      set rpf = none

      if ("$Valgrind" == "") then
         flog $Log $CFE $exe -s
         set xstatus = $status
      else
         Note $Log ""
         ftee $Log $Valgrind $exe            |& \
         grep "ERROR SUMMARY:"               |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      $TEST_CHECK part -a pgs_manual -e $xstatus -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test generated wrappers
      NoteD $Log -n "                        auto ........................... "
      Note $Log ""

      set exe = $BinDir/gsfgts
      set rpf = none

      if ("$Valgrind" == "") then
         flog $Log $CFE $exe -s
         set xstatus = $status
      else
         Note $Log ""
         ftee $Log $Valgrind $exe            |& \
         grep "ERROR SUMMARY:"               |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      $TEST_CHECK part -a pgs_auto -e $xstatus -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# contour test
      NoteD $Log -n "                        contour ........................ "
      Note $Log ""

      set exe = $BinDir/gsfcts
      set rpf = none

      if ("$Valgrind" == "") then
         flog $Log $CFE $exe -s
         set xstatus = $status
      else
         Note $Log ""
         ftee $Log $Valgrind $exe -s            |& \
         grep "ERROR SUMMARY:"                  |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      $TEST_CHECK part -a pgs_contour -e $xstatus -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK part -a pgs -e $nerr "$msg"

exit($status)
