#!/usr/bin/env pcsh
#OPT -f
#
# SUNRACE - run a prepared code under SUN tools looking for race conditions
#

@ err = 0

set job     = ""
set collect = TRUE
set analyze = TRUE
while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: sunrace [-h] [-l] <prog> [<args>]*"
           echo "   h   this help message"
           echo "   l   just look at the last results"
           exit(1)
      case -l:
           set collect = FALSE;
           breaksw
      default:
           while ($#argv > 0)
              set job = ( $job $1 )
              shift
           end
           break
           breaksw
   endsw
   shift
end

InitLog log $cwd/log.sunrace

set sundir = ( `pact -info COMPILER_SUN_PATH | sed 's/"//g'` )
if (-d "$sundir") then
   flog $log set bindir = $sundir/bin
else
   NoteD $log "Cannot find Sun tool directory - exiting"
   exit(1)
endif

flog $log set sunc = $bindir/collect
flog $log set suna = $bindir/analyzer
flog $log set suna = $bindir/tha

set copt = ""
#set copt = ( $copt -F on )      # look at descendant processes
#set copt = ( $copt -H on )      # do heap trace
#set copt = ( $copt -r on )
set copt = ( $copt -r races )   # check for thread race conditions

# find the actual executable
set exe = `which $job[1]`

# check whether it was instrumented
set inf = ( `nm $exe |& grep SUNWprivate | grep __tha_src_` )
if ("$inf" == "") then
   NoteD $log "$exe has not been instrumented for race checking - exiting"
   exit(1)
endif

# set the experiment directory
flog $log set exp = $cwd/$exe:t.er

# collect the data
if ($collect == TRUE) then
   Separator $log
   flog $log rm -rf $exp
   NoteD $log ""
   NoteD $log "Collecting data for: $job"

   flog $log $sunc -o $exp $copt $exe $job[2-]
endif

# analyze the results
if ($analyze == TRUE) then
   Separator $log
   NoteD $log ""
   NoteD $log "Examining results"

   flog $log $suna $exp
endif

exit($err)
