#!/bin/csh -f
#
# SCS-UPDATE - update sources whether GIT, CVS or SVN
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

set ldir = `dirname $0`
if ("$ldir" == ".") then
   set ldir = $cwd
endif
set scsi = ( `$ldir/which-scs` )

set sort   = FALSE
set unmngd = FALSE
set cvsopt = ""
set svnopt = ""
set args   = ""
while ($#argv > 0)
   switch ($1)
      case -A:
           set cvsopt = ( $cvsopt -A )
           set svnopt = ( $svnopt --depth files )
           breaksw
      case -l:
           set cvsopt = ( $cvsopt -l )
           set svnopt = ( $svnopt --depth files )
           breaksw
      case -s:
           set sort = TRUE
           breaksw
      case -u:
           set unmngd = TRUE
           breaksw
      default:
           set args = ( $args $1 )
           breaksw
   endsw
   shift
end

switch ($scsi[1])
   case git:
        pushd $scsi[2] >& /dev/null

        if ($unmngd == TRUE) then
	   if ($sort == TRUE) then
              git status -s |& egrep '^\?' | sed 's/^??/? /' | grep "$scsi[3]/" | sort -k 2
           else
              git status -s |& egrep '^\?' | sed 's/^??/? /' | grep "$scsi[3]/"
           endif
        else
           set repo = ( `$ldir/scs-meta -r` )

# update local copy with changes from master repo
           git pull $repo master >&! .log.sup
           set xstatus = $status

# report changed files
	   if ($sort == TRUE) then
              grep '|' .log.sup | sed 's/|.*$//' | awk '{printf("   P %s\n", $1);}' | sort -k 2
           else
              grep '|' .log.sup | sed 's/|.*$//' | awk '{printf("   P %s\n", $1);}'
           endif
           if ($xstatus == 0) then
              rm .log.sup
           else
              cat .log.sup
           endif

# update this way
# if this is not done then you eventually get messages like:
#    On branch master
#    Your branch is ahead of 'origin/master' by 17 commits.
# from git status
# what is the difference between the two pulls?
           git pull >&! .log.sup
           set xstatus = $status

# report status of local changes
           if ("$scsi[3]" == ".") then
              git status -s |& egrep -v '^\?'
           else
              git status -s |& egrep -v '^\?' | grep "$scsi[3]/"
           endif
        endif

        popd >& /dev/null
        breaksw

   case cvs:

        setenv CVS_RSH  ssh
        if ($unmngd == TRUE) then
	   if ($sort == TRUE) then
              cvs update $cvsopt $args |& egrep '^\?' | sort -k 2
           else
              cvs update $cvsopt $args |& egrep '^\?'
           endif
        else
	   if ($sort == TRUE) then
              cvs update $cvsopt $args |& egrep -v '^\?' |& grep -v 'cvs update' | sort -k 2
           else
              cvs update $cvsopt $args |& egrep -v '^\?' |& grep -v 'cvs update'
           endif
        endif
        breaksw

   case svn:

        svn update $svnopt $args
        if ($unmngd == TRUE) then
	   if ($sort == TRUE) then
              svn status $svnopt |& egrep '^\?' | sort -k 2
           else
              svn status $svnopt |& egrep '^\?'
           endif
        else
	   if ($sort == TRUE) then
              svn status $svnopt |& egrep -v '^\?' | sed 's|+| |' | sort -k 2
           else
              svn status $svnopt |& egrep -v '^\?' | sed 's|+| |'
           endif
        endif
        breaksw
endsw

exit($status)
