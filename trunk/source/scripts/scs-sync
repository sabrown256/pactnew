#!/bin/csh -f
#
# SCS-SYNC - update repository D from the contents of repository S
#          - excluding the contents of the specified sub directories
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

set ldir = `dirname $0`
if ("$ldir" == ".") then
   set ldir = $cwd
endif
set gitd = ( `$ldir/where-git` )
set repo = ( `$ldir/scs-meta -r` )
set dirs = ( `$ldir/scs-meta -d` )
set knd  = ( `$ldir/scs-meta -k` )

set repos = ""
set repod = ""
set excd  = ""
set tgt   = repo

while ($#argv > 0)
   switch ($1)
      case -exclude:
           shift
           set excd = ( $excd $1 )
           break
           breaksw
      default:
           if ("$repos" == "") then
              set repos = $1
           else if ("$repod" == "") then
              set repod = $2
           endif
           breaksw
   endsw
   shift
end

set rel = $cwd/syncs
rm -rf syncs syncd

# write exclude patterns file
set excf = $cwd/tmp.excf
rm -f $excf
touch $excf
foreach e ($dirs $excd)
   Note $excf $e/'*'
end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# SOURCE SETUP

if (("$repos" =~ *.gz) || ("$repos" =~ *.tgz)) then
   mkdir syncs
   pushd syncs
   tar xvzf ../$tar
   popd

else if ("$repos" =~ *.tar) then
   mkdir syncs
   pushd syncs
   tar xvf ../$tar
   popd

else
   scs-co -k $knd -d $repos

endif

scs-co -k $knd -d $repod

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# MERGE

pushd syncd

# rsync in the source tree files
rsync -av --delete --exclude-from=$excf $rel/ .

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# ADD/REMOVE ENTRIES

if (-d $gitd[1]) then

   git add -A

else if (-d CVS) then

   foreach d ($dirs)
      set sd = $d:h
      pushd $sd

# remove entries
      foreach f ( `cat CVS/Entries ! sed 's|^/||' | sed 's|/.*//$||'` )
         if (!(-f $f)) then
            cvs remove $f
         endif
      end

# add entries
      foreach f ( * )
         grep "/$f/" CVS/Entries >& /dev/null
         if ($status != 0) then
            cvs add $f
         endif
      end
      popd
   end

else if (-d .svn) then

   foreach d ($dirs)
      set sd = $d:h
      pushd $sd

# remove entries
      foreach e ( `cat .svn/text-base` )
         set f = $e:r
         if (!(-f $f)) then
            svn remove $f
         endif
      end

# add entries
      foreach e ( * )
         set f = .svn/text-base/$e.svn-base
         if (!(-f $f)) then
            svn add $f
         endif
      end
      popd
   end

endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# COMMIT

scs-commit -m "Import from $repos"

popd
rm -f $excf
rm -rf syncs syncd

exit($status)
