#!/bin/csh -f
#
# SCS-SYNC - update repository D from the contents of repository S
#          - excluding the contents of the specified sub directories
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

alias flog      'echo "Command: \!\!:2-$" >>& \!\!:1 ; \!\!:2-$ >>& \!\!:1'
alias ftee      'echo "Command: \!\!:2-$" >>& \!\!:1 ; \!\!:2-$ |& tee -ai \!\!:1'

set ldir = `dirname $0`
if ("$ldir" == ".") then
   set ldir = $cwd
endif
set gitd = ( `$ldir/where-git` )
set repo = ( `$ldir/scs-meta -r` )
set knd  = ( `$ldir/scs-meta -k` )

set repos = ""
set repod = ""
set pkgs  = ""
set pkgd  = ""
set excd  = ""
set dirs  = ""
set tgt   = repo

while ($#argv > 0)
   switch ($1)
      case -exclude:
           shift
           set excd = ( $excd $1 )
           breaksw
      default:
           if ("$repos" == "") then
	      if ("$1" =~ *,*) then
                 set repos = ( `echo $1 | sed 's|,.*$||'` )
                 set pkgs  = ( `echo $1 | sed 's|^.*,||'` )
              else
                 set repos = $1
              endif
           else if ("$repod" == "") then
	      if ("$1" =~ *,*) then
                 set repod = ( `echo $1 | sed 's|,.*$||'` )
                 set pkgd  = ( `echo $1 | sed 's|^.*,||'` )
              else
                 set repod = $1
              endif
           endif
           breaksw
   endsw
   shift
end

set log = $cwd/log.sync
rm -f $log
touch $log

set rel = $cwd/syncs
flog $log rm -rf syncs syncd

set excf = $cwd/tmp.excf
rm -f $excf
touch $excf

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# SOURCE SETUP

# get a working copy of the source
flog $log mkdir syncs
flog $log pushd syncs
if (("$repos" =~ *.gz) || ("$repos" =~ *.tgz)) then
   flog $log tar xvzf $repos

else if ("$repos" =~ *.tar) then
   flog $log tar xvf $repos

else
   if (-d $repos/CVSROOT) then
      set sknd = cvs
   else if (-d $repos/.git) then
      set sknd = git
   else
      set sknd = svn
   endif
   flog $log scs-co -k $sknd -d $repos $pkgs

endif
flog $log popd

# get a working copy of the destination repo
flog $log mkdir syncd
flog $log pushd syncd
if (-d $repod/CVSROOT) then
   set dknd = cvs
else if (-d $repod/.git) then
   set dknd = git
else
   set dknd = svn
endif
flog $log scs-co -k $dknd -d $repod $pkgd
flog $log popd

flog $log ls -la syncs/*
flog $log ls -la syncd/*

set pkg = `ls -1 syncs`

# add exclude patterns for source and destination
flog $log pushd syncs/$pkg
set dirs = ( $dirs `$ldir/scs-meta -d -a` )
flog $log popd

flog $log pushd syncd/$pkg
set dirs = ( $dirs `$ldir/scs-meta -d -a | sed 's|'$cwd'|\.|g'` )
flog $log popd

foreach e ($dirs $excd)
   if ("$e" =~ /*) then
      echo $e'/*' >>& $excf
   else if ("$e" =~ ./*) then
      echo $e | sed 's|^\./|'$pkg'/|' >>& $excf
   else if ("$e" =~ ../*) then
      echo $e | sed 's|^\.\./|'$pkg:h'/|' >>& $excf
   else
      echo $pkg'/*/'$e'/*' >>& $excf
   endif
end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# MERGE

flog $log pushd syncd

flog $log cat $excf

# rsync in the source tree files
flog $log rsync -av --delete --exclude-from=$excf $rel/ .

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# ADD/REMOVE ENTRIES

flog $log cd $pkg

if (-d $gitd[1]) then

   flog $log git add -A
   flog $log git status -s

else if (-d CVS) then

   foreach d ($dirs)
      set sd = $d:h
      flog $log pushd $sd

# remove entries
      foreach f ( `cat CVS/Entries | sed 's|^/||' | sed 's|/.*//$||'` )
         if ($f != D) then
            if (!(-f $f)) then
               flog $log cvs remove $f
            endif
         endif
      end

# add entries
      foreach f ( * )
         if ($f != CVS) then
            grep "/$f/" CVS/Entries >& /dev/null
            if ($status != 0) then
               flog $log cvs add $f
            endif
         endif
      end
      flog $log popd
   end

else if (-d .svn) then

   foreach d ($dirs)
      set sd = $d:h
      flog $log pushd $sd

# remove entries
      foreach e ( `cat .svn/text-base` )
         set f = $e:r
         if (!(-f $f)) then
            flog $log svn remove $f
         endif
      end

# add entries
      foreach e ( * )
         set f = .svn/text-base/$e.svn-base
         if (!(-f $f)) then
            flog $log svn add $f
         endif
      end
      flog $log popd
   end

endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# COMMIT

flog $log scs-update

flog $log scs-commit -m "Import from $repos"

flog $log cat log.commit

flog $log popd
flog $log rm -f $excf
flog $log rm -rf syncs syncd

exit($status)
