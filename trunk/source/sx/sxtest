#!/bin/csh -f
#
# SXTEST - test SX
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

setenv Package sx
setenv Test    ""
set vgdirs = ( scheme pgs score )
source ../scripts/test-env

set Tests = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: sxtest [-h] [-vg] [<test>]*"
           echo "  h       this help message"
           echo "  vg      run tests under valgrind"
           echo "  <test>  one of: oper hash c99 pdb dattr ar text sqlite xml vif"
           echo "                  pgs axis master exa iply shell mesh intrp diff ext"
           echo ""
           exit(1)
      case -*:
           breaksw
      default:
           set Tests = ( $Tests $1 )
           breaksw
   endsw
   shift
end

cd $TestDir

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if ($RUN_TESTS == FALSE) then
   NoteD $Log ""
   NoteD $Log "SX TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-e $BinDir/sx) then

# (Template of test on size of DIFF compare (i.e. 12 char date differs)
#   set Files = `find . -name "sxpdb.res.diff" -size 12c -print`
#   if ($#Files == 0) then....  compare fails!

   rm -f sxpdb.res sxpdba.res sxpdbi.res sxhash.res sxpgs.ps
   rm -f sxpdb.res.diff sxpdba.res.diff sxpdbi.res.diff sxhash.res.diff sxpgs.ps.diff

   NoteD $Log ""
   NoteD $Log "SX TEST ..."

   flog $Log pwd

   if ("$Tests" == "") then
      set Tests = ""
      set Tests = ( $Tests oper hash c99 )
      set Tests = ( $Tests pdb dattr ar text sqlite xml vif )
      set Tests = ( $Tests pgs axis iply )
      set Tests = ( $Tests master exa shell mesh intrp diff ext )
   endif

   foreach i ($Tests)
      $SrcDir/tests/$i
      @ nerr = $nerr + $status
   end

   $TEST_CHECK clean -n SX -e $nerr -raf "$Tmp"

   set xstatus = $status

else
   NoteD $Log ""
   NoteD $Log "$BinDir/sx does not exist"
endif

$TEST_CHECK fin -e $xstatus

exit($status)
