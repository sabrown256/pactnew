#!/bin/csh -f
#
# MLTEST - test PML
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

setenv Package pml
source ../scripts/test-env

setenv LogF  $Log

set Test = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: mltest [-h] [-vg] [<test>]*"
           echo "  h       this help message"
           echo "  vg      run tests under valgrind"
           echo "  <test>  one of: matrix eigen func"
           echo "                  interp perf fpe nan"
           echo "                  solv svd csum cgsolv"
           echo ""
           exit(1)
      case -*:
           breaksw
      default:
           set Test = ( $Test $1 )
           breaksw
   endsw
   shift
end

cd $TestDir

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if ($RUN_TESTS == FALSE) then
   NoteD $Log ""
   NoteD $Log "PML TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-e $RootDir/pml/pml.h) then
   echo ""
   echo "PML TEST ..."

   rm -f $Log
   touch $Log

   Note $Log "BinDir = $BinDir"
   Note $Log "path   = $path"  
   Note $Log "MAKE   = $MAKE"

   if ("$Valgrind" != "") then
      setenv Valgrind  "$Valgrind --suppressions=$RootDir/score/tests/vg.suppress"
   endif

   Note $Log "Parallel = |$Parallel|"
   flog $Log ../../../manager/pwhich pact
   flog $Log ../../../manager/pwhich cc

   if ("$Test" == "") then
      set Test = ""
      set Test = ( $Test matrix eigen func interp perf )
      set Test = ( $Test fpe nan solv svd csum cgsolv )
   endif

   foreach i ($Test)
      $SrcDir/tests/$i
      if ($status == 1) then
         set ERROR = TRUE
      endif
   end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# CLEAN UP             

   $TEST_CHECK clean -n PML -e $ERROR

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK fin -e $ERROR

exit($status)

