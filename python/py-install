#!/bin/csh -f
#
# PY-INSTALL - script for installation of PyPACT directory files
#            - invoked by install-pact
#            - assume we are already in dev/$SYS_Arch/lib
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

@ err = 0

set here = `dirname $0`
pushd $here:h >& /dev/null
if ($cwd/lib !~ */dev/*/lib) then
   echo "Improperly invoked - exiting"
   exit(1)
endif
popd >& /dev/null
unset here
if ($#argv != 1) then
   echo "No destination specified - exiting"
   exit(1)
endif

# where we are going
set instbase = $1
set ldstdir  = $instbase/lib

# where we are
set lsysdir = $cwd
set lsysdir = $lsysdir:h

set db   = $lsysdir/etc/cfg.db
set path = ( $lsysdir/bin $path )
set RM   = ( rm -f )

set lhave_python = ( TRUE TRUE )
set lhave_python = ( `grep HAVE_PYTHON= $db | sed 's|^.*=||' | sed 's|\"||g'` )
set lpy_ext      = ( `grep PY_Ext= $db      | sed 's|^.*=||' | sed 's|\"||g'` )
set lpy_dirsrc   = ( `grep PY_DirSrc= $db   | sed 's|^.*=||' | sed 's|\"||g'` )
set lpy_dirdst   = ( `grep PY_DirDst= $db   | sed 's|^.*=||' | sed 's|\"||g'` )

@ n = $#lhave_python
@ i = 0
while ($i < $n)
   @ i = $i + 1
   if ($lhave_python[$i] == TRUE) then
      set lex = $lpy_ext[$i]
      set ldd = $lpy_dirdst[$i]
      set lds = $lpy_dirsrc[$i]

      if (-d $lds) then
         pushd $lds >& /dev/null
         set lpy_bind = ( `ls` )
         popd >& /dev/null
         set bnd = pact_$lex

         foreach d ($ldd)
            set dst = $d/$bnd
            set src = $lds/$bnd
            mkdir -p $dst >& /dev/null
            if (-d $dst) then
               pushd $src >& /dev/null
               if (-f __init__.py) then
                  echo ""
                  echo "Installing python shared objects"
                  echo "   from $src"
                  echo "   to   $dst"
                  foreach f (libpy*.so.1 *.py *.pyc)
                     set file = $f
                     if (-f $file) then
                        touch $ldstdir/.lock
                        sinstall -p 664 $file $dst
                        if ($status != 0) then
                           echo "   FAILED ($status) $file"
                        else
                           echo "   $file"
                        endif
                     endif
                  end
                  popd >& /dev/null

                  pushd $dst >& /dev/null
                  foreach f (libpy*.so.1)
                     if (-f $f) then
                        set nstatus = 0
                        set fb = `expr "$f" : 'libpy\(.*\)\.so.1'`
                        set fo = $f:r
                        $RM $fo _$fb.so
                        ln -s $f $fo
                        ln -s $f _$fb.so
                        set nstatus = $status
                        if ($nstatus != 0) then
                           echo "   $f LINK FAILED ($status)"
                        else
                           chmod 664 $fo _$fb.so >& /dev/null
                           echo "   $fo -> $f"
                           echo "   _$fb.so -> $f"
                        endif
                     endif
                  end
               endif
               popd >& /dev/null
            endif
         end
      endif
   endif
end

exit($err)
