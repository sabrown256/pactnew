#!/bin/csh -f
#
# FILE-TIME - display time stamps of files in directories or containers
#
# include cpyright.h
#

unalias *

@ err = 0

set flst = ""
set tgt  = date

while ($#argv > 0)
   switch ($1)
      case -h:
           echo ""
           echo "Usage: file-time [-h] [-m <tgt>] <files>* | <container>*"
           echo "   h   this help message"
           echo "   m   output mode - one of:
           echo "        date - date in <yyyy>-<mm>-<dd>-<HH>-<MM>-<SS> form (default)"
           echo "        sec  - seconds from the epoch"
           echo ""
           exit(1)
      case -m:
           shift
           set tgt = $1
           breaksw
      default:
           if (-f $1) then
              set flst = ( $flst $1 )
           endif
           breaksw
   endsw
   shift
end

set os = `uname -s`

switch ($os)
   case Darwin:
        set unx = BSD
        breaksw
   case FreeBSD:
        set unx = BSD
        breaksw
   default:
        set unx = SYSV
        breaksw
endsw

set tl = ""

foreach f ($flst)

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# check archive files

   if ($f =~ *.a) then

# lnx: rw-rw---- uid/gid size Dec 17 06:11 2014 file
# sol: rw-rw---- uid/gid size Jul 24 10:24 2014 file
# bsd: rw-rw---- uid/gid size Dec 18 15:31 2013 file
# osx: rw-rw---- uid/gid size Nov 24 23:30 2014 file
      set atl = ( `ar -tv $f |& awk '{printf("file %s %s %s %s %s ", $8, $4, $5, $7, $6)}'` )
      set tl = ( $tl $atl )

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# check tar files

   else if ($f =~ *.tar) then

# lnx: -rw-rw-r-- usr/grp   size 2014-12-14 13:57 file
# sol: -rw-rw-r-- usr/grp   size 2014-12-14 13:57 file
# bsd: -rw-rw-r-- 0 usr grp size Dec 14 13:57     file
# osx: -rwxrwx--- usr/grp   size 2013-10-15 07:21 file
      switch ($unx)
         case BSD:
              set ttl = ( `tar -tvf $f |& awk '{printf("file %s %s %s %s ", $9, $6, $7, $8)}'`)
              breaksw
         default:
              set ttl = ( `tar -tvf $f |& awk '{printf("file %s %s %s ", $6, $4, $5)}'`)
              breaksw
      endsw
      set tl = ( $tl $ttl )

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# check compressed tar files

   else if ($f =~ *gz) then
      switch ($unx)
         case BSD:
              set ttl = ( `tar -tzvf $f |& awk '{printf("file %s %s %s %s ", $9, $6, $7, $8)}'`)
              breaksw
         default:
              set ttl = ( `tar -tzvf $f |& awk '{printf("file %s %s %s ", $6, $4, $5)}'`)
              breaksw
      endsw
      set tl = ( $tl $ttl )

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# check regular files

   else
      switch ($unx)
         case BSD:
              set inf = ( `stat -f "%Sm" -t "%b %d %Y %H %M %S" $f` )
              breaksw
         default:
              set inf = ( `date -r $f '+%b %d %Y %H:%M:%S'` )
              breaksw
      endsw

# lnx: -rw-rw-r-- 1  usr grp size Dec 14 13:57 file
# sol: -rw-rw-r--+ 1 usr grp size Dec 14 13:57 file
# bsd: -rw-rw-r--+ 1 usr grp size Dec 14 13:57 file
# osx: -rwxrwx---  1 usr grp size May  1  2013 file
      set tl = ( $tl file $f $inf )

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   endif
end

switch ($tgt)
   case date:
        set fmt = '+%Y-%m-%d-%H-%M-%S'
        breaksw
   case sec:
        set fmt = '+%s'
        breaksw
   default:
        echo "unknown mode '$tgt' - exiting"
        exit(1)
        breaksw
endsw

set ts = ""
set tf = ""
@ nl = $#tl
@ il = 0
while ($il < $nl)
   @ il = $il + 1
   if ($tl[$il] == file) then
      if ("$ts" != "") then
         switch ($unx)
            case BSD:
                 set its  = ( `echo $ts | sed 's|[-:]| |g'` )
                 if ($its[1] =~ [0-9]*) then
                    if ($#its > 5) then
                       set ifmt = '%m %d %Y %H %M %S'
                    else
                       set ifmt = '%m %d %Y %H %M'
                    endif
                 else
                    if ($#its > 5) then
                       set ifmt = '%b %d %Y %H %M %S'
                    else
                       set ifmt = '%b %d %Y %H %M'
                    endif
                 endif
                 set dt   = ( `date -j -f "$ifmt" "$its" "$fmt"` )
                 breaksw
            default:
                 set dt = ( `date -d "$ts" "$fmt"` )
                 breaksw
         endsw
         printf "   %-25s %s\n" $tf $dt
      endif
      @ il = $il + 1
      set tf = $tl[$il]
      set ts = ""
   else
      set ts = ( $ts $tl[$il] )
   endif
end

if ("$ts" != "") then
   switch ($unx)
      case BSD:
           set its  = ( `echo $ts | sed 's|[-:]| |g'` )
           if ($its[1] =~ [0-9]*) then
              if ($#its > 5) then
                 set ifmt = '%m %d %Y %H %M %S'
              else
                 set ifmt = '%m %d %Y %H %M'
              endif
           else
              if ($#its > 5) then
                 set ifmt = '%b %d %Y %H %M %S'
              else
                 set ifmt = '%b %d %Y %H %M'
              endif
           endif
           set dt   = ( `date -j -f "$ifmt" "$its" "$fmt"` )
           breaksw
      default:
           set dt = ( `date -d "$ts" "$fmt"` )
           breaksw
   endsw
   printf "   %-25s %s\n" $tf $dt
endif

exit($err)
