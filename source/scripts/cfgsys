#!/bin/csh -f
#
# CFGSYS - find and export the SYS group variables
#
# include "cpyright.h"
#

unalias *

@ err = 0

set exe = $0

@ count = 1
while (1)
   set bindir = `dirname $exe`
   if ("$bindir" != "") break
   if ($count >= 10) then
      echo "CFGSYS: dirname returned null"
      exit(111)
   endif
   @ count = $count + 1
   sleep 1
end

set path = ( $bindir /usr/bin /bin )

set dbdir = ""
while ($#argv > 0)
   switch ($1)
      case -c:
           unsetenv HSY_Host

           unsetenv PSY_Arch
           unsetenv PSY_Base
           unsetenv PSY_Cfg
           unsetenv PSY_CfgMan
           unsetenv PSY_ID
           unsetenv PSY_TYPE
           unsetenv PSY_SITE
           unsetenv PSY_AIRoot
           unsetenv PSY_ASRoot
           unsetenv PSY_InstRoot
           unsetenv PSY_Root
           unsetenv PSY_Prefix
           unsetenv PSY_AnaDir
           unsetenv PSY_CfgDir
           unsetenv PSY_FltDir
           unsetenv PSY_MngDir
           unsetenv PSY_ScrDir
           unsetenv PSY_TmpDir
           breaksw
      case -d:
           shift
           set dbdir = $1
           breaksw
      case -h:
           echo ""
           echo "Usage: cfgsys [-c] [-d <dir>] [-h]"
           echo ""
           echo "  c    clear all SYS group variables first"
           echo '  d    directory where database lives (i.e. .../pact/dev/$PSY_id/etc)'
           echo "  h    this help message"
           echo ""
           exit(1)
   endsw
   shift
end

# see if there is an env-pact.csh to be found
set dir    = ""
set etcdir = $bindir:h/etc
if ("$dbdir" != "") then
   set dir = $dbdir
else if (-f $etcdir/env-pact.csh) then
   set dir = $etcdir
endif

# from env-pact.csh
if ("$dir" != "") then
   eval `grep PSY_ $dir/env-pact.csh | awk '{printf("%s ; \n", $0);}'`

# best defaults
else
   set basedir = $bindir:h
   pushd $basedir >>& /dev/null
   set basedir = $cwd
   popd >>& /dev/null

   if ($?HSY_Host == 0) then
      setenv HSY_Host    `uname -n`
   endif

   if ($?PSY_Arch == 0) then
      setenv PSY_Arch    `system-id`
   endif

   if ($?PSY_Cfg == 0) then
      setenv PSY_Cfg  ""
   endif

#   if ($?PSY_CfgMan == 0) then
      setenv PSY_CfgMan  $basedir/scripts/cfgman
#   endif

   if ($?PSY_ID == 0) then
      setenv PSY_ID      `cfgman -d ../dev use`
   endif

   if ($?PSY_TYPE == 0) then
      setenv PSY_TYPE    ${PSY_Arch}
   endif

#   if ($?PSY_SITE == 0) then
#      setenv PSY_SITE    LONER
#   endif

   if ($?PSY_Prefix == 0) then
      setenv PSY_Prefix  "z-"
   endif

# root directories
   if ($?PSY_Base == 0) then
      setenv PSY_Base    $basedir
   endif

   if ($?PSY_Root == 0) then
      setenv PSY_Root     $basedir/dev/${PSY_ID}
   endif

   if ($?PSY_AIRoot == 0) then

# GOTHA: OLD_DB_VARS look for old variable
      if ($?DAI_ROOT == 1) then
         setenv PSY_AIRoot  $DAI_ROOT
      else
         setenv PSY_AIRoot  /usr/share
      endif
   endif

   if ($?PSY_ASRoot == 0) then

# GOTHA: OLD_DB_VARS look for old variable
      if ($?DAS_ROOT == 1) then
         setenv PSY_ASRoot  $DAS_ROOT
      else
         setenv PSY_ASRoot  /usr/local
      endif
   endif

   if ($?PSY_InstRoot == 0) then
      setenv PSY_InstRoot  none
   endif

# directories
   if ($?PSY_AnaDir == 0) then
      setenv PSY_AnaDir  $basedir/manager/analyze
   endif

   if ($?PSY_CfgDir == 0) then
      setenv PSY_CfgDir  cfg-${PSY_ID}
   endif

   if ($?PSY_FltDir == 0) then
      setenv PSY_FltDir  ""
   endif

   if ($?PSY_MngDir == 0) then
      setenv PSY_MngDir  $basedir/manager
   endif

   if ($?PSY_ScrDir == 0) then
      setenv PSY_ScrDir  $basedir/scripts
   endif

   if ($?PSY_TmpDir == 0) then
      setenv PSY_TmpDir  ${PSY_Prefix}${PSY_ID}
   endif

endif

echo "setenv HSY_Host     $HSY_Host ; "
echo "setenv PSY_Arch     $PSY_Arch ; "
echo "setenv PSY_Cfg      $PSY_Cfg ; "
echo "setenv PSY_CfgMan   $PSY_CfgMan ; "
echo "setenv PSY_ID       $PSY_ID ; "
echo "setenv PSY_Prefix   $PSY_Prefix ; "
echo "setenv PSY_TYPE     $PSY_TYPE ; "
if ($?PSY_SITE == 1) then
   echo "setenv PSY_SITE     $PSY_SITE ; "
endif

# root directories
echo "setenv PSY_Base     $PSY_Base ; "
echo "setenv PSY_Root     $PSY_Root ; "
echo "setenv PSY_AIRoot   $PSY_AIRoot ; "
echo "setenv PSY_ASRoot   $PSY_ASRoot ; "
echo "setenv PSY_InstRoot $PSY_InstRoot ; "

# specific directories
echo "setenv PSY_AnaDir   $PSY_AnaDir ; "
echo "setenv PSY_CfgDir   $PSY_CfgDir ; "
echo "setenv PSY_FltDir   $PSY_FltDir ; "
echo "setenv PSY_MngDir   $PSY_MngDir ; "
echo "setenv PSY_ScrDir   $PSY_ScrDir ; "
echo "setenv PSY_TmpDir   $PSY_TmpDir"

exit($err)

