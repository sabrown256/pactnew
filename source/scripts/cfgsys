#!/bin/csh -f
#
# CFGSYS - find and export the SYS group variables
#
# include "cpyright.h"
#

unalias *

@ err = 0

set exe = $0

@ count = 1
while (1)
   set bindir = `dirname $exe`
   if ("$bindir" != "") break
   if ($count >= 10) then
      echo "CFGMAN: dirname returned null"
      exit(111)
   endif
   @ count = $count + 1
   sleep 1
end

set path = ( $bindir /usr/bin /bin )

set dbdir = ""
while ($#argv > 0)
   switch ($1)
      case -c:
           unsetenv SYS_Arch
           unsetenv SYS_ID
           unsetenv SYS_TYPE
           unsetenv SYS_SITE
           unsetenv SYS_Root
           unsetenv SYS_Prefix
           unsetenv SYS_CfgDir
           unsetenv SYS_TmpDir
           breaksw
      case -d:
           shift
           set dbdir = $1
           breaksw
      case -h:
           echo ""
           echo "Usage: cfgsys [-c] [-d <dir>] [-h]"
           echo ""
           echo "  c    clear all SYS group variables first"
           echo '  d    directory where database lives (i.e. .../pact/dev/$sys_id/etc)'
           echo "  h    this help message"
           echo ""
           exit(1)
   endsw
   shift
end

# see if there is an env-pact.csh to be found
set dir    = ""
set etcdir = $bindir:h/etc
if ("$dbdir" != "") then
   set dir = $dbdir
else if (-f $etcdir/env-pact.csh) then
   set dir = $etcdir
endif

# from env-pact.csh
if ("$dir" != "") then
   eval `grep SYS_ $dir/env-pact.csh | awk '{printf("%s ; \n", $0);}'`

# best defaults
else
   set basedir = $bindir:h

   if ($?SYS_Arch == 0) then
      setenv SYS_Arch    `system-id`
   endif

   if ($?SYS_ID == 0) then
      setenv SYS_ID      `cfgman -d ../dev use`
   endif

   if ($?SYS_TYPE == 0) then
      setenv SYS_TYPE    ${SYS_Arch}
   endif

   if ($?SYS_SITE == 0) then
      setenv SYS_SITE    LONER
   endif

   if ($?SYS_Root == 0) then
      setenv SYS_Root     $basedir/dev/${SYS_ID}
   endif

   if ($?SYS_Prefix == 0) then
      setenv SYS_Prefix  "z-"
   endif

   if ($?SYS_CfgDir == 0) then
      setenv SYS_CfgDir  cfg-${SYS_ID}
   endif

   if ($?SYS_TmpDir == 0) then
      setenv SYS_TmpDir  ${SYS_Prefix}${SYS_ID}
   endif

   if ($?SYS_AIRoot == 0) then

# GOTHA: OLD_DB_VARS look for old variable
      if ($?DAI_ROOT == 1) then
         setenv SYS_AIRoot  $DAI_ROOT
      else
         setenv SYS_AIRoot  /usr/local
      endif
   endif

   if ($?SYS_ASRoot == 0) then

# GOTHA: OLD_DB_VARS look for old variable
      if ($?DAS_ROOT == 1) then
         setenv SYS_ASRoot  $DAS_ROOT
      else
         setenv SYS_ASRoot  /usr/share
      endif
   endif

   if ($?SYS_Cfg == 0) then
      setenv SYS_Cfg  ""
   endif

   if ($?SYS_FltDir == 0) then
      setenv SYS_FltDir  ""
   endif

   if ($?SYS_InstRoot == 0) then
      setenv SYS_InstRoot  none
   endif

endif

echo "setenv SYS_Arch     $SYS_Arch ; "
echo "setenv SYS_AIRoot   $SYS_AIRoot ; "
echo "setenv SYS_ASRoot   $SYS_ASRoot ; "
echo "setenv SYS_Cfg      $SYS_Cfg ; "
echo "setenv SYS_FltDir   $SYS_FltDir ; "
echo "setenv SYS_InstRoot $SYS_InstRoot ; "
echo "setenv SYS_ID       $SYS_ID ; "
echo "setenv SYS_TYPE     $SYS_TYPE ; "
echo "setenv SYS_SITE     $SYS_SITE ; "
echo "setenv SYS_Root     $SYS_Root ; "
echo "setenv SYS_Prefix   $SYS_Prefix ; "
echo "setenv SYS_CfgDir   $SYS_CfgDir ; "
echo "setenv SYS_TmpDir   $SYS_TmpDir"

exit($err)

