#
# TEST-RUN - run the test
#          - input variables (shell variables):
#          -    exe      the name of the executable to be run
#          -    opt      command line options for EXE
#          -    io       the I/O mode for the run
#          -    rpf      list of files to be removed on test passing
#          - sets variables
#          -    xstatus  the exit status of the executable
#          -    dt       the run time in seconds
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set t0 = `$TIMER -r`

switch ($io)
   case ftee:
        if ("$Valgrind" == "") then
           ftee $Log $CFE $exe $opt
           set xstatus = $status
        else
           ftee $Log $Valgrind $exe $opt           |& \
           grep "ERROR SUMMARY:"                   |& \
           awk '{ print $4 }'   >&! $Tmp
           set xstatus = `cat $Tmp`
           set rpf     = ( $rpf $Tmp )
        endif
        breaksw

   case flog:
        if ("$Valgrind" == "") then
           flog $Log $CFE $exe $opt
           set xstatus = $status
        else
           ftee $Log $Valgrind $exe $opt           |& \
           grep "ERROR SUMMARY:"                   |& \
           awk '{ print $4 }'   >&! $Tmp
           set xstatus = `cat $Tmp`
           set rpf     = ( $rpf $Tmp )
        endif
        breaksw

   case none:
        if ("$Valgrind" == "") then
           $exe $opt
           set xstatus = $status
        else
           $Valgrind $exe $opt                     |& \
           grep "ERROR SUMMARY:"                   |& \
           awk '{ print $4 }'   >&! $Tmp
           set xstatus = `cat $Tmp`
           set rpf     = ( $rpf $Tmp )
        endif
        breaksw

   default:
        if ("$Valgrind" == "") then
           flog $Log ($CFE $exe $opt >&! $io)
           set xstatus = $status
        else
           ftee $Log $Valgrind $exe $opt           |& \
           grep "ERROR SUMMARY:"                   |& \
           awk '{ print $4 }'   >&! $Tmp
           set xstatus = `cat $Tmp`
           set rpf     = ( $rpf $Tmp )
        endif
        breaksw
endsw

setenv dt `$TIMER -b $t0`

# GOTCHA: Note ends up not being defined in psh/tests/s1t1 et al
# because of alias inheritance issues
#Note $Log "test-run: $exe exit status = $xstatus"

unset t0

