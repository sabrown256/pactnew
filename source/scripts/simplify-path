#!/bin/csh -f
#
# SIMPLIFY-PATH - eliminate duplicate path entries
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#

unalias *

set synt = csh
set var  = PATH
set elst = ""
set vrb  = FALSE

while ($#argv > 0)
   switch ($1)
      case -csh:
           set synt = csh
           breaksw
      case -h:
           echo ""
           echo "Usage: simplify-path [-csh] -h [-p <exe>]* [-sh] [-v] [<var>]"
           echo "    csh    emit result in C Shell syntax (default)"
           echo "    h      this help message"
           echo "    p      eliminate all but first directory with <exe>"
           echo "    sh     emit result in Bourne Shell syntax"
           echo "    v      verbose mode"
           echo "    <var>  variable to simplify, e.g. PATH or MANPATH"
           echo "           default is PATH"
           echo ""
           exit(1)
      case -p:
           shift
           set elst = ( $elst $1 )
           breaksw
      case -v:
           set vrb = TRUE
           breaksw
      case -sh:
           set synt = sh
           breaksw
      default:
           set var = $1
           breaksw
   endsw
   shift
end

# get the variable value in list form
# substitute '+@-@+' for ' ' before converting ':' to ' '
# this permits handling directories names with spaces
set val = ( `printenv $var | sed 's| |+@-@+|g' | sed 's/^:/--:/' | sed 's/:$/:--/' | sed 's/:/ /g'` )

# compute a new val in list form
# entries will now be unique
set nval = ""
foreach i ( $val )
   set ok = TRUE
   foreach j ( $nval )
      if ($j == $i) then
         set ok = FALSE
         break
      endif
   end
   if ($ok == TRUE) then
      set nval = ( $nval $i )
   else if ($vrb == TRUE) then
      echo "  -d  $i"
   endif
end
if ($vrb == TRUE) then
   echo "entries after duplicate entry removal: $#nval"
endif

# remove directories after the first with items from elst
foreach e ( $elst )
   set first = TRUE
   set tval  = ( $nval )
   set nval  = ""
   foreach i ( $tval )
      set ir = ( `echo $i | sed 's/--//g' | sed 's|+@-@+| |g'` )
      set ok = TRUE
      if (-e $ir/$e) then
         if ($first == TRUE) then
            set first = FALSE
         else
            set ok = FALSE
         endif
      endif
      if ($ok == TRUE) then
         set nval = ( $nval $i )
      else if ($vrb == TRUE) then
         echo "  -e  $i"
      endif
   end
end
if ($vrb == TRUE) then
   echo "entries after duplicate executable removal: $#nval"
endif

# convert to back to environment valiable form
setenv NVAL ""
foreach i ( $nval )
   if ("$NVAL" == "") then
      setenv NVAL ${i}
   else
      setenv NVAL ${NVAL}:${i}
   endif
end

# substitute ' ' for '+@-@+'
setenv NVAL `echo $NVAL | sed 's/--//g' | sed 's|+@-@+| |g'`

# print the new val
if ($synt == csh) then
   echo "setenv $var $NVAL"
else
   echo "export $var=$NVAL"
endif

exit($status)
