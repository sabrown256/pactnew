#!/bin/csh -f
#
# ULTEST - test ULTRA
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

setenv Package ultra
setenv Test    ""
source ../scripts/test-env

set Tests = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: ultest [-h] [-vg] [<test>]*"
           echo "  h       this help message"
           echo "  vg      run tests under valgrind"
           echo "  <test>  one of: master mem io"
           echo "                  fnc fft fill"
           echo "                  annot env"
           echo ""
           exit(1)
      case -*:
           breaksw
      default:
           set Tests = ( $Tests $1 )
           breaksw
   endsw
   shift
end

cd $TestDir

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if ($RUN_TESTS == FALSE) then
   NoteD $Log ""
   NoteD $Log "ULTRA TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-e $BinDir/ultra) then

   NoteD $Log ""
   NoteD $Log "ULTRA TEST ..."

# NOTE: remove files here so that platforms lacking 'system' might work
   set files = ""
   set files = ( $files ultest.ps.diff ultest.err ultest.tmp )
   set files = ( $files ultest.asc ultest.log )
   set files = ( $files ultest.pdb ultest.pdb.chk )
   set files = ( $files curves.a testt.cgm my.cgm )
   set files = ( $files table1.tmp temp2.tmp ultest1.ps ultest2.ps temp2.tmp )
   set files = ( $files _tmp.dat )

   flog $Log $RM $files

   Note $Log "BinDir = $BinDir"
   Note $Log "path   = $path"  
   Note $Log "SCHEME = $SCHEME"
   Note $Log "ultra  = $Ultra"

   setenv Tmp $cwd/.tmp.$$
   if ("$Valgrind" != "") then
      setenv Valgrind  "$Valgrind --suppressions=$RootDir/score/tests/vg.suppress"
   endif

   flog $Log ../../../manager/pwhich pact
   flog $Log ../../../manager/pwhich cc

   if ("$Tests" == "") then
      set Tests = ""
      set Tests = ( $Tests master io fnc fft fill axis annot env )
# GOTCHA: restore memory leak test
#      set Tests = ( $Tests master mem io fnc fft fill axis annot env )
   endif

   foreach i ($Tests)
      $SrcDir/tests/$i
      if ($status == 1) then
         set ERROR = TRUE
      endif
   end

   set rpf = ( ultest.ps ultest.log ultest.pdb.chk ulmmt.log ulfft.log )

   $TEST_CHECK clean -n ULTRA -e $ERROR -raf "$Tmp" -rpf "$rpf"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

else
   NoteD $Log ""
   NoteD $Log "$BinDir/ultra does not exist"
endif

$TEST_CHECK fin -e $ERROR

exit($status)
