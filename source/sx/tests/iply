#!/bin/csh -f
#
# IPLY - intersecting polygon test
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

#--------------------------------------------------------------------------

#                        INTERSECTING POLYGON TEST

#--------------------------------------------------------------------------

   NoteD $Log ""
   NoteD $Log "                    SX PML Polygon Test .......... "

   @ lerr    = 0
   set UTime = `$TIMER -r`

   foreach t (iply1 iply2)

      NoteD $Log -n "                       $t ..................... "
      Note $Log ""

      flog $Log rm -f $t*.diff $t*.ps

      set bt = `$TIMER -r`
      if ("$Valgrind" == "") then
         flog $Log ($PDBView -l $RootDir/sx/tests/$t.scm >& $t.res)
         set xstatus = $status
      else
         ftee $Log $Valgrind $BinDir/sx -e -p -q -l $RootDir/sx/tests/$t.scm |& \
         grep "ERROR SUMMARY:"                                               |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         flog $Log $RM $Tmp
      endif

      set et = `$TIMER -b $bt`

      if ("$Valgrind" != "") then
         if ($xstatus != 0) then
            NoteD $Log "ng ($xstatus/$et)"
            set Err = 1
         else
            NoteD $Log "ok ($et)"
         endif
      else if (($xstatus == 254) || ($xstatus == 255)) then
         NoteD $Log "omitted ($xstatus/$et)"
         set xstatus = 0
      else if ($xstatus != 0) then
         NoteD $Log "crashed ($xstatus/$et)"
         @ lerr = $lerr + 1
      else
         flog $Log @ xstatus = 0
         foreach i ($t.ps)
            if (-f $RootDir/sx/tests/ref/$i) then
               flog $Log ($CFE $PSDIFF $i $RootDir/sx/tests/ref/$i >&! $i.diff)
               @ st = $status
               @ xstatus = $xstatus + $st
               Note $Log "Test $i:r status $st"
            endif
         end

         if ($xstatus != 0) then
            NoteD $Log "ng ($et)"
            @ lerr = $lerr + 1
         else
            NoteD $Log "ok ($et)"
            flog $Log rm -f $t.res.diff $t.res $t.ps $t*.diff
         endif
      endif

   end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   set ETime = `$TIMER -b $UTime`

   if ($lerr != 0) then
      NoteD $Log "                    SX PML Polygon Test .......... FAILED ($ETime)"
      set Err = 1
   else
      NoteD $Log "                    SX PML Polygon Test .......... PASSED ($ETime)"
   endif

exit($Err)
