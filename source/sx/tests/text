#!/bin/csh -f
#
# TEXT - SX PDB text test
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

#--------------------------------------------------------------------------

#                                  TEXT TEST

#--------------------------------------------------------------------------

   NoteD $Log ""
   NoteD $Log -n "                    SX PDB Text Test ............. "
   Note $Log ""

   flog $Log rm -f sxpdbt.log sxpdbt.ttx sxpdbt.a sxpdbt.res

   flog $Log cp $TDir/sxpdbg.scm .

   set UTime = `$TIMER -r`
   if ("$Valgrind" == "") then
      flog $Log ($PDBView -l $RootDir/sx/tests/sxpdbt.scm >& sxpdbt.res)
      set xstatus = $status
   else
      ftee $Log $Valgrind $BinDir/sx -e -p -q -l $RootDir/sx/tests/sxpdbt.scm |& \
      grep "ERROR SUMMARY:"                                                   |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      flog $Log $RM $Tmp
   endif

   set Ref   = $RootDir/sx/tests/ref/sxpdbt
   set ETime = `$TIMER -b $UTime`

   if ("$Valgrind" != "") then
      if ($xstatus != 0) then
         NoteD $Log "FAILED ($xstatus/$ETime)"
         set xstatus = 2
      else
         NoteD $Log "PASSED ($ETime)"
      endif
   else if ($xstatus != 0) then
      NoteD $Log "CRASHED ($xstatus/$ETime)"
      set xstatus = 2
   else if (-f $Ref) then
      flog $Log diff sxpdbt.res $Ref
      set xstatus = $status
   else
      flog $Log cp sxpdbt.res $Ref
   endif

   if ($xstatus == 2) then
      set Err = 1
   else if ($xstatus != 0) then
      NoteD $Log "FAILED ($ETime)"
      set Err = 1
   else
      NoteD $Log "PASSED ($ETime)"
      flog $Log touch sxpdbt.foo
      flog $Log rm -f sxpdbt.*
   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

exit($Err)
