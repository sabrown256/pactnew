/*
 * MYSQL.API - define MYSQL API for PACT
 *
 * #include "cpyright.h"
 *
 */

#ifndef MYSQL_API_PACT

#define MYSQL_API_PACT


typedef struct s_mysql_methods mysql_methods;

struct s_mysql_methods
   {MYSQL *(*init)(MYSQL *sql);                               /* mysql_init */
    MYSQL *(*connect)(MYSQL *sql, const char *host,   /* mysql_real_connect */
		      const char *user,
		      const char *passwd,
		      const char *db,
		      unsigned int port,
		      const char *unix_socket,
		      unsigned long clientflag);
    void (*close)(MYSQL *sql);                               /* mysql_close */
    int	(*query)(MYSQL *sql, const char *q);                 /* mysql_query */
    MYSQL_RES *(*result)(MYSQL *mysql);               /* mysql_store_result */
    my_ulonglong (*num_rows)(MYSQL_RES *res);             /* mysql_num_rows */
    unsigned int (*num_fields)(MYSQL_RES *res);         /* mysql_num_fields */
    MYSQL_ROW (*fetch_row)(MYSQL_RES *result);           /* mysql_fetch_row */
    void (*free_result)(MYSQL_RES *result);            /* mysql_free_result */
    const char *(*error)(MYSQL *mysql);};                    /* mysql_error */

static mysql_methods
 _MS_mth;

/*--------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------*/

#define DYNAMICALLY_LINKED

/* _MYSQL_SET_METHODS - setup the methods for MYSQL access */

void _MYSQL_set_methods(void)
   {

    if (_MS_mth.init == NULL)

#ifdef DYNAMICALLY_LINKED

/* dynamically linked way */
       {int rv;

	rv = SC_so_register_func(OBJ_SO, "libmysql.so", "mysql",
				 NULL, NULL, NULL, NULL);
	if (rv == FALSE)
	   PD_error("CANNOT LOAD 'libmysql.so'", PD_OPEN);

        _MS_mth.init        = SC_so_get(OBJ_SO, "mysql", "mysql_init");
	_MS_mth.connect     = SC_so_get(OBJ_SO, "mysql", "mysql_real_connect");
	_MS_mth.close       = SC_so_get(OBJ_SO, "mysql", "mysql_close");
	_MS_mth.query       = SC_so_get(OBJ_SO, "mysql", "mysql_query");
	_MS_mth.result      = SC_so_get(OBJ_SO, "mysql", "mysql_store_result");
	_MS_mth.num_rows    = SC_so_get(OBJ_SO, "mysql", "mysql_num_rows");
	_MS_mth.num_fields  = SC_so_get(OBJ_SO, "mysql", "mysql_num_fields");
	_MS_mth.fetch_row   = SC_so_get(OBJ_SO, "mysql", "mysql_fetch_row");
	_MS_mth.free_result = SC_so_get(OBJ_SO, "mysql", "mysql_free_result");
	_MS_mth.error       = SC_so_get(OBJ_SO, "mysql", "mysql_error");};

#else

/* statically linked way */
       {_MS_mth.init        = mysql_init;
	_MS_mth.connect     = mysql_real_connect;
	_MS_mth.close       = mysql_close;
	_MS_mth.query       = mysql_query;
	_MS_mth.result      = mysql_store_result;
	_MS_mth.num_rows    = mysql_num_rows;
	_MS_mth.num_fields  = mysql_num_fields;
	_MS_mth.fetch_row   = mysql_fetch_row;
	_MS_mth.free_result = mysql_free_result;
	_MS_mth.error       = mysql_error;};

#endif

    return;}

/*--------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------*/

#define  mysql_init          _MS_mth.init
#define  mysql_real_connect  _MS_mth.connect
#define  mysql_close         _MS_mth.close
#define  mysql_query         _MS_mth.query
#define  mysql_store_result  _MS_mth.result
#define  mysql_num_rows      _MS_mth.num_rows
#define  mysql_num_fields    _MS_mth.num_fields
#define  mysql_fetch_row     _MS_mth.fetch_row
#define  mysql_free_result   _MS_mth.free_result
#define  mysql_error         _MS_mth.error

#endif

