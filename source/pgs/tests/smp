#!/bin/csh -f
#
# SMP - PGS parallel rendering tests
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "PGS Parallel Test ...... "
set exe = $BinDir/gsatst

@ err = 0

   if ("$Parallel" != "") then
      Separator $Log

      NoteD $Log ""
      NoteD $Log "                    $msg"

      set lErr  = 0
      set BTime = `$TIMER -r`

      if ($?IBM_BGP == 1) then
         set nthread = 2
      else
         set nthread = 4
      endif

      NoteD $Log -n "                        new ................ "

      set rpf = "none"
      set opt = ""
      set opt = ( -t $nthread )
      set opt = ( $opt -f -A -B -D -E -F -1 -2 -3 -4 -5 -6 -7 -9 -10 -11 -12 )
      if ("$Valgrind" == "") then
         flog $Log $CFE $exe $opt
         set xstatus = $status
      else
         ftee $Log $Valgrind $exe $opt           |& \
         grep "ERROR SUMMARY:"                   |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      set rpf = ( $rpf gscgmt.cgm )

      if ($xstatus == 123) then
         set xstatus = 251
      endif

      $TEST_CHECK part -a smp_new -e $xstatus -l -x $exe -rpf "$rpf" none

      @ err = $err + $status

      NoteD $Log -n "                        pool ............... "

      set rpf = "none"
      set opt = ""
      set opt = ( -t $nthread )
      set opt = ( $opt -s -A -B -D -E -F -1 -2 -3 -4 -5 -6 -7 -9 -10 -11 -12 )
      if ("$Valgrind" == "") then
         flog $Log $CFE $exe $opt
         set xstatus = $status
      else
         ftee $Log $Valgrind $exe $opt           |& \
         grep "ERROR SUMMARY:"                   |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      set rpf = ( $rpf gscgmt.cgm )

      if ($xstatus == 123) then
         set xstatus = 251
      endif

      $TEST_CHECK part -a smp_pool -e $xstatus -l -x $exe -rpf "$rpf" none

      @ err = $err + $status

   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

$TEST_CHECK part -a smp -e $err "$msg"

exit($status)
