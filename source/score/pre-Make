#
# pre-Makefile for SCORE
#
# Files and Directories
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

LibName=score

TGTLib = ${LibDir}/lib${LibName}.a
TGTInc = ${Hdrs} sclexan.h scope_mem.h scope_proc.h \
         scope_term.h scope_mpi.h scope_make.h \
         scope_lex.h scope_thread.h

MMLib = ${LibDir}/libpsmm.a

OD = DefaultO

#
# Compiler/Loader Options
#
CcFlags = ${ODC} -I. -I${PACTSrcDir} -I${IncDir} ${MDInc}
FcFlags = ${ODF}
LdFlags = -L${LibDir} ${LDFLAGS}

CCAnnounce = ${CCompiler} ${ODC} ${CShared} ${CFLAGS}

#
# Files to Save for Backup (make save)
#
SaveFiles = *.c *.h *.r

#
# Files to remove in directory clean (pact clean)
#
CleanFiles  = scf77lr.c
RemoveFiles = ${BinDir}/ptime ${BinDir}/ncpu \
              ${BinDir}/ps-diff ${BinDir}/mpi-io-wrap \
              ${BinDir}/dmnz ${BinDir}/rpath ${BinDir}/hserve \
              ${BinDir}/fcscan

#
# Things upon which install depends (pact install)
#
InstallDep = ${TGTLib} ${MMLib} ${hdrf}
BinDep =
BinObj =

#
# Required Libraries
#
Libs  = ${LSCORE} ${MDLib}
MLibs = ${LSCORE} ${LMM} ${MDLib}

targets :
	@echo "Targets for SCORE"
	@echo "   compre       : make comprehensive unit test programs"
	@echo "   disk         : make simple utility to measure available disk space"
	@echo "   dmake        : make the dmake utility"
	@echo "   dmt          : make and test the dmake utility"
	@echo "   error        : make test program for error handling routines in SCORE"
	@echo "   exec         : make test program for SC_exec_server"
	@echo "   fcscan       : make simple utility to scan containers such as tar files"
	@echo "   ha           : make scatst and sctrts test programs for hash and alist functionality"
	@echo "   install      : install SCORE headers and utilities in dev/arch"
	@echo "   io           : make test programs for I/O functionality"
	@echo "   latency      : make simple utility to measure file system latencies"
	@echo "   lf           : make scofft test program for large file access functionality"
	@echo "   link         : link SCORE utilities for public use"
	@echo "   memchk       : make the scmtrt and scmpft memory management testing programs"
	@echo "   mf           : make scmfts test program for memory mapped file functionality"
	@echo "   mm           : make memory manager testing and performance measurement utility"
	@echo "   mmlib        : make archive containing replacements for malloc, etc"
	@echo "   mpitty       : make mpi-io-wrap and sctty for MPI testing"
	@echo "   omp          : make scompt test program for OMP functionality"
	@echo "   print        : make scprts test program for isprint, isspace functions"
	@echo "   resource     : make scrsts test program for resource usage functionality"
	@echo "   retrace      : make scrtrt test program for debug/retrace functionality"
	@echo "   scan         : make test program for lexical scanner functionality"
	@echo "   score-config : make SCORE memory manager configuration utility"
	@echo "   sharedlib    : build and install SCORE shared libs in dev/arch"
	@echo "   smp          : make scthrt scsmp and scsmpb for SMP parallel testing"
	@echo "   test         : run the SCORE test suite"

#
# Headers Files
#
Hdrs = scstd.h scunix.h scwin32.h scbgl.h \
       sclnx.h scosx.h sccyg.h scaix.h scsol.h schpux.h scirix.h \
       score.h score_int.h score_old.h \
       scope_hash.h scope_typeh.h scope_io.h scope_array.h

#
# Object Files
#
DObjs = scmkdp.o scmkpr.o scar.o sctar.o scfcnr.o

MObjs = scmemc.o scmemda.o scmemdb.o scmeme.o scmemf.o \
        scmemg.o scmemh.o scmemt.o sctyp.o

PObjs = scerr.o sccntx.o \
        schp.o scpman.o schttp.o scinet.o \
        scmmap.o sclmmap.o scmmaps.o \
        scsysa.o scsysb.o scsysc.o scsysd.o scsyse.o \
        scfio.o scbio.o scudl.o scioctl.o scsig.o schsrv.o scterm.o \
        sctrace.o

TObjs = scpar.o scthn.o scthe.o scthp.o sctho.o scths.o

OW32Objs = sclpwin32.o scwin32.o
OUnxObjs = sclppsx.o scunix.o scaix.o scbgl.o sccyg.o

Objs = ${MObjs} ${PObjs} ${TObjs} ${OSSupport} \
       scctl.o scfia.o scfis.o scfnca.o scfncb.o scfnct.o \
       scarrd.o scarrs.o \
       schash.o sctree.o sctab.o \
       scstr.o scrsca.o scrscb.o \
       sclexs.o sctrk.o sclog.o scold.o scf77lr.o

ArDObjs = ${TGTLib}(scmkdp.o) ${TGTLib}(scmkpr.o) ${TGTLib}(scar.o) \
          ${TGTLib}(sctar.o) ${TGTLib}(scfcnr.o)

ArMObjs = ${TGTLib}(scmemc.o) ${TGTLib}(scmemda.o) ${TGTLib}(scmemdb.o) \
          ${TGTLib}(scmeme.o) ${TGTLib}(scmemf.o) ${TGTLib}(scmemg.o) \
          ${TGTLib}(scmemh.o) ${TGTLib}(scmemt.o) ${TGTLib}(sctyp.o)

ArPObjs = ${TGTLib}(scerr.o) ${TGTLib}(sccntx.o) \
          ${TGTLib}(schp.o) ${TGTLib}(scpman.o) \
          ${TGTLib}(sclppsx.o) ${TGTLib}(schttp.o) ${TGTLib}(scinet.o) \
          ${TGTLib}(scmmap.o) ${TGTLib}(sclmmap.o) ${TGTLib}(scmmaps.o) \
	  ${TGTLib}(scsysa.o) ${TGTLib}(scsysb.o) \
          ${TGTLib}(scsysc.o) ${TGTLib}(scsysd.o) ${TGTLib}(scsyse.o) \
          ${TGTLib}(scfio.o) ${TGTLib}(scbio.o) ${TGTLib}(scudl.o) \
          ${TGTLib}(scioctl.o) ${TGTLib}(scsig.o) \
          ${TGTLib}(schsrv.o) ${TGTLib}(scterm.o) ${TGTLib}(sctrace.o)

ArSObjs = ${TGTLib}(sclexs.o)

ArTObjs = ${TGTLib}(scpar.o) ${TGTLib}(scthn.o) ${TGTLib}(scthe.o) \
          ${TGTLib}(scthp.o) ${TGTLib}(sctho.o) ${TGTLib}(scths.o)

ArW32Objs = ${TGTLib}(sclpwin32.o) ${TGTLib}(scwin32.o)
ArUnxObjs = ${TGTLib}(sclppsx.o) ${TGTLib}(scunix.o) \
            ${TGTLib}(scaix.o) ${TGTLib}(scbgl.o) ${TGTLib}(sccyg.o)

ArObjs = ${ArDObjs} ${ArMObjs} ${ArPObjs} \
         ${ArSObjs} ${ArTObjs} ${OSSupport} \
         ${TGTLib}(scctl.o) ${TGTLib}(scfia.o) ${TGTLib}(scfis.o) \
	 ${TGTLib}(scfnca.o) ${TGTLib}(scfncb.o) ${TGTLib}(scfnct.o) \
         ${TGTLib}(scarrd.o) ${TGTLib}(scarrs.o) ${TGTLib}(scstr.o) \
         ${TGTLib}(schash.o) ${TGTLib}(sctree.o) ${TGTLib}(sctab.o) \
         ${TGTLib}(scrsca.o) ${TGTLib}(scrscb.o) \
         ${TGTLib}(sctrk.o) ${TGTLib}(sclog.o)   \
         ${TGTLib}(scold.o) ${TGTLib}(scf77lr.o)

scf77lr.o : scf77lr.l sclexan.h

${ArDObjs} : scope_make.h scope_proc.h
${ArMObjs} : scope_mem.h
${ArPObjs} : scope_proc.h
${ArSObjs} : scope_lex.h
${ArTObjs} : scope_thread.h
${ArObjs}  : ${Hdrs}

${DObjs} : scope_make.h scope_proc.h
${MObjs} : scope_mem.h
${PObjs} : scope_proc.h
${TObjs} : scope_thread.h
${Objs}  : ${Hdrs} ${hdrf}

${LibDep} : ${hdrf} ${Hdrs}
${MMDep}  : ${Hdrs}

#
# Generated code rules
#

# scoerce

${BinDir}/scoerce : scoerce.c ${Hdrs} 
	${CCCfe} ${Cfe_LD_Flags} ${Cfe_LD_RPath} -I../score scoerce.c -o ${BinDir}/scoerce ${Cfe_LD_Lib}

scoerce : ${BinDir}/scoerce

# headers

${IncDir}/sctypeg.h : ${BinDir}/scoerce
	@(echo "scoerce -o ${IncDir}/sctypeg.h" ; \
	  ${CFE} ${BinDir}/scoerce -o ${IncDir}/sctypeg.h)

${IncDir}/scarg.h :
	@(echo "template -va -o ${IncDir}/scarg.h" ; \
	  ${BinDir}/template -va -o ${IncDir}/scarg.h)

${IncDir}/scfnca.h : scfnca.t
	@(echo "template scfnca.t -o ${IncDir}/scfnca.h" ;  \
	  ${BinDir}/template scfnca.t -o ${IncDir}/scfnca.h)

hdrf = ${IncDir}/sctypeg.h ${IncDir}/scarg.h ${IncDir}/scfnca.h

IncAction = @pact generate


#
# MMLib 
#
${MMLib} : scmemr.c
	@echo "${CCAnnounce} -c $<"
	@(cd ${PACTTmpDir} ; \
          ${CC} -c ${PACTSrcDir}/$< -o scmemr.o ; \
          ${AR} ${AROpt} ${MMLib} scmemr.o 2> /dev/null ; \
          ${RM} scmemr.o 2> /dev/null )

mmlib :
	pact ${MMLib}

#
# CONFIG
#
score-config :
	${CLD} -DMM_CONFIG scmemi.c -o ${BinDir}/score-config -lc

#
# FCSCAN
#
fcscan : ${BinDir}/fcscan

${BinDir}/fcscan : ${TGTLib} scfcsc.c
	${CLD} ${LdFlags} scfcsc.c -o ${BinDir}/fcscan ${Libs}

#
# RPATH
#
${BinDir}/rpath : ${TGTLib} scrp.c
	${CLD} ${LdFlags} scrp.c -o ${BinDir}/rpath ${Libs}

#
# PTIME
#
${BinDir}/ptime : ${TGTLib} sctime.c
	${CLD} ${LdFlags} sctime.c -o ${BinDir}/ptime ${Libs}

#
# NCPU
#
${BinDir}/ncpu : ${TGTLib} scncpu.c
	${CLD} ${LdFlags} scncpu.c -o ${BinDir}/ncpu ${Libs}

#
# LATENCY
#
${BinDir}/latency : ${TGTLib} sclatnt.c
	${CLD} ${LdFlags} sclatnt.c -o ${BinDir}/latency ${Libs}

latency : ${BinDir}/latency

#
# PS-DIFF
#
${BinDir}/ps-diff : ${TGTLib} scpsd.c
	${CLD} ${LdFlags} scpsd.c -o ${BinDir}/ps-diff ${Libs}

#
# DMNZ
#
${BinDir}/dmnz : ${TGTLib} scdmnz.c
	${CLD} ${LdFlags} scdmnz.c -o ${BinDir}/dmnz ${Libs}

#
# PROPR
#
${BinDir}/propr : ${TGTLib} scprpr.c
	${CLD} ${LdFlags} scprpr.c -o ${BinDir}/propr ${Libs}

#
# HSERVE
#
${BinDir}/hserve : ${TGTLib} schsru.c
	${CLD} ${LdFlags} schsru.c -o ${BinDir}/hserve ${Libs}

#
# DSK-SPACE
#
disk : ${BinDir}/dspace

${BinDir}/dspace : scdsk.c ${TGTLib}
	${CLD} ${LdFlags} scdsk.c -o ${BinDir}/dspace ${Libs}
#
# ERROR
#
error : ${BinDir}/scerts

${BinDir}/scerts : ${TGTLib} scerts.c
	${CCCfe} ${LdFlags} scerts.c -o ${BinDir}/scerts ${Libs}

#
# EXEC SERVER
#

exec : ${BinDir}/scexts

${BinDir}/scexts : ${TGTLib} scexts.c
	${CCCfe} ${LdFlags} scexts.c -o ${BinDir}/scexts ${Libs}

#
# MPI
#
mpitty : ${BinDir}/sctty ${BinDir}/mpi-io-wrap

${BinDir}/mpi-io-wrap : ${TGTLib} scwrap.c
	make-wrap ${CCCfg} ${LdFlags} scwrap.c -o ${BinDir}/mpi-io-wrap ${Libs}

${BinDir}/sctty : ${TGTLib} sctty.c
	${CC} ${LdFlags} sctty.c -o ${BinDir}/sctty ${Libs} ${DPLib}

#
# shared memory parallel test
#
smp : ${BinDir}/scthrt ${BinDir}/sctlts ${BinDir}/scsmp ${BinDir}/scsmpb

${BinDir}/scthrt : scthrt.c ${TGTLib}
	${CLD} ${LdFlags} scthrt.c -o ${BinDir}/scthrt ${Libs}

${BinDir}/sctlts : sctlts.c ${TGTLib}
	${CLD} ${LdFlags} sctlts.c -o ${BinDir}/sctlts ${Libs}

${BinDir}/scsmp : scsmp.c ${TGTLib}
	${CLD} ${LdFlags} scsmp.c -o ${BinDir}/scsmp ${Libs}

${BinDir}/scsmpb : scsmpb.c ${TGTLib}
	${CLD} ${LdFlags} scsmpb.c -o ${BinDir}/scsmpb ${Libs}

#
# memory management test
#
mm : ${BinDir}/scmm

${BinDir}/scmm : scmm.c ${TGTLib}
	${CLD} ${LdFlags} scmm.c -o ${BinDir}/scmm ${Libs}
#
# memory diagnostic test
#
memchk : ${MMLib} ${BinDir}/scmtrt ${BinDir}/scmpft

${BinDir}/scmtrt : scmtrt.c ${TGTLib}
	${CLD} ${LdFlags} scmtrt.c -o ${BinDir}/scmtrt ${MLibs}

${BinDir}/scmpft : scmpft.c ${TGTLib}
	${CLD} ${LdFlags} scmpft.c -o ${BinDir}/scmpft ${Libs}
#
# lexical scanner test
#
scan : ${BinDir}/sclsts

${BinDir}/sclsts : ${TGTLib} sclsts.c
	${CLD} ${LdFlags} sclsts.c -o ${BinDir}/sclsts ${Libs}
#
# hash/alist test
#
ha : ${BinDir}/scatst ${BinDir}/sctrts

${BinDir}/scatst : ${TGTLib} scatst.c
	${CLD} ${LdFlags} scatst.c -o ${BinDir}/scatst ${Libs}

${BinDir}/sctrts : ${TGTLib} sctrts.c
	${CLD} ${LdFlags} sctrts.c -o ${BinDir}/sctrts ${Libs}

#
# resource usage test
#
resource : ${BinDir}/scrsts

${BinDir}/scrsts : ${TGTLib} scrsts.c
	${CLD} ${LdFlags} scrsts.c -o ${BinDir}/scrsts ${Libs}

#
# io file test
#
io : ${BinDir}/sciots ${BinDir}/scbfts

${BinDir}/sciots : sciots.c ${TGTLib}
	${CLD} ${LdFlags} sciots.c -o ${BinDir}/sciots ${Libs}

${BinDir}/scbfts : scbfts.c ${TGTLib}
	${CLD} ${LdFlags} scbfts.c -o ${BinDir}/scbfts ${Libs}

#
# mapped file test
#
mf : ${BinDir}/scmfts

${BinDir}/scmfts : scmfts.c ${TGTLib}
	${CLD} ${LdFlags} scmfts.c -o ${BinDir}/scmfts ${Libs}

#
# isprint test
#
print : ${BinDir}/scprts

${BinDir}/scprts : scprts.c ${TGTLib}
	${CLD} ${LdFlags} scprts.c -o ${BinDir}/scprts ${Libs}

#
# retrace test
#

retrace : ${BinDir}/scrtrt

${BinDir}/scrtrt : ${TGTLib} scrtrt.c
	${CLD} ${LdFlags} scrtrt.c -o ${BinDir}/scrtrt ${Libs}

#
# large file types
#
lf : ${BinDir}/scofft

${BinDir}/scofft : scofft.c
	${CLD} ${LdFlags} scofft.c -o ${BinDir}/scofft ${Libs}

#
# comprehensive test suite
#
compre : ${BinDir}/tscstr ${BinDir}/tscctl ${BinDir}/tscmemc \
         ${BinDir}/interact ${BinDir}/scvsts ${BinDir}/scarts

${BinDir}/tscstr : ${TGTLib} tscstr.c
	${CLD} ${LdFlags} tscstr.c -o ${BinDir}/tscstr ${Libs}

${BinDir}/tscctl : ${TGTLib} tscctl.c
	${CLD} ${LdFlags} tscctl.c -o ${BinDir}/tscctl ${Libs}

${BinDir}/tscmemc : ${TGTLib} tscmemc.c
	${CLD} ${LdFlags} tscmemc.c -o ${BinDir}/tscmemc ${Libs}

${BinDir}/interact : ${TGTLib} interact.c
	${CLD} ${LdFlags} interact.c -o ${BinDir}/interact ${Libs}

${BinDir}/scvsts : ${TGTLib} scvsts.c
	${CLD} ${LdFlags} scvsts.c -o ${BinDir}/scvsts ${Libs}

${BinDir}/dmake : ${TGTLib} scmkut.c
	${CLD} ${LdFlags} scmkut.c -o ${BinDir}/dmake ${Libs}

${BinDir}/scarts : ${TGTLib} scarts.c
	${CLD} ${LdFlags} scarts.c -o ${BinDir}/scarts ${Libs}

foo : ${TGTLib} foo.c
	${CC} -c foo.c -o foo.o
	${CLD} ${LdFlags} foo.o -o foo ${Libs}

#
# dmake - build and test dmake
#       - this is a special target that you cannot build with dmake
#       - it must be built with smake
#
dmake : ${hdrf}
	${BinDir}/smake ${BinDir}/dmake

dmt : ${hdrf}
	${BinDir}/smake ${BinDir}/dmake
	(cd tests ; do-test)

#
# link 
#
link: ${InstallDep} ${BinDir}/ps-diff ${BinDir}/ptime \
      ${BinDir}/ncpu ${BinDir}/propr ${BinDir}/dmnz \
      ${BinDir}/rpath ${BinDir}/hserve ${BinDir}/latency \
      ${BinDir}/mpi-io-wrap ${BinDir}/fcscan

#
# install
#
install:
	pact link
	pact incinstall

#
# sharedlib
#
sharedlib:
	pact shared
	pact incinstall

#
# inform
#
inform :
	@rm -f required.objs
	@echo ${Objs} > required.objs

#
# Run the SCORE test suite
#
test :
	@./sctest

