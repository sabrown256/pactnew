#!/bin/csh -f
#
# AR - test SCORE archive reading capability (for dmake)
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCORE Archive Scan Test ....... "
set exe = $BinDir/fcscan

NoteD $Log ""
NoteD $Log "                    $msg"
Note $Log ""

flog $Log pushd $SrcDir
flog $Log $MAKE fcscan
set xstatus = $status
flog $Log popd

if ($xstatus == 0) then

   if ("$CFE" != "") then
      setenv CFE   "$CFE -v"
   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test long or space-filled names

   NoteD $Log -n "                       name ....................... "
   Note $Log ""

   set rpf = none
   set opt = ( libar.a )
   set io  = flog

   flog $Log $RM f*.o libar.a

   echo "text 1" >! fx123.o
   echo "text 2" >! fabcdefghijklmnopqrstuvwxyz.o 
   echo "text 3" >! 'f0123456789 0123456789.o'
   echo "text 4" >! 'foo bar .o'

   set AR    = `pact +l -info AR`
   set AROpt = `pact +l -info AROpt`

   flog $Log $AR $AROpt libar.a f*.o
   flog $Log $AR -t libar.a

   setenv t0 `$TIMER -r`
   source ../../../scripts/test-run

   set dt  = `$TIMER -b $t0`
   set rpf = ( $rpf f*.o libar.a )
   flog $Log cat libar.a

   $TEST_CHECK part -a ar_name -e $xstatus -l -dt $dt -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test working archive

   NoteD $Log -n "                       working .................... "
   Note $Log ""

   set rpf = none
   set opt = ( -a $LibDir/libscore.a )
   set io  = flog

   setenv t0 `$TIMER -r`
   source ../../../scripts/test-run

   @ NL = `$CFE $exe $opt | sort | wc -l`
   @ NL = $NL

   flog $Log ar -t $LibDir/libscore.a
   @ NLAr = `ar -t $LibDir/libscore.a | sort | wc -l`

   Note $Log "fcscan count = $NL"
   Note $Log "ar     count = $NLAr"

   set dt = `$TIMER -b $t0`

   $TEST_CHECK part -a ar_work -e $xstatus -l -dt $dt -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK part -a ar -e $nerr "$msg"

exit($status)
