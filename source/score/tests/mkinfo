#!/bin/csh -f
#
# MKINFO - test dmake -info option
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCORE Make Info Test .........."

set ok = TRUE
if ($ok == TRUE) then
   NoteD $Log ""
   NoteD $Log -n "                    $msg"
   NoteD $Log ""

   flog $Log pushd $SrcDir/tests

   set vars = ""

# things found in scconfig.h
#  ANSI           has no token (no value)
#  SIGNED         has single token with no quotes
#  SHELL_Default  has single token in double quotes
#  FF_ID          has complex macro expression
   set vars = ( $vars ANSI SIGNED SHELL_Default FF_ID )

# things found in env-pact.csh
#  LIB            has single token with no quotes
#  Bits           has single token in double quotes
#  MAKE_SUFFIXES  has single token in single quotes
#  SMP_NUMA       has ""
#  AF_CList       has multiple tokens in double quotes
   set vars = ( $vars LIB Bits MAKE_SUFFIXES SMP_NUMA AF_CList )

   foreach m (smake dmake)
      Separator $Log
      set f = ( `fill-string -n 19 $m` )
      NoteD $Log -n "                       $f"
      Note $Log ""
      @ lerr = 0
      foreach v ($vars)
         set exe = $m
         set io  = flog
         set opt = ( -info $v )
         source ../../scripts/test-run

         if ($xstatus >= 254) then
            NoteD $Log -n "o"
            Note $Log ""
         else if ($xstatus == 123) then
            NoteD $Log -n "*"
            Note $Log ""
         else if ($xstatus != 0) then
            NoteD $Log -n "x"
            set lerr = 1
            Note $Log ""
         else
            NoteD $Log -n "."
            Note $Log ""
         endif

         $TEST_CHECK part -a mkinfo_${m}_${v} -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" ""
         set xstatus = $status
         @ lerr = $lerr + $xstatus
      end

      if ($lerr == 0) then
         NoteD $Log " ok"
      else
         NoteD $Log " ng"
         @ nerr = $nerr + 1
      endif
   end

   flog $Log popd

endif

$TEST_CHECK part -a mkinfo -e $nerr -rpf "$rpf" "$msg"

exit($status)

