#!/bin/csh -f
#
# EXT - test gexec
#

source ../../tests/common

set msg = "GEXEC Test ....................."

set GEXEC = gexec
set PERDB = perdb

set db  = TRUE
set lst = ""

Note $Log "Args: $argv"

while ($#argv > 0)
   switch ($1)
      case -h:
           echo ""
           echo "Usage: ext [-h] [-n]"
           echo "  h  this help message"
           echo "  n  do not use perdb"
           echo ""
           exit(1);
      case -n:
           set db = FALSE
           breaksw
      default:
           set lst = ( $lst $1 )
           breaksw
   endsw
   shift
end

if ("$lst" == "") then
#   set lst = ( job pipe fnc file var fan )
   set lst = ( job pipe fnc file var )
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   NoteD $Log ""
   NoteD $Log "                    $msg"

   @ nerr = 0

   set tf = `timer -r`

   if ($db == TRUE) then
      flog $Log setenv PERDB_PATH $cwd/ext
      flog $Log rm -f ${PERDB_PATH}.*
      flog $Log $PERDB -l -c -s
   endif

   flog $Log rm -f ext-*
   flog $Log cp $SrcDir/tests/ext-* .

   Note $Log "Using $GEXEC"
   Note $Log "Path = $PATH"

   flog $Log pwd
   flog $Log ls -l ext-*

   foreach t ($lst)
      Separator $Log

      rm -f ext-*.res.raw >& /dev/null

      if ($db == TRUE) then
         dbset gstatus ""
      endif

      ./ext-$t
      @ nerr = $nerr + $status
   end

   if ($db == TRUE) then
      flog $Log $PERDB -l quit:
   endif

   flog $Log sign -9 cat

   set tf = `timer -b $tf`

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

$TEST_CHECK part -a gexec -e $nerr -dt $tf -rpf "$rpf" "$msg"

exit($status)

