#!/bin/csh -f
#
# EXT-FILE - test gexec with files
#

unalias *

set t = file

@ err = 0

source $TestScrDir/env-csh

alias pe  'unsetenv gstatus ; gexec \!* ; dbget gstatus'

set f = ( `fill-string -n 8 -c ' ' $t` )
NoteD $Log -n "                        $f "
Note $Log ""

set exe = $t
set opt = ""
set rpf = ""

set lt = `timer -r`

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

foreach i (1 2 3 4 5 6)

   Note $Log ""
   Note $Log "---------------------------------------------------"
   Note $Log ""

   set id  = f$i
   set res = ext-$id.res
   set raw = $res.raw
   set dif = $res.dif
   set ref = $RefDir/ext-$id

   set fa = f1.dat

   switch ($i)

# simple stdout variants
      case 1:
           rm -rf $id
           set cmd = ( pe /bin/echo "$id" @o fw:${fa} '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set cfl = ( $fa )
           breaksw

# simple stdin variants
      case 2:
           set cmd = ( pe cat @i fr:${fa} '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set cfl = ""
           breaksw

# simple append variants
      case 3:
           set cmd = ( pe /bin/echo "$id" @o2 fa:${fa} '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set cfl = ( $fa )
           breaksw

# simple bonded variants
      case 4:
           set cmd = ( pe /bin/echo "$id" @b2 fw:f4bond '>&!' $res )
           set gst = "0 0"
           set srt = FALSE
           set cfl = ( f4bond )
           breaksw

# non-simple stdout variants
      case 5:
           set cmd = ( pe /bin/echo "$id" @o2 @e3 fw:f5out @ fw:f5err '>&!' $res )
           set gst = "0 0 0"
           set srt = FALSE
           set cfl = ( f5out f5err )
           breaksw

      case 6:
           set cmd = ( pe ls 'ext-*' foo.h @o2 @e3 fw:f6out @ fw:f6err '>&!' $raw )
           set gst = "2 0 0"
           set srt = TRUE
           set cfl = ( f6out f6err )
           breaksw
   endsw

   if ("$cfl" != NULL) then
      rm -rf $cfl
   endif

   Note $Log "cmd = $cmd"
   Note $Log "srt = $srt"

   flog $Log eval $cmd

   if ($srt == TRUE) then
      flog $Log ( sort $raw >&! $res )
      flog $Log rm -f $raw
   endif

   if ("$cfl" != NULL) then
      foreach c ($cfl)
         if (-f $c) then
            Note $Log "> $c = `cat $c`"
         endif
      end
   endif

   flog $Log cat $res

   if ($?PERDB_PATH == 0) then
      eval `grep "setenv gstatus" $res`
      grep -v "setenv gstatus" $res >&! $res.new
      flog $Log mv $res.new $res
   endif

   Note $Log "> gstatus = $gstatus"
   if ("$gstatus" != "$gst") then
      flog $Log @ err = $err + 1
      NoteD $Log -n "x"
      Note $Log "$id failed"
   else if (-f $ref) then
      flog $Log ( diff $res $ref >&! $dif )
      if ($status == 0) then
         NoteD $Log -n "."
         Note $Log "$id passed"
         flog $Log rm -f $res $dif
      else
         flog $Log @ err = $err + 1
         NoteD $Log -n "o"
         Note $Log "$id differed"
         flog $Log cat $dif
      endif
   else
      NoteD $Log -n "+"
      Note $Log "$id added"
      flog $Log cp $res $ref
      flog $Log rm -f $res
   endif

end

NoteD $Log -n " ................"

Note $Log "exiting with err = $err"
Note $Log ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

set xstatus = $err

set lt = `timer -b $lt`

set rpf = ( $rpf ext-$t )

$TEST_CHECK part -a gexec_${t} -e $xstatus -dt $lt -x $exe -l -rpf "$rpf" none

exit($status)
