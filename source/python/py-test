#!/bin/csh -f
#
# PYTEST - test PYTHON
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

setenv Package python
setenv Test    ""
set vgdirs = ( . )
source ../../scripts/test-env

@ iv = 1
set xv = none
set Tests = ""

while ($#argv > 0)
   switch ($1)
      case -c:
           shift
           set iv = $1
           breaksw
      case -h:
           echo "Usage: pytest [-c <n>] [-h] [-vg] [-x <tag>] [<test>]*"
           echo "   c  use <n> of configured python versions"
           echo "   h       this help message"
           echo "   vg      run tests under valgrind"
           echo "   x  python version tag"
           echo "   <test>  one of: basic unit"
           echo ""
           exit(1)
      case -x:
           shift
           set xv = $1
           breaksw
      case -*:
           breaksw
      default:
           set Tests = ( $Tests $1 )
           breaksw
   endsw
   shift
end

set lpy_pact_vers = $xv
set lpy_vers = ( `pact +l -info PY_Vers` )
set lpy_exes = ( `pact +l -info PY_Exe` )
set lpy_ver = $lpy_vers[$iv]
set lpy_exe = $lpy_exes[$iv]

cd $TestDir

rm -f $Log
touch $Log

flog $Log set lpydir = $LibDir/python${lpy_ver}/pact_${lpy_pact_vers}
flog $Log set lpylnk = pact_test
flog $Log rm -f $lpylnk
flog $Log ln -s $lpydir $lpylnk
flog $Log setenv PYTHON $lpy_exe
flog $Log setenv PYTHONPATH $cwd
flog $Log ls -l $PYTHONPATH/

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if ($RUN_TESTS == FALSE) then
   NoteD $Log ""
   NoteD $Log "PYTHON TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-f $lpydir/pdb.py) then

   NoteD $Log ""
   NoteD $Log "PYTHON TEST ......"

   Note $Log "BinDir     = $BinDir"
   Note $Log "path       = $path"
   Note $Log "MAKE       = $MAKE"
   Note $Log "SrcDir     = $SrcDir"
   Note $Log "PYTHONPATH = $PYTHONPATH"
   Note $Log "python     = $PYTHON"
   Note $Log "PYVER      = |$lpy_ver|"
   Note $Log "PACT_Exe   = |$PACT_Exe|"
   Note $Log "Parallel   = |$Parallel|"
   Note $Log "MPI        = |$MPI|"
   flog $Log ( where pact |& head -n 1 )
   flog $Log ( where cc |& head -n 1 )

   if ("$Tests" == "") then
      set Tests = ""
      if ($xv =~ *numeric) then
         set Tests = ( $Tests basic unit )
      else
         set Tests = ( $Tests unumpy basic unit )
      endif
   endif

   foreach i ($Tests)
      $SrcDir/tests/$i
      @ nerr = $nerr + $status
   end

   $TEST_CHECK clean -n PYTHON -e $nerr -raf "../testfile"

   set xstatus = $status

endif

flog $Log rm -f $lpylnk

$TEST_CHECK fin -e $xstatus

exit($status)

