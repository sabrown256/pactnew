#
# pre-Makefile for Portable Process Control Library
#
# Files and Directories
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

LibName=ppc

TGTExe = ${BinDir}/pcexec
TGTLib = ${LibDir}/lib${LibName}.a
TGTInc = ${Hdrs}

OD = DefaultG

#
# Compiler/Loader Options
#
CcFlags = -I${IncDir} ${MDInc}
LdFlags = -L${LibDir} ${LDFLAGS}

#
# Files to Save for Backup (pact save)
#
SaveFiles = *.c *.h

#
# Files to remove in directory clean (pact clean)
#
CleanFiles = 

#
# Things upon which install depends (pact install)
#
InstallDep = ${TGTLib} ${TGTExe}
BinDep = ${Hdrs} ${TGTLib} pcexec.c
BinObj = ${LdFlags} pcexec.c

#
# Required Libraries
#
Libs  = ${LPPC} ${LPDB} ${LPML} ${LSCORE} ${DPLib} ${MDLib}
SLibs = ${LPPC} ${LPDB} ${LPML} ${LSCORE} ${MDLib}


targets :
	@echo "Targets for PPC"
	@echo "   Cstd      : make standard tests and pcexec"
	@echo "   install   : install PPC headers and utilities in dev/arch"
	@echo "   link      : link PPC utilities for public use"
	@echo "   parallel  : make parallel process tests"
	@echo "   proc      : make process report"
	@echo "   sharedlib : build and install PPC shared libs in dev/arch"
	@echo "   test      : run the PPC test suite"
	@echo "   web       : make http reader"

#
# Headers Files
#
Hdrs = ppc.h ppc_int.h

#
# Object Files
#
ObjsA = ppc.o pcbin.o pcpio.o
Objs = ${MPassDevices} ${IPCDevices} ${ObjsA}

${Objs} : ${Hdrs}

OMPSC  = pcmpsc.o
OLMPS  = pclmps.o
OPARC  = pcparc.o pcparmp.o

ONOIPC = pcnil.o

ArObjs = ${MPassDevices} ${IPCDevices}       \
         ${TGTLib}(ppc.o) ${TGTLib}(pcbin.o) \
         ${TGTLib}(pcpio.o)

ArMPSC = ${TGTLib}(pcmpsc.o)
ArLMPS = ${TGTLib}(pclmps.o)
ArPARC = ${TGTLib}(pcparc.o) ${TGTLib}(pcparmp.o)

ArNOIPC = ${TGTLib}(pcnil.o)

${LibDep} : ${hdrf} ${Hdrs}

#
# Generated code rules
#

# headers

hdrf = 

IncAction = @pact generate


Cstd : ${BinDir}/pcexec ${BinDir}/tpcm \
       ${BinDir}/tpcb ${BinDir}/tpcc

parallel : ${BinDir}/tpcp ${BinDir}/pcexec

web : ${BinDir}/pcweb

#
# binary data tests
#
${BinDir}/tpcb : ${TGTLib} tpcb.c
	${CLD} ${LdFlags} tpcb.c -o ${BinDir}/tpcb ${Libs}

${BinDir}/tpcc : ${TGTLib} tpcc.c
	${CLD} ${LdFlags} tpcc.c -o ${BinDir}/tpcc ${Libs}

#
# multiple process tests
#
${BinDir}/tpcm : ${TGTLib} tpcm.c
	${CLD} ${LdFlags} tpcm.c -o ${BinDir}/tpcm ${Libs}
#
# parallel process tests
#
${BinDir}/tpcp : ${TGTLib} tpcp.c
	${CLD} ${LdFlags} tpcp.c -o ${BinDir}/tpcp ${Libs}
#
# http reader
#
${BinDir}/pcweb : ${TGTLib} pcweb.c
	${CLD} ${LdFlags} pcweb.c -o ${BinDir}/pcweb ${Libs}

#
# process report
#

proc : ${BinDir}/tpcch

${BinDir}/tpcch : ${TGTLib} tpcch.c
	${CCCfe} ${LdFlags} tpcch.c -o ${BinDir}/tpcch ${Libs}

#
# make the executable
#
${TGTExe} : ${BinDep}
	@(echo "${CCAnnounce} pcexec.c -o ${TGTExe}" ; \
	  ${CLD} ${LdFlags} pcexec.c -o ${TGTExe} ${SLibs})

#
# async - run the shell script pc-async in the resulting xterm 
#       - run it twice and watch for pollable event type complaints
#
async : ${TGTExe}
	csh -c 'xterm -geometry 60x20-0+0 -e csh'

#
# link 
#
link: ${InstallDep}

#
# install 
#
install:
	pact link
	pact incinstall

#
# sharedlib
#
sharedlib:
	pact shared
	pact incinstall

#
# inform
#
inform :
	@rm -f required.objs
	@echo ${ObjsA} > required.objs

#
# Run the PPC test suite
#
test :
	@./pctest

