#!/bin/csh -f
#
# PDB - Fortran test
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "PDB API Test ....................... "

set tst = $1

@ xstatus = 0

# check for Fortran compiler before doing Fortran test
set FC = `awk '$1 == "FCompiler" { print $3 }' $EtcDir/make-def`
if ("$FC" != "") then
   Note $Log "Using fortran compiler $FC"
   flog $Log ( where $FC | head -n 1 )
   flog $Log @ xstatus = $xstatus + $status
else
   flog $Log @ xstatus = $xstatus + 1
endif

# check for compiled modules
set inf = ( `ls -1 $IncDir/*.mod` )
if ($#inf >= 17) then
   Note $Log "Expected number of modules present: $#inf"
   Note $Log " $inf"
   flog $Log @ xstatus = $xstatus + 0
else
   flog $Log @ xstatus = $xstatus + 1
endif

#if (($xstatus == 0) && ("$MPI" == "")) then
if ($xstatus == 0) then
   NoteD $Log ""
   NoteD $Log "                    $msg"

   flog $Log pushd $SrcDir
   flog $Log $MAKE +na 2 pdb
   @ xstatus = $status
   flog $Log popd

   if ($xstatus != 0) then
      NoteD $Log ""
      NoteD $Log "                         Cannot build PDB FORTRAN Test Program"
      flog $Log rm -f $BinDir/tpdf
      flog $Log rm -f $BinDir/tpdfg
      flog $Log rm -f $BinDir/tpdfhy
   else

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test hand written wrappers
      NoteD $Log -n "                        manual ......................... "
      Note $Log ""

      set exe = $BinDir/tpdf
      set rpf = none
      set opt = ( -p )
      set io  = flog

      source ../../../scripts/test-run

      $TEST_CHECK part -a pdb_manual -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test automatically generated wrappers
      NoteD $Log -n "                        auto ........................... "
      Note $Log ""

      set exe = $BinDir/tpdfg
      set rpf = none
      set opt = ( -p )
      set io  = flog

      source ../../../scripts/test-run

      $TEST_CHECK part -a pdb_auto -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# hyperstride test
      NoteD $Log -n "                        hyperstride .................... "
      Note $Log ""

      set exe = $BinDir/tpdfhy
      set rpf = none
      set opt = ""
      set io  = flog

      source ../../../scripts/test-run

      $TEST_CHECK part -a pdb_hyper -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# distribute parallel test
      if ($MPI == TRUE) then
         flog $Log pushd $SrcDir
         flog $Log $MAKE +na 2 fdp
         @ xstatus = $status
         flog $Log popd

         set CFE = $BinDir/do-run

         NoteD $Log -n "                        dp ............................. "
         Note $Log ""

         set exe = $BinDir/tpdfd
         set rpf = none
         set opt = ( -p 4 $exe )
         set io  = flog

         source ../../../scripts/test-run

         $TEST_CHECK part -a pdb_dp -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none

         @ nerr = $nerr + $status
      endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK part -a pdb -e $nerr "$msg"

exit($status)
