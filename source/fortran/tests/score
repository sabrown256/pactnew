#!/bin/csh -f
#
# SCORE - SCORE Fortran API tests
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCORE API Test ....................."

@ err = 0

NoteD $Log ""
NoteD $Log "                    $msg"
Note $Log ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   NoteD $Log -n "                        lexical scan ................... "
   Note $Log ""

   flog $Log pushd $SrcDir
   flog $Log $MAKE scan
   set xstatus = $status
   flog $Log popd

   set exe = $BinDir/tscls
   set rpf = none
   set opt = ( $FilesDir/tscls.src )
   set io  = tscls.res

   source ../../../scripts/test-run

   if (("$Valgrind" == "") && ($xstatus == 0)) then
      diff tscls.res $RefDir/tscls > tscls.res.diff
      set rpf = ( $rpf tscls.res.diff )
   endif
   set rpf = ( $rpf tscls.res )

   $TEST_CHECK part -a score_lex -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   NoteD $Log -n "                        hash ........................... "
   Note $Log ""

   flog $Log pushd $SrcDir
   flog $Log $MAKE -na 2 fha
   set xstatus = $status
   flog $Log popd

   set exe = $BinDir/tscfh
   set rpf = none
   set opt = ""
   set io  = flog

   source ../../../scripts/test-run

   $TEST_CHECK part -a score_hash -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   if ($HAVE_OPENMP == TRUE) then
      flog $Log pushd $SrcDir
      flog $Log $MAKE -na 2 omp
      set xstatus = $status
      flog $Log popd

      NoteD $Log -n "                        omp ............................ "
      Note $Log ""

      set exe = $BinDir/tscfomp
      set rpf = none

      set t0 = `$TIMER -r`

      if ("$Valgrind" == "") then
         flog $Log ( echo 2 | $CFE $exe )
         set xstatus = $status
      else
         ftee $Log echo 2 @o $Valgrind $exe              |& \
         grep "ERROR SUMMARY:"                           |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      set dt = `$TIMER -b $t0`
      unset t0

      $TEST_CHECK part -a score_omp -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

   endif

$TEST_CHECK part -a score -e $nerr "$msg"

exit($status)

