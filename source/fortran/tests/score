#!/bin/csh -f
#
# SCORE - SCORE Fortran API tests
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

source ../../tests/common

set msg = "SCORE API Test ....................."

@ err = 0

NoteD $LogF ""
NoteD $LogF "                    $msg"
Note $LogF ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   NoteD $LogF -n "                        lexical scan ................... "
   Note $LogF ""

   set exe = $BinDir/sclsts
   set rpf = none

   flog $LogF pushd $SrcDir
   flog $LogF $MAKE scan
   set xstatus = $status
   flog $LogF popd

   set opt = ( $TDir/sclsts.src )
   if ("$Valgrind" == "") then
      $CFE $exe $opt >&! sclsts.res
      set xstatus = $status
      diff sclsts.res $RefDir/sclsts > sclsts.res.diff
   else
      ftee $LogF $Valgrind $exe $opt                    |& \
      grep "ERROR SUMMARY:"                             |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf     = ( $rpf $Tmp )
   endif

   set rpf = ( $rpf sclsts.res sclsts.res.diff )

   $TEST_CHECK part -a score_lex -e $xstatus -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   NoteD $LogF -n "                        hash ........................... "
   Note $LogF ""

   set exe = $BinDir/schtst
   set rpf = none

   flog $LogF pushd $SrcDir
   flog $LogF $MAKE -na 2 fha
   set xstatus = $status
   flog $LogF popd

   if ("$Valgrind" == "") then
      flog $LogF $CFE $exe
      set xstatus = $status
   else
      ftee $LogF $Valgrind $exe                               |& \
      grep "ERROR SUMMARY:"                                   |& \
      awk '{ print $4 }'   >&! $Tmp
      set xstatus = `cat $Tmp`
      set rpf = ( $rpf $Tmp )
   endif

   $TEST_CHECK part -a score_hash -e $xstatus -x $exe -l -rpf "$rpf" none

   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   if ($HAVE_OPENMP == TRUE) then
      flog $LogF pushd $SrcDir
      flog $LogF $MAKE -na 2 omp
      set xstatus = $status
      flog $LogF popd

      NoteD $LogF -n "                        omp ............................ "
      Note $LogF ""

      set exe = $BinDir/scompt
      set rpf = none

      if ("$Valgrind" == "") then
         flog $LogF ( echo 2 | $CFE $exe )
         set xstatus = $status
      else
         ftee $LogF ( echo 2 | $Valgrind $exe                    |& \
         grep "ERROR SUMMARY:"                                   |& \
         awk '{ print $4 }'   >&! $Tmp
         set xstatus = `cat $Tmp`
         set rpf     = ( $rpf $Tmp )
      endif

      $TEST_CHECK part -a score_omp -e $xstatus -x $exe -l -rpf "$rpf" none

      @ nerr = $nerr + $status

   endif

$TEST_CHECK part -a score -e $nerr "$msg"

exit($status)

