#
# pre-Makefile for PFTN
#
# Files and Directories
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

LibName=fpact

TGTLib = ${LibDir}/lib${LibName}.a
TGTInc = noinc

OD = DefaultO

#
# Compiler/Loader Options
#
CcFlags = -I. -I${PACTSrcDir} -I${IncDir} ${MDInc} ${MDGInc}
FcFlags = ${FC_MOD_FLAG}${IncDir} ${MDInc}
LdFlags = -g -L${LibDir} ${LDFLAGS}

#
# Files to Save for Backup (make save)
#
SaveFiles = *.f

#
# Files to remove in directory clean (pact clean)
#
CleanFiles = ${gmo} *~ core

#
# Files to remove in directory clean (pact clean)
#
RemoveFiles = ${gmo} *~ core

#
# Things upon which install depends (pact install)
#
InstallDep = ${TGTLib}
BinDep =
BinObj =

#
# Required Libraries
#

targets :
	@echo "Targets for PFTN"
	@echo "   contour      : make PGS Fortran contour test"
	@echo "   fdp          : make PDB Fortran DP IO test"
	@echo "   fha          : make Fortran API of hash test"
	@echo "   install      : install PFTN headers and utilities in dev/arch"
	@echo "   link         : link PFTN utilities for public use"
	@echo "   panacea      : make PANACEA Fortran API tests"
	@echo "   pdb          : make PDB Fortran API tests"
	@echo "   ppc          : make PPC Fortran tests"
	@echo "   scan         : make lexical scanner test"
	@echo "   test         : run the PFTN test suite"

#
# Headers Files
#
Hdrs = fpact.h

gfs = gf-score.c gf-pml.c gf-pdb.c   \
      gf-ppc.c gf-pgs.c gf-panacea.c \
      gf-scheme.c gf-fortran.c

gms = gm-score.f gm-pml.f gm-pdb.f   \
      gm-ppc.f gm-pgs.f gm-panacea.f \
      gm-scheme.f gm-fortran.f

#
# Object Files
#

gfo = gf-score.o gf-pml.o gf-pdb.o   \
      gf-ppc.o gf-pgs.o gf-panacea.o \
      gf-scheme.o gf-fortran.o

gmo = gm-score.o gm-pml.o gm-pdb.o   \
      gm-ppc.o gm-pgs.o gm-panacea.o \
      gm-scheme.o gm-fortran.o

Objs = ${gmo} ${gfo} flibc.o \
       fasca.o fascb.o fascs.o fascm.o \
       famla.o fapda.o fapana.o \
       fagsa.o fagsb.o fagsc.o \
       fasxa.o

gfa = ${TGTLib}(gf-score.o) ${TGTLib}(gf-pml.o) ${TGTLib}(gf-pdb.o)   \
      ${TGTLib}(gf-ppc.o) ${TGTLib}(gf-pgs.o) ${TGTLib}(gf-panacea.o) \
      ${TGTLib}(gf-scheme.o) ${TGTLib}(gf-fortran.o)

gma = ${TGTLib}(gm-score.o) ${TGTLib}(gm-pml.o) ${TGTLib}(gm-pdb.o)   \
      ${TGTLib}(gm-ppc.o) ${TGTLib}(gm-pgs.o) ${TGTLib}(gm-panacea.o) \
      ${TGTLib}(gm-scheme.o) ${TGTLib}(gm-fortran.o)

ArObjs = ${gma} ${gfa} ${TGTLib}(flibc.o) \
         ${TGTLib}(fasca.o) ${TGTLib}(fascb.o) ${TGTLib}(fascs.o) \
         ${TGTLib}(fascm.o) \
         ${TGTLib}(famla.o) ${TGTLib}(fapda.o) ${TGTLib}(fapana.o) \
         ${TGTLib}(fagsa.o) ${TGTLib}(fagsb.o) ${TGTLib}(fagsc.o) \
         ${TGTLib}(fasxa.o) ${TGTLib}(fapdprm.o)

${ArObjs} : ${Hdrs}
${Objs} : ${Hdrs}
${LibDep} : ${Hdrs}

SDir = ${PACTSrcDir}

modules : ${LibDep}
	@touch dummy.mod
	sinstall *.mod ${IncDir}
	@rm -f dummy.mod ${IncDir}/dummy.mod
	@rm -rf z-${System}

${PACTTmpDir}/gm-${LibName}.f : ${SDir}/flibc.f
	@../scripts/bproto

genmod : ${PACTTmpDir}/gm-${LibName}.f

IncAction = @pact genmod
LibAction = @(cd ${PACTTmpDir} ; pact SDir=\"${SDir}\" PACTSrcDir=\".\" PACTTmpDir=\".\" LibAction=\"\" -f ../../pre-Make Hdrs=../../fpact.h modules)

SLibs = ${DPLib} ${FLib} ${MDLib}
#Libs = -lfpact ${LPDB} ${LPML} ${LSCORE} ${SLibs}
Libs = -lfpact ${LPANACEA} ${LPGS} ${MDGLib} ${LPPC} ${LPDB} ${LPML} ${LSCORE} ${SLibs}
NGLibs = -lfpact ${LPANACEA} ${LPGS} ${MDGLib} ${LPPC} ${LPDB} ${LPML} ${LSCORE} ${SLibs}

#
# SCORE tests
#

fha : ${BinDir}/tscfh

${BinDir}/tscfh : tscfh.f ${InstallDep}
	${FC} ${LdFlags} tscfh.f -o ${BinDir}/tscfh ${Libs}

omp : ${BinDir}/tscfomp

${BinDir}/tscfomp : tscfomp.f ${InstallDep}
	${FC} ${LdFlags} tscfomp.f -o ${BinDir}/tscfomp ${Libs}

scan : ${BinDir}/tscls

${BinDir}/tscls : tscls.c ${InstallDep}
	@(echo "${CCAnnounce} tscls.c -o ${BinDir}/tscls" ; \
	  ${CLD} ${LdFlags} tscls.c -o ${BinDir}/tscls ${Libs})

# PDB tests

pdb : ${BinDir}/tpdf ${BinDir}/tpdfw ${BinDir}/tpdfg ${BinDir}/tpdfhy

${BinDir}/tpdf : tpdf.f ${InstallDep}
	${FC} ${LdFlags} tpdf.f -o ${BinDir}/tpdf ${Libs}

${BinDir}/tpdfw : tpdfw.f ${InstallDep}
	${FC} ${LdFlags} tpdfw.f -o ${BinDir}/tpdfw ${Libs}

${BinDir}/tpdfg : tpdfg.f ${InstallDep}
	${FC} ${LdFlags} tpdfg.f -o ${BinDir}/tpdfg ${Libs}

${BinDir}/tpdfhy : tpdfhy.f ${InstallDep}
	${FC} ${LdFlags} tpdfhy.f -o ${BinDir}/tpdfhy ${Libs}

fdp : ${BinDir}/tpdfd

${BinDir}/tpdfd : tpdfd.f ${InstallDep}
	${FC} ${LdFlags} tpdfd.f -o ${BinDir}/tpdfd ${Libs}

# PPC tests

ppc : ${BinDir}/tpcf

${BinDir}/tpcf : tpcf.f ${InstallDep}
	${FC} ${LdFlags} tpcf.f -o ${BinDir}/tpcf ${Libs}

# PGS tests

pgs : ${BinDir}/tgsf ${BinDir}/tgsfg ${BinDir}/tgsfc

${BinDir}/tgsf : tgsf.f ${InstallDep}
	${FC} ${LdFlags} tgsf.f -o ${BinDir}/tgsf ${NGLibs}

${BinDir}/tgsfg : tgsfg.f ${InstallDep}
	${FC} ${LdFlags} tgsfg.f -o ${BinDir}/tgsfg ${NGLibs}

contour : ${BinDir}/tgsfc

${BinDir}/tgsfc : tgsfc.f ${InstallDep}
	${FC} ${LdFlags} tgsfc.f -o ${BinDir}/tgsfc ${NGLibs}

#
# PANACEA tests
#
panacea : ${BinDir}/tpath ${BinDir}/tpafth

${BinDir}/tpath : tpath.c ${InstallDep}
	@(echo "${CCAnnounce} tpath.c -o ${BinDir}/tpath" ; \
	  ${CLD} ${LdFlags} tpath.c -o ${BinDir}/tpath ${NGLibs})

${BinDir}/tpafth : tpafth.f ${InstallDep}
	${FC} ${LdFlags} tpafth.f -o ${BinDir}/tpafth ${NGLibs}

#
# link 
#
link: ${InstallDep}

#
# install
#
install:
	pact link

#
# sharedlib
#
sharedlib:
	pact shared

#
# Run the PFTN test suite
#
test :
	@./fatest

