#!/bin/csh -f
#
# PATEST - test PANACEA
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

setenv Package panacea
setenv Test    ""
source ../scripts/test-env

set Tests = ""

while ($#argv > 0)
   switch ($1)
      case -h:
           echo "Usage: patest [-h] [<test>]*"
           echo "  h       this help message"
           echo "  <test>  one of: gen abc"
           echo ""
           exit(1)
      case -*:
           breaksw
      default:
           set Tests = ( $Tests $1 )
           breaksw
   endsw
   shift
end

cd $TestDir

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# omit tests - usually in difficult CROSS_COMPILE situation

if ($RUN_TESTS == FALSE) then
   NoteD $Log ""
   NoteD $Log "PANACEA TESTS ... omitted"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# run the tests

else if (-e $RootDir/panacea/panace.h) then

   NoteD $Log ""
   NoteD $Log "PANACEA TEST ..."

   Note $Log "BinDir = $BinDir"
   Note $Log "path   = $path"  
   Note $Log "MAKE   = $MAKE"  

   setenv Tmp $cwd/.tmp.$$
   if ("$Valgrind" != "") then
      setenv Valgrind  "$Valgrind --suppressions=$RootDir/score/tests/vg.suppress"
   endif

   Note $Log "Parallel = |$Parallel|"
   Note $Log "MPI      = |$MPI|"
   flog $Log ../../../manager/pwhich pact
   flog $Log ../../../manager/pwhich cc

   if ("$Tests" == "") then
      set Tests = (gen abc)
   endif

   foreach i ($Tests)
      $SrcDir/tests/$i
      if ($status == 1) then
         set ERROR = TRUE
      endif
   end

   $TEST_CHECK clean -n PANACEA -e $ERROR -raf "$Tmp"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

$TEST_CHECK fin -e $ERROR

exit($status)

