#!/bin/csh -f
#
# DO-TEST - test PANACHE
#

set Package = panacea
source ../../scripts/env-csh

set exe = $BinDir/panache
set io  = flog
set rpf = ""

@ nerr = 0

set DevInc    = $SysDir/include
set MISrc     = $DevInc/make-def
set CCompiler = `pact +l -info Cfg_CC_Exe | uniq`
set CFLAGS    = `pact +l -info Cfg_CC_Flags | uniq`
set MDGInc    = `pact +l -info MDGInc | uniq`
set Inc       = "-I. -I$DevInc $MDGInc"
set CCompiler = $CCompiler[$#CCompiler]

InitLog Log $TestDir/log.panache

Note $Log "CCompiler = |$CCompiler|"
Note $Log "CFLAGS    = |$CFLAGS|"
flog $Log cp *.dict do-test $TestDir
flog $Log pushd $TestDir

flog $Log rm -f *.[cho]

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test building from single package dictionary

cat >! pkgmac.h << EOF
/*
 * PKGMAC.H - test
 *
 */
EOF

   NoteD $Log -n "                       Single package ............."
   Note $Log " "

   set opt = ( pkg.dict )
   source ../../../scripts/test-run

#   set xstatus = $status
   if ($xstatus == 0) then
      flog $Log $PX $CCompiler $CFLAGS $Inc -c pkg.c -o pkg.o
      set xstatus = $status
   endif

   $TEST_CHECK part -a panache_single -e $xstatus -dt $dt -x $exe -l -rpf "$rpf" none
   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test building from whole code dictionary

   set lerr = 0

   NoteD $Log -n "                       Whole code ................."
   Note $Log " "

   set opt = ( code.dict )
   source ../../../scripts/test-run

   @ lerr = $xstatus
   if ($lerr == 0) then
      foreach i (pkg1 pkg2 pkg3 cgen crun)
         flog $Log $PX $CCompiler $CFLAGS $Inc -c $i.c -o $i.o
         set xstatus = $status
         if ((0 < $xstatus) && ($xstatus < 254)) then
            @ lerr = $lerr + 1
         endif
      end
   endif

   $TEST_CHECK part -a panache_whole -e $lerr -dt $dt -x $exe -l -rpf "$rpf" none
   @ nerr = $nerr + $status

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

$TEST_CHECK part -a panache -e $nerr

exit($status)

