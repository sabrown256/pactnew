#!/bin/csh -f
#
# DO-TEST - test PANACHE
#

set Package = panacea
source ../../scripts/env-csh

if ($?autotool) then
   set MISrc     = $SrcDir/Makefile
   set CCompiler = `awk '$1 == "CCConfig" { print $3 }' $MISrc`
   set CFLAGS    = `awk '$1 == "CFLAGS" {for (i = 3; i <= NF; i++) {printf(" %s", $i);};}' $MISrc`
   set Inc       = "-I. -I../../sx -I../../scheme -I../../panacea -I.. -I../../config -I../../pgs -I../../ppc -I../../pdb -I../../pml -I../../score"
else
   set DevInc    = $BuildDir/include
   set MISrc     = $DevInc/make-def
   set CCompiler = `pact +l -info Cfg_CC_Exe | uniq`
   set CFLAGS    = `pact +l -info Cfg_CC_Flags | uniq`
   set MDGInc    = `pact +l -info MDGInc | uniq`
   set Inc       = "-I. -I$DevInc $MDGInc"
   set CCompiler = $CCompiler[$#CCompiler]
endif

setenv Log $TestDir/log.test
set Err = 0

Note $Log "CCompiler = |$CCompiler|"
Note $Log "CFLAGS    = |$CFLAGS|"
flog $Log cp *.dict do-test $TestDir
flog $Log pushd $TestDir

flog $Log rm -f *.[cho]

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test building from single package dictionary

cat >! pkgmac.h << EOF
/*
 * PKGMAC.H - test
 *
 */
EOF

NoteD $Log -n "                       Single package ............. "
Note $Log " "

flog $Log panache pkg.dict
flog $Log $PX $CCompiler $CFLAGS $Inc -c pkg.c -o pkg.o
set xstatus = $status
if (($xstatus == 254) || ($xstatus == 255)) then
   NoteD $Log "omitted"
else if ($xstatus != 0) then
   NoteD $Log "failed"
   set Err = 1
else
   NoteD $Log "ok"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# test building from whole code dictionary

set LErr = 0

NoteD $Log -n "                       Whole code ................. "
Note $Log " "

flog $Log panache code.dict
foreach i (pkg1 pkg2 pkg3 cgen crun)
   flog $Log $PX $CCompiler $CFLAGS $Inc -c $i.c -o $i.o
   set xstatus = $status
   if (($xstatus == 254) || ($xstatus == 255)) then
      set LErr = $xstatus
   else if ($xstatus != 0) then
      set LErr = 1
   endif
end

if (($LErr == 254) || ($LErr == 255)) then
   NoteD $Log "omitted"
else if ($LErr != 0) then
   NoteD $Log "failed"
   set Err = 1
else
   NoteD $Log "ok"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

exit($Err)
