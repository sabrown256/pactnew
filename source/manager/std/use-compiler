#!/bin/csh -f
#
# USE-COMPILER - decide on the correct compiler environment
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

set lbits = ""
set lvers = ""
set cpath = ""

while ($#argv > 0)
   switch ($1)
      case bits:
           shift
           set lbits = $1
           breaksw
      case vers:
           shift
           set lvers = $1
           breaksw
      default:
           if ("$cpath" == "") then
              set cpath = $1
           endif
           breaksw
   endsw
   shift
end

if ("$cpath" == "") then
   echo "No compiler specified - exiting"
   exit(1)
endif
set cname = $cpath:t
if ($cpath == $cname) then
   set cpath = ""
endif

set Sed = `which sed`
set Awk = `which awk`

# figure out the site context
if (-f extensions/sys-site) then
   eval `extensions/sys-site`
else
   setenv DAI_ROOT /usr/share
   setenv DAS_ROOT /usr/local
endif

# find and source env-csh
if (-f ../scripts/env-csh) then
   set scrd = $cwd
else if (-f ../../scripts/env-csh) then
   set scrd = $cwd:h
endif
set ldir = $scrd:h/scripts
set path = ( $ldir $path )
source $ldir/env-csh
unset ldir
unset scrd

# default compiler and query info
set cc = ( `which $cname` )
switch ($cname)

# PGI
   case pgcc*:
        setenv PACT_CC_FAMILY   PGI
        set opt   = ( -V )
        set pat   = ( target on )
        set prog  = ( '$0 ~ /'$pat'/ { print $2 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = pgf90
        breaksw

# INTEL
   case icc*:
        setenv PACT_CC_FAMILY   INTEL
        set opt   = ( -v )
        set pat   = ( Version )
        set prog  = ( '$0 ~ /'$pat'/ { print $2 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = ifort
        breaksw

# PATHSCALE
   case pathcc*:
        setenv PACT_CC_FAMILY   PATHSCALE
        set opt   = ( -v )
        set pat   = ( Compiler Suite: Version )
        set prog  = ( '$0 ~ /'$pat'/ { print $NF } $0 ~ /Compile line:/ { print $3 }' )
        set fname = pathf90
        breaksw

# SUN
   case suncc*:
        setenv PACT_CC_FAMILY   SUN
        set opt   = ( -V )
        set pat   = ( cc: Sun C )
        set prog  = ( '$0 ~ /'$pat'/ { print $4 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = sunf90
        breaksw

# GNU is default
   default:
        setenv PACT_CC_FAMILY   GNU
        set opt   = ( -v )
        set pat   = ( gcc version )
        set prog  = ( '$0 ~ /'$pat'/ { print $3 } $0 ~ /Compile line:/ { print $3 }' )
        set fname = gfortran
        breaksw
endsw

# in case compilers were put in different directories (ala Intel)
# check both Fortran and C compilers to get both on the PATH
# do C last to get its environment as the final result

set dirl = ""
foreach c ($fname $cname)

# if blank try to find compiler on your path
   if ("$cpath" == "") then
      if (-x $DAI_ROOT/pact/scripts/$c) then
         set cc = $DAI_ROOT/pact/scripts/$c
         if ($c == $cname) then
            set opt = ( $opt -cwvrb )
            if ("$lvers" != "") then
               set opt = ( $opt -cwvers $lvers )
            endif
         endif
      endif

# if not a full path find it on your path
   else if ("$cpath" !~ /*) then
      set inf = ( `which $cpath` )
      if (-x "$inf") then
         set cc = $inf
      endif

   else if (-xf "$cpath") then
      set cc = $cpath

# try adding bin/$c
   else if (-x "$cpath/bin/$c") then
      set cc = $cpath/bin/$c

   endif

   set sdir = $cc:h
   set dirl = ( $dirl $sdir )

# only take lvers and root from C compiler
   if ($c == $cname) then
      set bindir = $sdir

# query the compiler for information
      set inf = ( `$cc $opt |& $Awk "$prog"` )
      if ($#inf > 1) then
         set lvers  = ( `echo $inf[2] | $Sed 's/[-_]/./g'` )
         set cc     = $inf[1]
         set bindir = $cc:h
      else if ($#inf > 0) then
         set lvers = ( `echo $inf[1] | $Sed 's/[-_]/./g'` )
      endif
      set root = $bindir:h
   endif
end

# check the bits for the compiler library
if ("$lbits" == 32) then
   set root = `echo $root | $Sed 's/-64//'`
endif

if ($#dirl == 1) then
   setenv PATH  $dirl[1]':$PATH'
else if ($dirl[1] == $dirl[2]) then
   setenv PATH  $dirl[1]':$PATH'
else
   setenv PATH  $dirl[1]:$dirl[2]':$PATH'
endif
setenv PACT_CC_VERSION  $lvers
setenv PACT_CC_PATH     $root
setenv PACT_CC_EXE      $cc

if ($PACT_CC_FAMILY == PATHSCALE) then
   setenv PACT_CC_PATH  $PACT_CC_PATH/lib/$lvers
endif

SetParent PATH
SetParent PACT_CC_FAMILY
SetParent PACT_CC_VERSION
SetParent PACT_CC_PATH
SetParent PACT_CC_EXE

source analyze/numa

exit(0)

