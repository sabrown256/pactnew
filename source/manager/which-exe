#!/bin/csh -f
#
# WHICH-EXE - find a version of EXE that will work in CROSS-COMPILE situation
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

unalias *

@ err    = 1
set exe  = ""
set dirs = ""

while ($#argv > 0)
   switch ($1)
      case -d:
           shift
           if (-d $1) then
              pushd $1 >& /dev/null
              set dirs = ( $dirs $cwd )
              popd >& /dev/null
           else
              echo "No such directory '$1' - ignored"
           endif
           breaksw
      case -h:
           echo "Usage: which-exe [-d <dir>]* [-h] <exe>"
           echo "   d     do not accept a candidate from <dir>"
           echo "   h     this help message"
           echo "   <exe> executable program wanted"
           exit(1)
      default:
           set exe = $1
           breaksw
   endsw
   shift
end

if ("$exe" == "") then
   echo "No executable specified - exiting"
   exit(1)
endif

set prg   = ""
set extra = ""
set sys   = `system-id`

pushd ../dev >>& /dev/null
set lst = ""
foreach d ( * )
   if (-d $d) then
      set lst = ( $lst $cwd/$d/bin )
   endif
end
popd >>& /dev/null

if ($?DAS_ROOT == 1) then
   set lst = ( $lst $DAS_ROOT/pactnew/bin $DAS_ROOT/pact/bin )
endif

# GOTCHA: this is very weak logic in a do-net situation
set path = ( /usr/bin /bin . )
rehash

foreach d ( $lst )
   pushd $d >>& /dev/null

   set ok = TRUE
   foreach r ($dirs)
      if ($r == $cwd) then
         set ok = FALSE
         break
      endif
   end

   if ($ok == TRUE) then
      set nl = ( `./$exe -h |& grep -iw usage | wc -l` )
      if ("$nl" == 1) then
         strings ./$exe |& grep $sys >>& /dev/null
         if ($status == 0) then
            set prg = $cwd/$exe
            @ err = 0
            break
         endif
      endif
   endif

   popd >>& /dev/null
end

echo "$prg"

exit($err)
