#!/bin/csh -f
#
# CCOMP - compiler version wrapper
#       - requirement: select and run a viable compiler
#       - selection decision tree
#       -   1) select the specified compiler if possible
#       -   2) select the last compiler of the system type
#       -      if no match
#       -   3) if you do not care which version to use
#       -      take the default which is 'any'
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

@ err = 0

set sys = `system-id`

set comp = $0
set base = $comp:h
set comp = $comp:t
if ($comp == ccomp) then
   set comp = gcc
endif
if ($base == $comp) then
   set base = $cwd
endif
#echo "cmd  = $0"
#echo "base = $base"
#echo "comp = $comp"

# do not save us from from IBM
unsetenv OBJECT_MODE

set vers = "any"

if ($?PACT_CC_VERSION == 1) then
   set vers = $PACT_CC_VERSION
endif

set compilers = $base/compilers

set prenv = FALSE
set vrb   = FALSE
set args  = ""
while ($#argv > 0)
   switch ($1)
      case -cwexe:
           shift
           set comp = $1
           breaksw
      case -cwenv:
           set prenv = TRUE
           breaksw
      case -cwhelp:
           echo ""
           echo "Usage: <compiler> [-cwexe <exe>] [-cwenv] [-cwhelp] [-cwlist <opt>] [-cwvers] [-cwvrb] <args>*"
           echo "   cwexe   specify the compiler (for testing)"
           echo "   cwenv   show any environment variable settings made"
           echo "   cwhelp  this help message"
           echo "   cwlist  show compiler info"
           echo "           all    show all compilers names, versions, and paths"
           echo "                  for current platform"
           echo "           name   show all compilers names only"
           echo "                  for all platforms"
           echo "   cwvrb   show ultimate command line"
           echo ""
           exit(1)
           breaksw
      case -cwlist:
           shift
           switch ($1)
              case all:
                   grep -w $sys $compilers | sed 's/^[a-z0-9\.\-]*//'
                   breaksw
              case name:
                   grep -v '#' $compilers | awk '{print $2}' | sort | uniq
                   breaksw
           endsw
           exit(1)
           breaksw
      case -cwvers:
           shift
           set vers = $1
           breaksw
      case -cwvrb:
           set vrb = TRUE
           breaksw
      default:
           set args = ( $args $1 )
           breaksw
   endsw
   shift
end

set inf = ( `awk '($2 == "'$comp'") && ($1 == "'$sys'") && ($3 == "'$vers'") {print}' $compilers` )
if ($#inf < 4) then
   set inf = ( `awk '($2 == "'$comp'") && ($1 == "'$sys'") {print}' $compilers | tail -n 1` )
endif

if ($#inf < 4) then
   echo "No compiler found matching '$comp $vers' - exiting"
   exit(1)
else
   shift inf
   shift inf
   shift inf
   set exe = $inf[1]
   shift inf

# get other key,value pairs
# useful for setting compiler license variables
   while ($#inf > 1)
      set var = $inf[1]
      set val = $inf[2]
      shift inf
      shift inf
      setenv $var $val      
   end
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

set bindir = $exe:h
set path   = ( $bindir $path )

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

if ($?LD_LIBRARY_PATH == 0) then
   setenv LD_LIBRARY_PATH  /usr/lib
endif

if ($?MANPATH == 0) then
   setenv MANPATH  ":"
endif

# NOTE: newest GNU compilers require this because to run
# for some reason they were not built with -rpath
# this is not for the compiled executables
if (($comp == gcc) || ($comp == g++) || ($comp == gfortran)) then
   set GNU = $exe:h
   set GNU = $GNU:h
   setenv LD_LIBRARY_PATH  $GNU/lib64:$GNU/lib:${LD_LIBRARY_PATH}

   if (-d $GNU/share/man) then
      setenv MANPATH   ${MANPATH}:$GNU/share/man
   endif
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

if ($prenv == TRUE) then

   echo "LD_LIBRARY_PATH       $LD_LIBRARY_PATH"
   echo "MANPATH               $MANPATH"

else

# these are common variable which may be used by the compiler drivers
# for example the Intel compiler drivers use some of these
# we are done with them - so unset them
   unsetenv PACT_CC_FAMILY
   unsetenv PACT_CC_VERSION
   unsetenv PACT_CC_PATH

# verbose mode diagnostic for debugging
   if ($vrb == TRUE) then
      echo "   Root: $bindir"
      echo "   LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
      echo "   Compile line: $exe $args"
   endif

   if (-x $exe) then
      exec $exe $args
   else
      @ err = 1
      set comp = $0
      set comp = $comp:t
      echo "${comp}: Command not found."
   endif
endif

exit($err)

