#
# CLANG - define clang compiler
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

run analyze/rpath -a /usr/${LIB}
run analyze/rpath clang

Tool CC {
   Exe       = clang
   Flags     =
#   Flags    += -Wcovered-switch-default
   Flags    += -Wno-unknown-pragmas -Wno-empty-body
   Flags    += [ _env_ = STD_C ;                # C standard flags
                 C89   = -std=c89 ;
                 C99   = -std=c99 ;
                 X89   = -std=gnu89 ;           # gcc default
                 X99   = -std=gnu99 ]

   Flags    =+ -fno-exceptions

# this currently kills the SO for python bindings
# it should be reworked to function
# that would help with other OS's
#   Flags    =+ -fvisibility=hidden

# explicitly set the sign of the char type
   Flags    =+ -funsigned-char
# because INT_MAX + 1 == INT_MIN is often used but is undefined behavior
   Flags    =+ -fwrapv

# -Wall turns on the following warning flags:
#    -Waddress -Warray-bounds (only with -O2) -Wc++0x-compat
#    -Wchar-subscripts -Wenum-compare (in C/Objc; this is on by default
#    in C++) -Wimplicit-int (C and Objective-C only)
#    -Wimplicit-function-declaration (C and Objective-C only) -Wcomment
#    -Wformat -Wmain (only for C/ObjC and unless -ffreestanding)
#    -Wmissing-braces -Wnonnull -Wparentheses -Wpointer-sign -Wreorder
#    -Wreturn-type -Wsequence-point -Wsign-compare (only in C++)
#    -Wstrict-aliasing -Wstrict-overflow=1 -Wswitch -Wtrigraphs
#    -Wuninitialized -Wunknown-pragmas -Wunused-function -Wunused-label
#    -Wunused-value -Wunused-variable -Wvolatile-register-var
#
   Debug     = -g -O0 -Wall
#   Flags    =+ -Werror
   Flags    =+ -Wformat -Wformat-security
   Flags    =+ -Wmultichar
   Flags    =+ -Wpointer-arith
   Flags    =+ -Winit-self

# -Wextra turns on the following warning flags:
#    -Wclobbered -Wempty-body -Wignored-qualifiers
#    -Wmissing-field-initializers -Wmissing-parameter-type (C only)
#    -Wold-style-declaration (C only) -Woverride-init -Wsign-compare
#    -Wtype-limits -Wuninitialized -Wunused-parameter (only with
#    -Wunused or -Wall) -Wunused-but-set-parameter (only with -Wunused
#    or -Wall)
#
   Flags    =+ -Wextra
#   Flags    =+ -Wno-sign-compare
   Flags    =+ -Wno-unused-parameter -Wno-unused-function -Wno-unused-label
   Flags    =+ -Wno-missing-field-initializers -Wno-missing-declarations

# even more warnings
   Flags    =+ -Wno-inline
   Flags    =+ -Wmissing-format-attribute
   Flags    =+ -Wshadow
   Flags    =+ -Wenum-compare
   Flags    =+ -Wbool-conversion
   Flags    =+ -Wloop-analysis
   Flags    =+ -Wsizeof-array-argument
   Flags    =+ -Wstring-conversion
   Flags    =+ -Wparentheses
   Flags    =+ -Wduplicate-enum
   Flags    =+ -Wheader-guard
   Flags    =+ -Wlogical-not-parentheses
#   Flags    =+ -Wsuggest-attribute=noreturn -Wno-missing-format-attribute

# these would really bring the pain
# but are not quite right for the way PACT is designed
#   Flags    =+ -Wwrite-strings
#   Flags    =+ -Wformat-nonliteral
#   Flags    =+ -Wno-deprecated
#   Flags    =+ -Wno-unused-value

   Optimize  = -g -O2
   Version   = -v
}

Tool FC {
   Exe       = gfortran
   Flags     = -ffloat-store -ffree-form
   Flags    += [ _env_ = PACT_CC_VERSION ;      # compiler version flags
                 4.*   = -fsignaling-nans ;
                 4.6.* >= -fsignaling-nans -Wno-unused-dummy-argument ]
   Flags    += [ _env_ = Bits ;                 # address bit size
                 32    = -m32 ;
                 64    = -m64 -fPIC ]
   Flags    += [ _cmd_ = -p ;                   # profiling
	         on    = -pg ]
   Flags    += [ _cmd_ = -cov ;                 # coverage analysis
	         on    = -fprofile-arcs -ftest-coverage ]
   Debug     = -g -O0 -Wall
   Optimize  = -g -O -Wunused
   Version   = -v
}

Tool CXX {
   Exe       = clang++
   Flags     = 
   Debug     = -g -O0 -Wall
   Optimize  = -g -O -Wunused
   Version   = -v
}

Tool LD {
   RPath    = ${OCV_RPath}
   Flags   += ${OCV_LD}
   Flags   += [ _cmd_ = -p ;                 # profiling
	        on    = -pg ]
   Lib      = ${OCV_LDLb}
}

Tool Lex {
   Flags  = -w
}

Tool MAKE {
   UseGNU = TRUE
}

Group AF {
   PATTERN_WARN = ":+sp+warning:"
   PATTERN_ERR  = ":+sp+error:"
}

Group Std {
   CC_Flags = ${CC_Flags}
   FC_Flags = ${FC_Flags}
   LD_Flags = ${LD_Flags}
}

Group Cfg {
   Use    = Std
   CC_Exe = clang
}

Group Shared {
   LD_Exe   = clang
   CC_Flags = -fPIC
   LD_Flags = ${OCV_Sh}
}

Group PThread {
   LD_Lib = -lpthread 
}

Group OpenMP {
   CC_Flags  =
   LD_Flags  = -fopenmp
   LD_Lib    = -lgomp
   SharedFnc = [ _env_ = PACT_CC_VERSION ;      # compiler version flags
                4.6.0  <  yes ;
                4.6.0  >= no ]
}

include cpp-rule
include serial

