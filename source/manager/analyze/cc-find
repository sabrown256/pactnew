#!/bin/csh -f
#
# CC-FIND - find ANSI C compilers on the current path
#         - this only runs from pact/manager
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

dbget CROSS_FE

set af_ansi  = TRUE
set FullPath = FALSE
set LibPath  = ""
set ncclst   = ""

@ Verbose  = 0

while ($#argv > 0)
   switch ($1)
       case -h:
            echo ""
            echo "Usage: cc-find [-h] [-l <path>] [-p] [-v] [-w] <cc>*"
            echo "  h   this help message"
            echo "  l   use <path> for LD_LIBRARY_PATH to detect compiler"
            echo "  p   use full path to compiler"
            echo "  v   increment verbosity level"
            echo "  w   compiler is ANSI compliant or not"
            echo ""
            exit(1)
       case -l:
            shift
            set LibPath = ( $1 )
            breaksw
       case -p:
            set FullPath = TRUE
            breaksw
       case -v:
            @ Verbose = $Verbose + 1
            breaksw
       case -w:
            set af_ansi = FALSE
            breaksw
       default:
            set ok = TRUE
            foreach i ($ncclst)
               if ($i == $1) then
                  set ok = FALSE
                  break
               endif
            end
            if ($ok == TRUE) then
               set ncclst = ( $ncclst $1 )
            endif
   endsw
   shift
end

cat << EOF >! $Tmp.c
#include <stdio.h>
int main(int c, char **v)
{int rv;
#ifdef __STDC__
rv = 0;
printf("ANSI");
#else
rv = 1;
printf("PCC");
#endif
return(rv);}
EOF

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# LIST - make sure the list elements are unique and the requested
#      - compiler is listed first

set cclst = (gcc clang pgcc icc opencc pathcc suncc xlc cc)
foreach i ($cclst)
    set ok = TRUE
    foreach j ($ncclst)
       if ($i == $j) then
          set ok = FALSE
          break
       endif
    end
    if ($ok == TRUE) then
       set ncclst = ( $ncclst $i )
    endif
end

set cclst = ( $ncclst )

if ($Verbose > 0) then
   echo "Complete list of potential compilers: $cclst"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# CHECK - try the compilers on the list

set allcc  = ""
set ansicc = ""

foreach cc ($cclst)
   set res = `pwhere -n 1 $cc`
   if ("$res" =~ /*) then

      set bindir = $res:h
      set libdir = $bindir:h/lib

# if forced to - use LD_LIBRARY_PATH in compiler detection
      if ("$LibPath" != "") then
         if ("$LibPath" == ".") then
            setenv LD_LIBRARY_PATH $libdir
         else
            setenv LD_LIBRARY_PATH $LibPath
         endif
         if ($Verbose > 1) then
            echo ""
            echo "LD_LIBRARY_PATH = $LD_LIBRARY_PATH"
         endif
      endif

      rm -f $Tmp
      flog $ALog $cc $Tmp.c -o $Tmp

      if (-x $Tmp) then
         flog $ALog $CROSS_FE $Tmp
         set xstatus = $status

         if ($xstatus == 0) then
            if ($FullPath == TRUE) then
               set tcc = $res
            else
               set tcc = $cc
            endif

            flog $ALog $CROSS_FE $Tmp
            if ($status == 0) then
               flog $ALog set allcc  = ( $allcc $tcc )
               flog $ALog set ansicc = ( $ansicc $tcc )
            else
               flog $ALog set allcc = ( $allcc $tcc )
            endif

         else if ($Verbose > 0) then
            echo "Test built by $cc failed - check for shared libraries"
            ldd $Tmp
         endif
      endif
   endif
end

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

flog $ALog rm -f $Tmp.c $Tmp

if ($af_ansi == TRUE) then
   Note $ALog -n "ANSI C Compilers: "
   NoteD $ALog "$ansicc"
else
   Note $ALog -n "All C Compilers: "
   NoteD $ALog "$allcc"
endif

source $Me:h/post-common

exit(0)

