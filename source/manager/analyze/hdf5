#!/bin/csh -f
#
# HDF5 - analyze platform HDF5
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Separator $Log
Note $Log "Analyze: hdf5"

# vanilla place to look if previously undefined
SafeEnv MDI_Inc    ""
SafeEnv MDI_Lib    ""
SafeEnv MDI_Pck    ""
SafeEnv HDF_Inc    ""
SafeEnv HDF_Lib    ""
SafeEnv HDF_RPath  /usr/lib
SafeEnv HDF_Path   /usr
SafeEnv Z_Lib      "-lz"

dbini HDF5_SO    ""

dbget Linking

# if we have explicitly said we do not want HDF5
# do NOT detect it
if ("$HDF_Path" == none) then
   NoteD $ALog "      no HDF5 (by request)"
   setenv HAVE_HDF5 ""

else

   set UTime = `timer -r`

# write a little HDF5 test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   cat << EOF >! $Tmp.c
#include <hdf5.h>
int main(int c, char **v)
{H5_init_library();
#if (H5_VERS_RELEASE < 4)
 H5Eset_auto(H5E_DEFAULT, NULL, stderr);
#elif (H5_VERS_RELEASE >= 4)
 H5Eset_auto(H5E_DEFAULT, NULL);
#endif
 H5check_version(H5_VERS_MAJOR, H5_VERS_MINOR, H5_VERS_RELEASE);
 return(0);}
EOF

   set lIncDirs = ""
   set lLibDirs = ""
   foreach i ($HDF_Path)
      set lIncDirs = ( $lIncDirs $i/include )
      set lLibDirs = ( $lLibDirs $i/lib )
   end
   set lIncDirs = ( $lIncDirs /usr/local/hdf5/include /usr/local/include $RootInc )
   set lLibDirs = ( $lLibDirs /usr/local/hdf5/lib /usr/local/lib /usr/$LIB )

   set Implicit = TRUE
   set lHdrs    = ( hdf5.h )
   set ASList   = ( so a )
   set lLib     = hdf5
   set lFile    = $Tmp

   set lALibs = ""
   foreach i ( `echo $RPATH | sed 's|:| |g'` )
       set lALibs = ( $lALibs -L$i )
   end
   set lALibs = ( $lALibs $LD_Lib $LibM_Lib $Z_Lib )

   source $AnaDir/find-package

   if (("$PckLib" != "") && ("$PckInc" != "")) then
      NoteD $ALog "      has HDF5 ($PckLib)"

      if (("$PckInc" != "none") && ("$PckInc" != "-I$RootInc")) then
         setenv MDI_Inc "$MDI_Inc $PckInc"
      endif
      if (($Linking == dynamic) && ($?lSO == 1)) then
         setenv HDF5_SO    $lSO
      else
         setenv MDI_Lib       "$PckLib $MDI_Lib"
      endif
      flog $ALog setenv RPATH         ${RPATH}:${HDF_RPath}
      flog $ALog setenv MDI_Pck       "HDF $MDI_Pck"
      flog $ALog setenv HAVE_HDF5     TRUE
   else
      NoteD $ALog "      no compatible HDF5 version"
      flog $ALog setenv HAVE_HDF5 ""
   endif

   set ETime = `timer -b $UTime`

   setenv HDF_Inc   "$PckInc"
   setenv HDF_Lib   "$PckLib"
   setenv HDF_RPath "$PckPath"

# NOTE: used HDF_Path to find libs, incs - there are no executables
   setenv HDF_Path  ""

# export the results
   SetParent RPATH
   SetParent MDI_Inc
   SetParent MDI_Lib
   SetParent MDI_Pck
   SetParent HDF_Inc
   SetParent HDF_Lib
   SetParent HDF_RPath
   SetParent HDF_Path

   dbexp HDF5_SO

endif

SetParent HAVE_HDF5

exit(0)

