#
# FIND-PACKAGE - see if the specified package exists
#              - if so PckInc will point to the headers directory
#              - and be in the form of a list of -I<dir> specification
#              - PckLib will contain a list of libraries found
#              - PckPath will contain a list of directories for libraries
#              - Example:
#
#    set lIncDirs = ( $JPEG_Path/include $DAS_ROOT/include /usr/local/include $RootInc )
#    set lLibDirs = ( $JPEG_Path/lib $DAS_ROOT/lib /usr/local/lib /usr/lib /lib )
#    set lHdrs    = ( jpeglib.h jconfig.h jmorecfg.h jerror.h )
#    set ASList   = ( a so )
#
#    source find-package(libjpeg, $Tmp)
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

Note $ALog ""
Note $ALog "Entering FIND_PACKAGE"
Note $ALog ""
Note $ALog "lIncDirs: ($#lIncDirs) $lIncDirs"
Note $ALog "lLibDirs: ($#lLibDirs) $lLibDirs"
Note $ALog "lHdrs:    ($#lHdrs) $lHdrs"
Note $ALog ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# HEADERS - look for the headers first of all and set PckInc

if ("$lHdrs" == "none") then
   flog $ALog set PckInc = none
else
   Note $ALog ""
   Note $ALog "Header -------------------------------"
   Note $ALog "   Looking for $lHdrs in:"
   flog $ALog set PckInc = ""
   foreach i ($lIncDirs)
      Note $ALog "  $i"
      if (-d $i) then
         set HdrOK = TRUE
         foreach hdr ($lHdrs)
            if (!(-e $i/$hdr)) then
               set HdrOK = FALSE
               break
            endif
         end
         if ($HdrOK == TRUE) then
            flog $ALog set PckInc = "-I$i"
            Note $ALog "   found $lHdrs in $i"
            break            
         endif
      endif
   end 
   Note $ALog ""
endif

if ("$lFile" != "none") then
   flog $ALog cat $lFile.c
   Note $ALog ""
endif

unset lSO

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# LIBRARY - now look for the library

Note $ALog "Cfe_CC_Exe   = |$Cfe_CC_Exe|"
Note $ALog "Cfe_CC_Flags = |$Cfe_CC_Flags|"
Note $ALog "Cfe_LD_Flags = |$Cfe_LD_Flags|"
Note $ALog "Cfe_LD_RPath = |$Cfe_LD_RPath|"

flog $ALog set opt = ""
flog $ALog set opt = ( $opt $lFile.c -o $lFile )
flog $ALog set opt = ( $opt $Cfe_CC_Flags $PckInc )
flog $ALog set opt = ( $opt $Cfe_LD_Flags $Cfe_LD_RPath )

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# IMPLICIT - check for implicit library reference
#          - does the linker know how to find it

# make the list of libraries for linking
set ldlibs = ""
foreach i ($lLib)
   set ldlibs = ( $ldlibs -l$i )
end

if ($Implicit == TRUE) then
   Note $ALog ""
   Note $ALog "See if implicit library reference works"
   Note $ALog ""
   foreach i ( noL $lLibDirs )
      Note $ALog ""
      Note $ALog "Implicit -------------------------------"
      Note $ALog "   $i"
      if (-d "$i") then
         flog $ALog set PckPath = ( $i )
         flog $ALog set lLPath  = "-L$i"
      else
         flog $ALog set PckPath = ""
         flog $ALog set lLPath  = ""
      endif
      flog $ALog set PckLib = ( $ldlibs )
      flog $ALog $Cfe_CC_Exe $opt $lLPath $PckLib $lALibs $Cfe_LD_Lib
      set xstatus = $status
      if ($xstatus == 0) then
         flog $ALog setenv LD_LIBRARY_PATH $i
         flog $ALog eval $lFile
         set xstatus = $status
         if ($xstatus == 0) then
            flog $ALog set PckOK = TRUE
            Note $ALog "    success with $ldlibs (implicit)"
            goto GotIt
         else
            Note $ALog "    exec failed ($xstatus) with $ldlibs (implicit)"
            flog $ALog ls -l $lFile*
         endif
         flog $ALog unsetenv LD_LIBRARY_PATH
      else
         Note $ALog "    build failed ($xstatus) with $ldlibs (implicit)"
      endif
   end
else
   Note $ALog ""
   Note $ALog "Implicit -------------------------------"
   Note $ALog "   Not checking for implicit library reference"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# EXPLICIT - check for explicit library reference

Note $ALog ""
Note $ALog "See if explicit library reference works"
Note $ALog ""
flog $ALog set PckPath = ""
flog $ALog set PckLib  = ""
foreach i ($lLibDirs)
   if ("$i" == "none") then
      break
   endif

   Note $ALog ""
   Note $ALog "Explicit -------------------------------"
   Note $ALog "   $i"

   if (-d $i) then
      flog $ALog set RLib = $i/lib$lLib
      foreach a ( none $ASList )
         if ("$a" == none) then
            set LDir = "-L$i $ldlibs"
            flog $ALog set PckPath = ( $i )
            flog $ALog set PckLib  = ( $ldlibs )
            flog $ALog $Cfe_CC_Exe $opt $LDir $lALibs $Cfe_LD_Lib
            set xstatus = $status
            if ($xstatus == 0) then
               flog $ALog eval $lFile
               set xstatus = $status
               if ($xstatus == 0) then
                  flog $ALog set PckOK = TRUE
                  Note $ALog "    success with -L$i $ldlibs (explicit)"
                  goto GotIt
               else
                  Note $ALog "    exec failed ($xstatus) with -L$i $ldlibs (explicit)"
                  flog $ALog ls -l $lFile*
               endif
            else
               Note $ALog "    build failed ($xstatus) with -L$i $ldlibs (explicit)"
            endif

         else if (-e $RLib.$a) then
            Note $ALog "   Checking $RLib.$a in $i"
            flog $ALog set PckLib = $RLib.$a
            flog $ALog set PckOK  = FALSE
            if ("$lFile" == "none") then
               flog $ALog set PckOK = TRUE
            else
               flog $ALog $Cfe_CC_Exe $opt $PckLib $lALibs $Cfe_LD_Lib
               set xstatus = $status
               if ($xstatus == 0) then
                  flog $ALog eval $lFile
                  set xstatus = $status
                  if ($xstatus == 0) then
                     flog $ALog set PckOK = TRUE
                     Note $ALog "    success with $RLib.$a (explicit)"
                  else
                     Note $ALog "    exec failed ($xstatus) with $RLib.$a (explicit)"
                     flog $ALog ls -l $lFile*
                  endif
               endif
            else
               Note $ALog "    build failed ($xstatus) with $RLib.$a (explicit)"
            endif
            Note $ALog "    $i ==> $PckOK"
            if ($PckOK == FALSE) then
               flog $ALog set PckLib = ""
            else
               Note $ALog "    success with $i (explicit)"
               goto GotIt
            endif
            Note $ALog ""
         else
            set t = $RLib:t
            Note $ALog "   No $t.$a in $i"
            unset t
         endif
      end
   else
      Note $ALog "   No $i on this host"
   endif
end
Note $ALog ""

flog $ALog set PckPath = ""
flog $ALog set PckLib  = ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# FINISH

GotIt:

# check for static vs dynamic linking
set inf = ( `ldd $lFile |& grep $lLib` )
if ($#inf > 2) then
   set lSO = $inf[3];
   Note $ALog "Shared library for ${lLib}: |$lSO|"
endif

if ("$lFile" != "none") then
   flog $ALog $RM $lFile $lFile.c
endif

Note $ALog "Leaving FIND_PACKAGE with:"
Note $ALog "   PckLib  = |$PckLib|"
Note $ALog "   PckPath = |$PckPath|"
Note $ALog ""

