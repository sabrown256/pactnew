#!/bin/csh -f
#
# RPATH - figure out RPATH at various points
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

if (-f ../scripts/functions-pact.csh) then
   pushd ../scripts >& /dev/null
else if (-f ../../scripts/functions-pact.csh) then
   pushd ../../scripts >& /dev/null
else if (-f ../../../scripts/functions-pact.csh) then
   pushd ../../../scripts >& /dev/null
endif
set SrcDir = $cwd
popd >& /dev/null

set ldir = $SrcDir:h/scripts
set path = ( $ldir $path )

set VAR_LIST = `where var-list |& head -n 1`
if (!(-x "$VAR_LIST")) then
   echo "RPATH: var-list not found - exiting"
   exit(1)
endif

source $ldir/functions-pact.csh
source $ldir/csh-subroutines
HAVE_SUBROUTINES

set Tgt     = ""
set Dir     = ""
set Var     = ""
set Out     = "parent"
set IncPACT = FALSE

while ($#argv > 0)
   switch ($1)
      case -a:
           shift
           set Dir = $1
           set Var = ""
           set Tgt = add
           breaksw
      case -d:
           shift
           set Dir = $1
           set Var = ""
           set Tgt = del
           breaksw
      case -e:
           shift
           set Dir = ""
           set Var = $1
           set Tgt = add
           breaksw
      case -h:
           echo ""
           echo "Usage: rpath [-a <dir>] [-d <dir>] [-e <var>] [-h] [-i] [-o parent | echo | list | link | rpath]"
           echo "  a   add <dir> to the RPATH"
           echo "  d   remove <dir> from the RPATH"
           echo "  e   add value of <var> to the RPATH"
           echo "  h   this help message"
           echo "  i   include the PACT library directory"
           echo "  o   return result in specified mode:"
           echo "         parent displays as parent(a:b:c)"
           echo "         echo displays as a:b:c"
           echo "         list displays as 'a b c'"
           echo "         link displays as '-La -Lb -Lc'"
           echo "         rpath expands LD_RPath, for example '-Wl,-rpath,a:b:c'"
           echo "      default is parent"
           echo ""
           exit(1)
      case -i:
           set IncPACT = TRUE
           breaksw
      case -o:
           shift
           set Out = $1
           breaksw
      default:
           set Tgt = $1
           breaksw
   endsw
   shift
end

dbmget /dev/null Cfg_RPATH^    \
                 LIB^          \
                 PACT_CC_PATH^ \
                 PATH^         \
                 RPATH

switch ($Tgt)

# AIX cannot tolerate an empty RPATH
   case aix:
        if ($?RPath == 0) then
           setenv RPATH     /lib
           setenv Cfg_RPATH /lib
        endif
        breaksw

   case clang:
	if ($?PACT_CC_PATH == 1) then
           if ($PACT_CC_PATH != "/usr") then
              setenv RPATH     ${PACT_CC_PATH}/${LIB}:${RPATH}
              setenv Cfg_RPATH ${PACT_CC_PATH}/${LIB}:${RPATH}
           endif
        endif
        breaksw

   case compcert:
	if ($?PACT_CC_PATH == 1) then
           if ($PACT_CC_PATH != "/usr") then
              setenv RPATH     ${PACT_CC_PATH}/${LIB}:${RPATH}
              setenv Cfg_RPATH ${PACT_CC_PATH}/${LIB}:${RPATH}
           endif
        endif
        breaksw

   case gnu:
	if ($?PACT_CC_PATH == 1) then
           if ($PACT_CC_PATH != "/usr") then
#              setenv RPATH     ${PACT_CC_PATH}/${LIB}:${RPATH}
#              setenv Cfg_RPATH ${PACT_CC_PATH}/${LIB}:${RPATH}
              setenv RPATH     ${PACT_CC_PATH}/lib64:${PACT_CC_PATH}/lib:${RPATH}
              setenv Cfg_RPATH ${PACT_CC_PATH}/lib64:${PACT_CC_PATH}/lib:${RPATH}
           endif
        endif
        breaksw

   case init:
        if ($IncPACT == TRUE) then
           if ($PSY_InstRoot == none) then
              set ldir = $cwd
              set ldir = $ldir:h
              setenv RPATH      $ldir/dev/$PSY_ID/lib
              setenv Cfg_RPATH  $ldir/dev/$PSY_ID/lib
              unset ldir
           else
              setenv RPATH      $PSY_InstRoot/lib
              setenv Cfg_RPATH  $PSY_InstRoot/lib
           endif
        else
           setenv RPATH ""
           setenv Cfg_RPATH ""
        endif
        breaksw

   case intel:
	if ($?PACT_CC_PATH == 1) then
           setenv RPATH     ${PACT_CC_PATH}/lib:${RPATH}
           setenv Cfg_RPATH ${PACT_CC_PATH}/lib:${RPATH}
        endif
        breaksw

   case linux:
        setenv RPATH     /usr/${LIB}:${RPATH}
        setenv Cfg_RPATH /usr/${LIB}:${RPATH}

   case path:
	if ($?PACT_CC_PATH == 1) then
           setenv RPATH     ${PACT_CC_PATH}/32:${RPATH}
           setenv Cfg_RPATH ${PACT_CC_PATH}/32:${RPATH}
           if ($Bits == 64) then
              setenv RPATH     ${PACT_CC_PATH}:${RPATH}
              setenv Cfg_RPATH ${PACT_CC_PATH}:${RPATH}
           endif
        endif
        breaksw

   case pgi:
	if ($?PACT_CC_PATH == 1) then
           setenv RPATH     ${PACT_CC_PATH}/lib:${RPATH}
           setenv Cfg_RPATH ${PACT_CC_PATH}/lib:${RPATH}
        endif
        breaksw

   case sun:
   case solaris:
        if ($?PACT_CC_PATH == 1) then
           setenv RPATH     ${PACT_CC_PATH}/lib:${RPATH}
           setenv Cfg_RPATH ${PACT_CC_PATH}/lib:${RPATH}
        endif
        breaksw

   case add:
        if ("$Var" != "") then
           set lvar = `printenv $Var`
           if ("$RPATH" == "") then
              setenv RPATH $lvar
           else
              setenv RPATH ${lvar}:${RPATH}
           endif
        else if ("$Dir" != "") then
           if ("$RPATH" == "") then
              setenv RPATH $Dir
           else
              setenv RPATH ${Dir}:${RPATH}
           endif
        endif
        breaksw

   case del:
        set lrpath = ( `$VAR_LIST -l $RPATH` )
        set nrpath = ""
        foreach d ($lrpath)
           if ($d != $Dir) then
              set nrpath = ( ${nrpath}:${d} )
           endif
        end
        setenv RPATH $nrpath

        set lrpath = ( `$VAR_LIST -l $Cfg_RPATH` )
        set nrpath = ""
        foreach d ($lrpath)
           if ($d != $Dir) then
              set nrpath = ( ${nrpath}:${d} )
           endif
        end
        setenv Cfg_RPATH $nrpath
        breaksw
endsw

call CLEAN_PATH(RPATH)

switch ($Out)
   case parent:
        call CLEAN_PATH(Cfg_RPATH)
        dbmset /dev/null Cfg_RPATH = $Cfg_RPATH^  \
                         RPATH     = $RPATH
        breaksw
   case echo:
        echo $RPATH
        breaksw
   case list:
        echo $npath
        breaksw
   case link:
        set nlink = ""
        foreach l ($npath)
           set nlink = ( $nlink -L$l )
        end
        echo $nlink
        breaksw
   case rpath:
        if (($?LD_RPath == 1) && ("$RPATH" != "")) then
           gexec echo "$LD_RPath" @o sed "s|\@|$RPATH|"
        else
           echo ""
        endif
        breaksw
endsw

exit($status)

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# CLEAN_PATH - make sure each entry in LVAR exists and is unique

CLEAN_PATH:

    set lvar = $args_[1]
    set lval = ( `printenv $lvar` )

    set npath = ""
    if ("$lval" != "") then
       set lpath = ( `printenv $lvar` )
       set lpath = ( `$VAR_LIST -l $lpath` )
       foreach i ($lpath)
          if (-d $i) then
             set ok = TRUE
             foreach n ($npath)
                if ($i == $n) then
                   set ok = FALSE
                   break
                endif
             end
             if ($ok == TRUE) then
                set npath = ( $npath $i )
             endif
          endif
       end
       set lpath = ( `$VAR_LIST -p $npath` )
       setenv $lvar $lpath
    endif

    unset lvar
    unset lval

    return

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

