#
# PROGRAM-INIT - define PACT wide variables and give them default values
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

Note "Initializing configuration"

run analyze/default-bits

# include PACT libraries in RPATH for the memory manager interposers
run analyze/rpath -i init

# dynamically link dependent libraries by default
include features/dld

LIB = lib

#--------------------------------------------------------------------------

# initialize standard tools

Tool ACC {
}

Tool AFC {
}

Tool AR {
}

Tool CC {
   Version = 
   Inc     = 
   Flags   = 
}

Tool CXX {
   Version = 
   Inc     = 
   Flags   = 
}

Tool DL {
}

Tool DO_RUN {
   DBG   = none
   MPI   = none
   CROSS = none
}

Tool FC {
   Version  = 
   Flags    = 
   MOD_FLAG = -I
}

Tool IMF {
}

Tool INSTALL {
   Exe = cp
}

Tool LD {
   Libk        =
   RPath       =
   Flags       =
   SpokeDepLib =
}

Tool Lex {
}

Tool Yacc {
}

Tool HDF5 {
}

Tool JOBS {
   System = loner
}

Tool MAKE {
   Shared_Libs = FALSE
   SUFFIXES    = ".i"
}

Tool MYSQL {
}

Tool NM {
   Exe = nm
   Cmd = "$NM_Exe -g"
}

Tool OPENSSL {
}

# PY contains the specifics of the python versions
# to be used as derived from the specifications in
# the Python group

Tool PY {
}

Tool Ranlib {
}

Tool READLINE {
}

Tool SQLITE3 {
}

Tool TRACKER {
}

#--------------------------------------------------------------------------

# initialize standard groups

# analyzed features - detected, defined, or computed - post analyze

Group AF {
   PATTERN_WARN =
   PATTERN_ERR  =
}

Group BFD {
   Flags = 
   Inc   =
   Lib   = -lbfd
   RPath = 
   Path  = 
}

Group Cfg {
}

Group Cfe {
}

Group CRAY {
}

# cross compiling group
Group CROSS {
   COMPILE = FALSE
   REF     = none
}

# database group
Group DB {
   CFGMAN         =
   HOST_SERVER    = 
   RUN_SIGNATURE  = 
   SITE_SIGNATURE =
   UPDATE_SYS     = 
}

# Distributed Parallel processing group
Group DP {
   BE    = ""
   FE    = "${PSY_Root}/bin/do-run -m"
   Inc   = ""
   Lib   = ""
   RPath = /usr/lib
   Path  = /usr/bin
}

# specifications for FPE patching
Group FPE {
   Exe    = gcc
   Flags  = -g -Wall
   Flags += -fPIC
}

Group GSL {
}

Group GRAPHICS {
   Devices = "PS CGM MPG PNG JPG"
   Flags   = 
   UseOGL  = FALSE
   UseQD   = FALSE
   UseX    = FALSE
   Windows = 
}

# the HAVE group contains features that have been requested, verified to
# exist, and ready to use
# these mostly imply that they will be used (see USE group)

Group HAVE {
}

Group HDF {
   Inc   = 
   Lib   = 
   RPath = 
   Path  = 
}

# Host SYstem group
#   HSY_Host         the system host name
#   HSY_OS_Name      the host OS name
#   HSY_OS_Type      the host OS type
#   HSY_OS_Release   the host OS release
#   HSY_RootInc      the standard /usr/include equivalent for the host
#   HSY_RootLib      the standard /usr/lib equivalent for the host

Group HSY {
   CPU        = "unknown"
   FPU        = "unknown"
   Host       = ${HSY_Host}
   OS_Name    = ${HSY_OS_Name}
   OS_Type    =
   OS_Release =
   RootInc    = /usr/include
   RootLib    = /usr/lib
}

Group IBM {
   OS = AIX
   HW = PPC
}

Group LEH {
   TTY_ECHO  = TRUE
   TTY_CRNL  = TRUE
   TTY_VTIME = TRUE
}

# other machine dependent packages for PACT - e.g. RL
Group MD {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

# machine dependent graphics for PGS - e.g. X11
Group MDG {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

# machine dependent I/O for PDB - e.g. SQL
Group MDI {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

# machine dependent executable access - e.g. BFD
Group MDE {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

Group MINGW {
}

# OS dependent Compiler Variant group
Group OCV {
}

# Open MP group
Group OpenMP {
   SharedFnc  = no
   OVER_SCHED = TRUE
}

Group OS {
}

# PACT_CC_ refers to the Compiler Collection used to build PACT
# rather than COMPILER_ which is overloaded to the extreme

Group PACT {
   CFG_FILE   = ""
   CFG_ID     = ""
   CC_FAMILY  = generic
   CC_EXE     = `which cc`
   CC_VERSION = ""
   FC_FAMILY  = generic
   FC_VERSION = ""
}

# PCO SYstem group
#   PCO_EnvGroups    groups all of whose variables go into env-pact.*
#   PCO_EnvVars      variables which go into env-pact.*
#   PCO_Globals      list of variables not in a specific group
#   PCO_RemDup       variables which must be cleaned of duplicates
#   PCO_UseVars      variables cloned by Use statement

Group PCO {
   EnvGroups =  "AF BFD CC Cfg CRAY CROSS CXX DB DO_RUN DP FC FS"
   EnvGroups =+ "HDF HSY IBM JOBS JPEG LibM MAKE MDG MINGW MYSQL"
   EnvGroups =+ "OS PACT PNG PCO PSY PY RF SQLITE3 TEST TRACKER"

   EnvVars =  "Bits LIB"
   EnvVars =+ "HAVE_PYTHON HAVE_PY_NUMERIC HAVE_PY_NUMPY"
   EnvVars =+ "HAVE_OPENMP"

   Globals   =

   RemDup  =  "DP_Inc MDG_Inc MD_Inc CC_Inc"
   RemDup  =+ "DP_Lib MD_Lib LD_Lib"

# NOTE: for OSX this would reduce -framework FOO -framework BAR
# to -framework FOO BAR which is not legal
#   RemDup  =+ "MDG_Lib"

   RemDup  =+ "DP_Path"

   UseVars =  "CC_Exe CC_Linker CC_Flags CC_Debug CC_Optimize CC_Inc"
   UseVars =+ "FC_Exe FC_Linker FC_Flags FC_Debug FC_Optimize"
   UseVars =+ "LD_Exe LD_RPath LD_Flags LD_Lib"
}

# PACT SYstem group
#   PSY_Arch         the system ID as defined by 'system-id'
#   PSY_Cfg          the system config file
#   PSY_CfgMan       full path to the cfgman utility
#   PSY_CONFIG_PATH  list of directories where config files may be found
#   PSY_Dbg_Opt      the debug/optimize option for this build
#   PSY_ID           the system ID as defined by 'cfgman use'
#   PSY_Prefix       the temporary directory prefix, e.g. "z-"
#   PSY_TYPE         the system type as defined by 'site-signature'
#   PSY_SITE         the site of the system as defined by 'site-signature'
#
#   PSY_Base         the base directory containing sources
#   PSY_Root         the root dev directory for this PSY_ID
#   PSY_AIRoot       the architecture independent root directory
#   PSY_ASRoot       the architecture specific root directory
#   PSY_InstRoot     the root installation directory
#   PSY_PubInc       the public PACT installation include directory
#   PSY_PubLib       the public PACT installation lib directory
#
#   PSY_AnaDir       the manager/analyze directory
#   PSY_CfgDir       the temporary configuration directory
#   PSY_FltDir       the directory containing filter files
#   PSY_MngDir       the manager directory
#   PSY_ScrDir       the scripts directory
#   PSY_TmpDir       the temporary build/test directory

Group PSY {
   Arch        = ${PSY_Arch}
   Cfg         = ""
   CfgMan      = ${PSY_CfgMan}
   CONFIG_PATH = ${PSY_CONFIG_PATH}
   Dbg_Opt     = ${PSY_Dbg_Opt}
   OMIT_INTERP = FALSE

   ID          = ${PSY_ID}
   Prefix      = ${PSY_Prefix}
   TYPE        = ""
   SITE        = ""
   NoExe       = FALSE
   Load        = FALSE

   Base        = ${PSY_Base}
   Root        = ${PSY_Root}
   AIRoot      = ${PSY_AIRoot}
   ASRoot      = ${PSY_ASRoot}
   InstRoot    = ${PSY_InstRoot}
   PubInc      = ${PSY_PubInc}
   PubLib      = ${PSY_PubLib}

   AnaDir      = ${PSY_Base}/manager/analyze
   CfgDir      = cfg-${PSY_ID}
   FltDir      = ""
   MngDir      = ${PSY_Base}/manager
   ScrDir      = ${PSY_Base}/scripts
   TmpDir      = ${PSY_Prefix}${PSY_ID}
}

# requested features - pre-analyze
Group RF {
   SPOKES_C       =
   SPOKES_SCHEME  = netcdf
   STATIC_LINKING = FALSE
}

Group RL {
}

Group Shared {
   CC_Flags =
   CC_Inc   =
   LD_RPath =
   LD_Flags =
   LD_Lib   =
}

Group SHELL {
}

Group SMP {
   OpenMP  = FALSE
   Pthread = FALSE
   LibExt  =
}

Group SQL {
}

Group SSL {
}

Group STD {
   C      = X99
   F      = F2003
   IPC    = POSIX
   POSIX  = 200112
   XOPEN  = 600
   MPI    = none
   OPENMP = none
}

Group TEST {
   ADVISORY = ""
}

# the USE group contains features that have been requested, verified to
# exist, ready to use, and chosen over other options
# there are a few things that we HAVE but choose not use USE
# this group clarifies the intention (see HAVE group)

Group USE {
   IMF       = FALSE
   MPI       = FALSE
   LDLibPath = ${USE_LDLibPath}
}

#--------------------------------------------------------------------------

# functionally related groups

# graphics device groups
Group JPEG {
}

Group OGL {
}

Group PNG {
}

Group QD {
}

Group X11 {
}

Group Z {
}

# Math library
Group LibM {
}

Group BLAS {
}

Group LAPACK {
}

