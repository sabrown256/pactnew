#
# PROGRAM-INIT - define PACT wide variables and give them default values
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

Note "Initializing configuration"

run analyze/default-bits

# include PACT libraries in RPATH for the memory manager interposers
run analyze/rpath -i init

# dynamically link dependent libraries by default
include features/dld

setenv ENV_VARS "Bits OS_Name \
                 DB_CFGMAN DB_HOST_SERVER \
                 DB_RUN_SIGNATURE DB_SITE_SIGNATURE DB_UPDATE_SYS \
                 GLIBC_VERSION BFD_VERSION \
                 HDF_VERSION MYSQL_VERSION SQLITE3_VERSION \
                 PNG_VERSION JPEG_VERSION \
                 PACT_VERSION \
                 CC_Exe CC_Flags \
                 CC_Debug_Default CC_Optimize_Default \
                 Cfg_CC_Exe Cfg_CC_Flags Cfg_CC_Inc \
                 CXX_Exe CXX_Flags CXX_Linker \
                 FC_Exe FC_Flags \
                 FC_Debug_Default FC_Optimize_Default \
                 DP_Inc DP_Lib DP_RPath DP_Path \
                 JOBS_System \
                 LIB LibM_Lib LibM_RPath \
                 MDG_Inc MDG_Lib MDG_RPath MDG_Path \
                 MAKE_Exe \
                 PACT_CC_FAMILY PACT_CC_VERSION PACT_CC_PATH PACT_CC_EXE \
                 PACT_FC_FAMILY PACT_FC_VERSION PACT_FC_PATH PACT_FC_EXE \
                 PY_Inc PY_Lib PY_RPath PY_Path PY_Vers PY_Ext \
                 HAVE_PYTHON HAVE_PY_NUMERIC HAVE_PY_NUMPY \
                 TRACKER_Exe HAVE_OPENMP \
                 CFE PFE CROSS_COMPILE CROSS_REF \
                 SYS_FltDir \
                 SYS_Prefix SYS_CfgDir SYS_TmpDir SYS_Arch SYS_ID \
                 SYS_SITE SYS_TYPE SYS_Root SYS_AIRoot SYS_ASRoot"

setenv TEST_ADVISORY     ""
setenv DO_RUN_DBG        none
setenv DO_RUN_MPI        none
setenv DO_RUN_CROSS      none
setenv CONFIG_PATH       "local:std"

# GOTCHA: this root may be different for CROSS_COMPILE
# need script to figure out root includes for given compiler
setenv RootInc  /usr/include
setenv RootLib  /usr/lib

setenv SUFFIXES  '.i'

LIB              = lib
MAKE_Shared_Libs = FALSE
WARN_PATTERN     =
ERR_PATTERN      =
SchemeSpokes     = netcdf
CSpokes          =
ThreadLibExt     =
PTHREAD_POSIX    = FALSE

# initialize standard tools

Tool CC {
}

Tool CXX {
}

Tool FC {
   MOD_FLAG = -I
}

Tool LD {
   SpokeDepLib =
}

Tool Lex {
}

Tool Yacc {
}

Tool MAKE {
}

Tool GMAKE {
}

Tool JOBS {
   System = loner
}

# PY contains the specifics of the python versions
# to be used as derived from the specifications in
# the Python group

Tool PY {
}

# initialize standard groups

# PACT_CC_ refers to the Compiler Collection used to build PACT
# rather than COMPILER_ which is overloaded to the extreme
Group PACT {
   CFG_FILE   = ""
   CFG_ID     = ""
   CC_FAMILY  = generic
   CC_EXE     = `which cc`
   CC_VERSION = ""
   FC_FAMILY  = generic
   FC_VERSION = ""
}

Group STD {
   C      = X99
   F      = F2003
   IPC    = POSIX
   POSIX  = 200112
   XOPEN  = 600
   MPI    = none
   OPENMP = none
}

# Group SYS contains variables describing the system
#   SYS_Arch      the system ID as defined by 'system-id'
#   SYS_Cfg       the system config file
#   SYS_ID        the system ID as defined by 'cfgman use'
#   SYS_TYPE      the system type as defined by 'site-signature'
#   SYS_SITE      the site of the system as defined by 'site-signature'
#   SYS_Root      the root ..../pact/dev/$SYS_ID directory
#   SYS_AIRoot    the architecture independent root directory
#   SYS_ASRoot    the architecture specific root directory
#   SYS_InstRoot  the root installation directory
#   SYS_Prefix    the temporary directory prefix, e.g. "z-"
#   SYS_CfgDir    the temporary configuration directory
#   SYS_FltDir    the directory containing filter files
#   SYS_TmpDir    the temporary build/test directory

Group SYS {
   Arch     = ${SYS_Arch}
   ID       = ${SYS_ID}
   TYPE     = ""
   SITE     = ""
   Root     = pact/dev/${SYS_ID}
   AIRoot   = ""
   ASRoot   = ""
   InstRoot = none
   FltDir   = ""
   Prefix   = "z-"
   Cfg      = ""
   CfgDir   = cfg-${SYS_ID}
   FltDir   = ""
   TmpDir   = ${SYS_Prefix}${SYS_ID}
}

Group DB {
   CFGMAN         =
   HOST_SERVER    = 
   RUN_SIGNATURE  = 
   SITE_SIGNATURE =
   UPDATE_SYS     = 
}

Group OS {
}

Group Cfg {
}

Group Cfe {
}

Group RL {
}

Group SSL {
}

Group GSL {
}

Group GRAPHICS {
}

Group Shared {
   CC_Flags =
   CC_Inc   =
   LD_RPath =
   LD_Flags =
   LD_Lib   =
}

# define some groups for analysis

# specifications for FPE patching
Group FPE {
   Exe    = gcc
   Flags  = -g -Wall
   Flags += -fPIC
}

# Math library
Group LibM {
}

Group BLAS {
}

Group LAPACK {
}

# machine dependent graphics for PGS - e.g. X11
Group MDG {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

# machine dependent I/O for PDB - e.g. SQL
Group MDI {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

# machine dependent executable access - e.g. BFD
Group MDE {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

# other machine dependent packages for PACT - e.g. RL
Group MD {
   Inc   = ""
   Lib   = ""
   Pck   = ""
}

# Open MP group
Group OpenMP {
   SharedFnc = no
}

# distributed processing group
Group DP {
   Inc   = ""
   Lib   = ""
   RPath = /usr/lib
   Path  = /usr/bin
}

Group Z {
}

Group PNG {
}

Group JPEG {
}

Group X11 {
}

Group OGL {
}

Group QD {
}

Group SQL {
}

Group HDF {
   Inc   = 
   Lib   = 
   RPath = 
   Path  = 
}

Group BFD {
   Flags = 
   Inc   =
   Lib   = -lbfd
   RPath = 
   Path  = 
}

Group LEH {
   TTY_ECHO  = TRUE
   TTY_CRNL  = TRUE
   TTY_VTIME = TRUE
}

