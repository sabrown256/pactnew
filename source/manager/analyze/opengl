#!/bin/csh -f
#
# OPENGL - analyze platform Open GL options
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Separator $Log
Note $Log "Analyze: opengl"

dbini MDG_Inc          ""
dbini MDG_Lib          ""
dbini MDG_Pck          ""
dbini OGL_Inc          ""
dbini OGL_Lib          ""
dbini OGL_RPath        $RootLib
dbini OGL_Path         /usr
#SafeEnv MDG_Inc          ""
#SafeEnv MDG_Lib          ""
#SafeEnv MDG_Pck          ""
#SafeEnv OGL_Inc          ""
#SafeEnv OGL_Lib          ""
#SafeEnv OGL_RPath        $RootLib
#SafeEnv OGL_Path         /usr

SafeEnv OS_Name           `uname -s`
SafeEnv GraphicsDevices  ""
SafeEnv GraphicsFlag     ""

SafeEnv Std_UseOGL       FALSE

# if we have explicitly said we do not want OGL
# do NOT detect it
if ("$OGL_Path" == none) then
   NoteD $ALog "      no OpenGL (by request)"
   setenv Std_UseOGL FALSE

else

   set UTime = `timer -r`

   if (($OS_Name == Darwin) && ($CC_Exe !~ pgc*)) then
      Note $ALog "Finding GL on MAC OS X"
      setenv MDG_Lib "$MDG_Lib -framework GLUT -framework OpenGL"
   endif

   set lLibDirs = ""
   foreach i ($MDG_Lib)
      set j = $i:h
      if (-d $j) then
         set lLibDirs = ( $lLibDirs $j )
      endif
   end

   Note $ALog "MDG_Lib  = |$MDG_Lib|"
   Note $ALog "lLibDirs = |$lLibDirs|"

   cat << EOF >! $Tmp.c
#include <GL/gl.h>
#include <GL/glx.h>
int main(int c, char **v)
{void *x;
 x = (void *) glXQueryExtension;
 return(0);}
EOF

   set Implicit = TRUE
   set lIncDirs = ( $RootInc )
   set lLibDirs = ( $lLibDirs /usr/lib64 $RootLib /usr/openwin/lib )
# NOTE: X11R6 is mostly gone
#   set lIncDirs = ( $RootInc /usr/X11R6/include )
#   set lLibDirs = ( $lLibDirs /usr/lib64 $RootLib /usr/openwin/lib /usr/X11R6/lib )
   set lHdrs    = ( GL/gl.h GL/glx.h )
   set ASList   = ( a so )
   set lLib     = GL
   set lFile    = $Tmp

   set lALibs = ""
   foreach i ( `echo $RPATH | sed 's|:| |g'` )
       set lALibs = ( $lALibs -L$i )
   end

   source $AnaDir/find-package

   if (("$PckLib" != "") && ("$PckInc" != "")) then
      NoteD $ALog "      has OpenGL ($PckLib)"
      Note $ALog "Include = |$PckInc|"

      setenv GSYS             "OGL"
      setenv GraphicsDevices  "$GraphicsDevices OGL"
      setenv GraphicsFlag     "$GraphicsFlag -DOGL"

      if (("$PckInc" != "none") && ("$PckInc" != "-I$RootInc")) then
         flog $ALog setenv MDG_Inc "$MDG_Inc $PckInc"
      endif
      Note $ALog "MDG Include = |$MDG_Inc|"

      flog $ALog setenv MDG_Lib    "$MDG_Lib $PckLib"
      flog $ALog setenv MDG_Pck    "$MDG_Pck OGL"
      flog $ALog setenv Std_UseOGL TRUE
   else
      NoteD $ALog "      no OpenGL"
      flog $ALog setenv Std_UseOGL FALSE
   endif

   setenv OGL_Inc   "$PckInc"
   setenv OGL_Lib   "$PckLib"
   setenv OGL_RPath "$PckPath"

# NOTE: used OGL_Path to find libs, incs - there are no executables we need
   if ("$OGL_Path" == /usr) then
      setenv OGL_Path  ""
   endif

   set ETime = `timer -b $UTime`

   if ($Std_UseOGL == TRUE) then

# export the results
      dbexp MDG_Inc
      dbexp MDG_Lib
      dbexp MDG_Pck
      dbexp OGL_Inc
      dbexp OGL_Lib
      dbexp OGL_RPath
      dbexp OGL_Path
#      SetParent MDG_Inc
#      SetParent MDG_Lib
#      SetParent MDG_Pck
#      SetParent OGL_Inc
#      SetParent OGL_Lib
#      SetParent OGL_RPath
#      SetParent OGL_Path

      SetParent GraphicsDevices

   endif

endif

SetParent Std_UseOGL

exit(0)

