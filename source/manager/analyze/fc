#!/bin/csh -f
#
# FC - analyze the platform Fortran Compiler
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "Analyze: fc"

NoteD $ALog -n "   Fortran Compiler: "
Note $ALog ""

if ($?NO_FORTRAN == 1) then
   setenv HAVE_FORTRAN   FALSE
else
   setenv HAVE_FORTRAN   TRUE
endif

dbmget $ALog FC_Exe           =\? "f90"^        \
             FC_Flags         =\? ""^           \
             FC_Debug         =\? "-g"^         \
             FC_Optimize      =\? "-O"^         \
             FC_Linker        =\? ""^           \
             Cfg_FC_Flags     =\? "$FC_Flags"^  \
             PACT_FC_FAMILY^                    \
             PACT_FC_VERSION^                   \
             PACT_FC_PATH^                      \
             PACT_FC_EXE^                       \
             NM^                                \
             OS_Name

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

set fclst = ""
if ($?FC_Exe == 1) then
   set fclst   = ( $fclst $FC_Exe )
   set Save_FC = $FC_Exe
endif
if ($?Cfg_FC_Exe == 1) then
   set fclst = ( $fclst $Cfg_FC_Exe )
endif

# find the available ANSI Fortran compilers
set AnsiFC = ( `../analyze/fc-find $fclst` )

Note $ALog ""
Note $ALog "Fortran compilers: $AnsiFC"
Note $ALog ""

if ("$AnsiFC" != "") then
   if ($#AnsiFC > 1) then
      NoteD $ALog "$AnsiFC[1] (others $AnsiFC[2-])"
   else
      NoteD $ALog "$AnsiFC"
   endif
else
   NoteD $ALog " none"
   NoteD $ALog "      No FORTRAN compiler found"

   flog $ALog setenv FC_Exe        none
   flog $ALog setenv Cfe_FC_Exe    none
   flog $ALog setenv Cfe_FC_Flags  ""
   flog $ALog setenv Cfg_FC_Exe    none
   flog $ALog setenv Cfg_FC_Flags  ""

   flog $ALog setenv HAVE_FORTRAN  FALSE

   goto DONE
endif

# make sure we have a configuration compiler defined
if ($?Cfg_FC_Exe == 0) then
   flog $ALog setenv Cfg_FC_Exe "$FC_Exe"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

set Save_FFLAGS = ( $FC_Flags )

if ("$FC_Linker" == "") then
   flog $ALog setenv FC_Linker "$FC_Exe"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

if ($CROSS_COMPILE == "FALSE") then
   flog $ALog setenv Cfe_FC_Exe    $Cfg_FC_Exe
   flog $ALog setenv Cfe_FC_Flags  "$Cfg_FC_Flags"
else
   flog $ALog setenv Cfe_FC_Exe    $FC_Exe
   flog $ALog setenv Cfe_FC_Flags  "$FC_Flags"
endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# now lets look at this compiler

if ($FC_Exe != "") then
   Note $ALog ""

# VERSION -  check the compiler version

   Note $ALog "Check the version of the FORTRAN compiler"
   Note $ALog "   PATH   = $PATH"
   Note $ALog "   FAMILY = $PACT_FC_FAMILY"
   flog $ALog which $Cfe_FC_Exe

   if ($OS_Name == SunOS) then
      flog $ALog $Cfg_FC_Exe $FC_Version
      set CmpVers = any
      set xstatus = $status
   else if ($PACT_FC_FAMILY == 1) then
      flog $ALog gexec $Cfg_FC_Exe $FC_Version @b grep $PACT_FC_VERSION
      set CmpVers = $PACT_FC_VERSION
      set xstatus = $status
   else if ($PACT_FC_FAMILY == PGI) then
      flog $ALog gexec $Cfg_FC_Exe $FC_Version @b grep $PACT_FC_VERSION
      set CmpVers = $PACT_FC_VERSION
      set xstatus = $status
   else if ($PACT_FC_FAMILY == INTEL) then
      flog $ALog gexec $Cfg_FC_Exe $FC_Version @b grep $PACT_FC_VERSION
      set CmpVers = $PACT_FC_VERSION
      set xstatus = $status
   else if ($PACT_FC_FAMILY == PATHSCALE) then
      flog $ALog gexec $Cfg_FC_Exe $FC_Version @b grep $PACT_FC_VERSION
      set CmpVers = $PACT_FC_VERSION
      set xstatus = $status
   else
      flog $ALog $Cfg_FC_Exe $FC_Version
      set CmpVers = any
      set xstatus = $status
   endif
   if ($xstatus == 0) then
      NoteD $ALog "      requested version $CmpVers"
   else if (("$CmpVers" != any) && ($STRICT > 0)) then
      NoteD $ALog "      requested version $CmpVers (not found)"
      setenv STOP ""
      dbexp STOP
      exit(0)
   else
      NoteD $ALog "      requested version $CmpVers (not found)"
   endif
   Note $ALog ""

endif

setenv FC_Flags "$Save_FFLAGS"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

DONE:

# export the results

dbmset $ALog HAVE_FORTRAN     = $HAVE_FORTRAN^     \
             FC_Exe           = $FC_Exe^           \
             FC_Flags         = $FC_Flags^         \
             FC_Debug         = $FC_Debug^         \
             FC_Optimize      = $FC_Optimize^      \
             FC_Linker        = $FC_Linker^        \
             Cfg_FC_Exe       = $Cfg_FC_Exe^       \
             Cfg_FC_Flags     = $Cfg_FC_Flags^     \
             Cfe_FC_Exe       = $Cfe_FC_Exe^       \
             Cfe_FC_Flags     = $Cfe_FC_Flags

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

gexec $AnaDir/fc-id    @ \
      $AnaDir/fc-std   @ \
      $AnaDir/fc-iso

exit(0)

