#!/bin/csh -f
#
# X11 - analyze platform X11
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "----- analyze/x11 -----"
Note $ALog "Analyze: x11"
Note $ALog ""

dbmget $ALog HSY_RootInc^                        \
             HSY_RootLib^                        \
             X11_Inc          =\? $HSY_RootInc^  \
             X11_Lib          =\? ""^            \
             X11_RPath        =\? $HSY_RootLib^  \
             X11_Path         =\? /usr^          \
             Std_UseX         =\? FALSE^         \
             Cfe_CC_Exe^                         \
             Cfe_CC_Flags^                       \
             Cfe_LD_Flags^                       \
             Cfe_LD_Lib^                         \
             Cfe_LD_RPath^                       \
             LIB^                                \
             OS_Name^                            \
             PACT_CC_VERSION^                    \
             RPATH

set msg = "no X11"
flog $ALog setenv Std_UseX    FALSE

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# if we have explicitly said we do not want X11
# do NOT detect it and blank out the X11 group variables

if ("$X11_Path" == none) then
   set msg = "no X11 (by request)"
   flog $ALog setenv X11_Inc    ""
   flog $ALog setenv X11_Lib    ""
   flog $ALog setenv X11_RPath  ""
   flog $ALog setenv X11_Path   ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

else

   set UTime = `timer -r`

# write a little X test that works around dumb Solaris
# on which XOpenDisplay hangs forever if it does not
# like the DISPLAY variable value
   if ($OS_Name == SunOS) then

      cat << EOF >! $Tmp.c
#include <stdint.h>
#include <X11/Xlib.h>
int main(int c, char **v)
{char *dsp;
 Display *d;
 volatile Display (*pf)(char *name);
 extern char *getenv(char *s);

 pf = XOpenDisplay;

 return(0);}
EOF

# write a little X test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   else

      cat << EOF >! $Tmp.c
#include <stdint.h>
#include <X11/Xlib.h>
int main(int c, char **v)
{char *dsp;
 Display *d;
 extern char *getenv(char *s);
 dsp = getenv("DISPLAY");
 if (dsp == NULL)
    dsp = ":0.0";
 d = XOpenDisplay(dsp);
 return(0);}
EOF
   endif

   set lIncDirs = ""
   set lLibDirs = ""
   foreach i ($X11_Path)
      set lIncDirs = ( $lIncDirs $i/include )
      set lLibDirs = ( $lLibDirs $i/$LIB )
   end
   set lIncDirs = ( $lIncDirs $X11_Inc )
   set lLibDirs = ( $lLibDirs $X11_RPath )

# the X11R6 directories are pretty much gone
# except for some older systems
   if (-d /usr/X11R6) then
      set lIncDirs = ( $lIncDirs /usr/X11R6/include )
      set lLibDirs = ( $lLibDirs /usr/X11R6/$LIB /usr/X11R6/lib )
   endif

   set Implicit = TRUE
   set lHdrs    = ( X11/Xlib.h )
   set ASList   = ( so a )
   set lLib     = X11
   set lFile    = $Tmp

   set lALibs = ""
   foreach i ( `var-list -l $RPATH` )
       set lALibs = ( $lALibs -L$i )
   end

   source $PSY_AnaDir/find-package

   if ("$PckLib" != "") then
      set msg = "has X11 ($PckLib)"
      flog $ALog setenv Std_UseX    TRUE

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# do X11 font detection

      cat << EOF >! $Tmp-font.c
#include <stdint.h>
#include <X11/Xlib.h>
int main(int c, char **v)
   {int nf, ret;
    char **names;
    Display *disp;
    extern char *getenv(const char *name);

    ret  = 0;
    disp = XOpenDisplay(getenv("DISPLAY"));
    if (disp != NULL)
       {names = XListFonts(disp, "*helvetica*-*-*", 1024, &nf);
        ret   = (nf > 0);
        XFreeFontNames(names);
        XCloseDisplay(disp);};

    ret = (ret != 0);

    return(ret);}
EOF

      flog $ALog ls -l $Tmp*

      set opt = ""
      set opt = ( $opt $Cfe_CC_Flags $PckInc )
      set opt = ( $opt $Cfe_LD_Flags $Cfe_LD_RPath )
      if ("$PckPath" != "") then
         set opt = ( $opt -L$PckPath )
      endif

      flog $ALog $Cfe_CC_Exe $opt $Tmp-font.c -o $Tmp-font $Cfe_LD_Lib $PckLib
      if ($status == 0) then
         flog $ALog $Tmp-font
         if ($status == 0) then
            set msg = "$msg has fonts"
         else
            set msg = "$msg no fonts"
            flog $ALog setenv Std_UseX    FALSE
         endif
      endif

      ${RM} $Tmp-font.c $Tmp-font

   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# finish up
   set ETime = `timer -b $UTime`

   setenv X11_Inc   "$PckInc"
   setenv X11_Lib   "$PckLib"
   setenv X11_RPath "$PckPath"

# NOTE: used X11_Path to find libs, incs - there are no executables we need
   if ("$X11_Path" == /usr) then
      setenv X11_Path  ""
   endif

endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   NoteD $ALog "      $msg"

# export the results
   dbmset $ALog X11_Inc   = $X11_Inc^            \
                X11_Lib   = $X11_Lib^            \
                X11_RPath = $X11_RPath^          \
                X11_Path  = $X11_Path^           \
                Std_UseX  = $Std_UseX

exit(0)

