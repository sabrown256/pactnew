#!/bin/csh -f
#
# PYTHON - analyze the platform PYTHON
#        - PY_Exe     the full path to the python executable
#        - PY_Vers    the version of the python executable
#        - PY_Path    addition to path in order to find python executable
#        -            this comes from config files only
#        - PY_DirSrc  pact/dev/$PSY_ID/lib (install this to PY_DirDst and PY_DirPy)
#        - PY_DirDst  pact    lib/pythond.d                (install into)
#        - PY_DirPy   python  lib/pythond.d/site-packages  (install into)
#
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

Note $ALog "----- analyze/python -----"
Note $ALog "Analyze: python"
Note $ALog ""

setenv HAVE_PYTHON  FALSE

# if there is no python directory no need to look further
if (-d ../../python) then

   NoteD $ALog "   Python: "
   Note $ALog ""

   dbmget $ALog Python_Exe       =\? "python"^  \
                Python_Path      =\? ""^        \
                Python_CC_Exe    =\? "gcc"^     \
                MAKE_Shared_Libs =\? "FALSE"^   \
                CC_Exe^                         \
                PACT_CC_VERSION^                \
                HSY_OS_Name

   Note $ALog ""
   Note $ALog "Python_Exe    = $Python_Exe"
   Note $ALog "Python_Path   = $Python_Path"
   Note $ALog "Python_CC_Exe = $Python_CC_Exe"
   Note $ALog ""

# if we have explicitly said we do not want PYTHON
# do NOT detect it
   if ("$Python_Path" == none) then
      NoteD $ALog "      no PYTHON (by request)"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

   else

      set have_python     = ""
      set have_py_numeric = ""
      set have_py_numpy   = ""
      set py_exe          = ""
      set py_vers         = ""
      set py_ext          = ""
      set py_dirpy        = ""
      set py_dirdst       = ""
      set py_dirsrc       = ""
      set py_cc           = ""
      set py_cfg          = ""
      set py_inc          = ""
      set py_path         = ""

      foreach py ( `echo $Python_Exe | sed 's/,/ /g'` )

         Separator $ALog
         set lhave_python     = ""
         set lhave_py_numeric = ""
         set lhave_py_numpy   = ""
         set lpy_path         = ""
         set lpy_exe          = ""
         set lpy_vers         = ""
         set lpy_ext          = ""
         set lpy_cc           = ""
         set lpy_cfg          = ""
         set lpy_inc          = ""
         set lpy_lib          = ""
         set lpy_dirpy        = ""
         set lpy_dirdst       = ""
         set lpy_dirsrc       = ""

# load up PY variables from Group Python specifications
         if ("$py" =~ /*) then
            flog $ALog set lpy_path = $py:h:h
            flog $ALog set py       = $py:t
         endif
         if ("$Python_Path" != "") then
            flog $ALog set lpy_path = $Python_Path
         endif

         set lDirs = ( $path /usr/bin /bin )
         if (-d "$lpy_path") then
            set lDirs = ( $lpy_path/bin $lDirs )
            Note $ALog "Specified python path: $lpy_path"
         else
            set lpy_path = ""
         endif

         Note $ALog "Search Dirs = |$lDirs|"
         flog $ALog set found = FALSE
         foreach i ($lDirs)
            set lpy_exe = $i/$py
            if (-x $lpy_exe) then

               Note $ALog ""
               Note $ALog "Checking $lpy_exe"

               set lpy_vers = ""
               set lpy_inc  = ""
               set lpy_lib  = ""
               set lpy_cfg  = ""
               set lpy_cc   = ""

               @ ok = 0
               set inf = ( `$lpy_exe ../../python/python-info.py |& cat` )
               Note $ALog "Python info: ($#inf) |$inf|"
               if ($#inf > 9) then
                  if ($inf[1] == "Version:") then
                     flog $ALog set lpy_vers = $inf[2]
                     @ ok = $ok + 1
                  endif
                  if ($inf[3] == "IncDir:") then
                     flog $ALog set lpy_inc = $inf[4]
                     @ ok = $ok + 1
                  endif
                  if ($inf[5] == "LibDir:") then
                     flog $ALog set lpy_lib = $inf[6]
                     @ ok = $ok + 1
                  endif
                  if ($inf[7] == "CfgDir:") then
                     flog $ALog set lpy_cfg = $inf[8]
                     @ ok = $ok + 1
                  endif
                  if ($inf[9] == "Compiler:") then

# lately the Python reports the compiler as 'x86_64-linux-gnu-gcc'
# that is <hw>-<os>-<vndr>-<compiler>
# for the compiler - just take the end
                     set tcc = ( `echo $inf[10] | sed 's|^.*/||' | sed 's|-| |g'` )
                     flog $ALog set lpy_cc =  $tcc[$#tcc]
                     unset tcc
                     @ ok = $ok + 1

# get the compiler python was built with
                     if ((($HSY_OS_Name == "Linux")    || \
                          ($HSY_OS_Name == "Darwin")   || \
                          ($HSY_OS_Name == "FreeBSD")) && \
                         ($lpy_cc == cc)) then
                        flog $ALog set lpy_cc = $Python_CC_Exe
                     endif
                  endif
               else
                  Note $ALog "Bad information for $lpy_exe - version ignored"
               endif

# if we have all 5 pieces of info then we have a usable python
               if ($ok == 5) then
                  flog $ALog set lhave_python = TRUE

# check for Numeric
                  if (-d $lpy_inc/Numeric) then
                     flog $ALog set lhave_py_numeric = TRUE
                  else
                     flog $ALog set lhave_py_numeric = FALSE
                  endif

# check for NumPy
                  if ((-d $lpy_lib/NumPy) || \
                      (-d $lpy_lib/numpy) || \
                      (-d $lpy_lib/site-packages/NumPy) || \
                      (-d $lpy_lib/site-packages/numpy) || \
                      (-d $lpy_lib/dist-packages/NumPy) || \
                      (-d $lpy_lib/dist-packages/numpy) || \
                      (-d $lpy_inc/numpy)) then
                     flog $ALog set lhave_py_numpy = TRUE
                  else
                     flog $ALog set lhave_py_numpy = FALSE
                  endif

                  if (($lpy_vers =~ 2*) && ($lhave_py_numeric == TRUE)) then
                     flog $ALog set lpy_ext = 2_numeric
                  else if (($lpy_vers =~ 2*) && ($lhave_py_numpy == TRUE)) then
                     flog $ALog set lpy_ext = 2_numpy
                  else if (($lpy_vers =~ 3*) && ($lhave_py_numpy == TRUE)) then
                     flog $ALog set lpy_ext = 3_numpy
                  else
                     NoteD $ALog "      does not have numeric extensions"
                     flog $ALog set lpy_ext      = none
                     flog $ALog set lpy_exe      = "no-numeric"
                     flog $ALog set lhave_python = FALSE
                  endif

                  if ($lpy_ext != none) then
                     Note $ALog "Python summary:"
                     NoteD $ALog "      $lpy_ext"
                     NoteD $ALog "         $lpy_exe"
                     NoteD $ALog "         compiled with $lpy_cc"
                     NoteD $ALog "         has include directory $lpy_inc"
                     NoteD $ALog "         has lib directory $lpy_lib"

                     if ($lhave_py_numpy == TRUE) then
                        NoteD $ALog "         has numpy extensions"
                     endif
                     if ($lhave_py_numeric == TRUE) then
                        NoteD $ALog "         has numeric extensions"
                     endif

                     flog $ALog set found = TRUE
                  endif

                  if ($HSY_OS_Name == "AIX") then
                     set CCVer = `$CC_Exe -qversion`
                     set PCVer = `$lpy_cc -qversion`
                     Note $ALog "CCVer = |$CCVer|"
                     Note $ALog "PCVer = |$PCVer|"
                     if ("$CCVer" != "$PCVer") then
                        flog $ALog set lpy_exe      = "wrong-cc"
                        flog $ALog set lhave_python = FALSE
                     endif      
                  else if ($lpy_cc != $CC_Exe) then
                     Note $ALog "lpy_cc = |$lpy_cc|"
                     Note $ALog "CC_Exe = |$CC_Exe|"
                     flog $ALog set lpy_exe      = "wrong-cc"
                     flog $ALog set lhave_python = FALSE
                  endif
                  flog $ALog set lpy_path = $i
                  break
               endif
            endif
         end

         if ($found == FALSE) then
            NoteD $ALog "      no python found consistent with $CC_Exe:t"
            flog $ALog set lhave_python     = FALSE
            flog $ALog set lhave_py_numeric = FALSE
            flog $ALog set lhave_py_numpy   = FALSE
            flog $ALog set lpy_path         = "none"
            flog $ALog set lpy_exe          = "none"
            flog $ALog set lpy_vers         = "none"
            flog $ALog set lpy_ext          = "none"
            flog $ALog set lpy_cc           = "none"
            flog $ALog set lpy_cfg          = "none"
            flog $ALog set lpy_inc          = "none"
            flog $ALog set lpy_dirsrc       = "none"
            flog $ALog set lpy_dirdst       = "none"
            flog $ALog set lpy_dirpy        = "none"
         endif

         if ($MAKE_Shared_Libs == FALSE) then
            flog $ALog set lhave_python = FALSE
         endif

         if ($lhave_python == TRUE) then
            set lpr = $PSY_Root
            set lph = python${lpy_vers}/pact
            if ("$lpy_path" != "") then
               set lpr = $lpy_exe
               set lpr = $lpr:h
               set lpr = $lpr:h
               set lph = python${lpy_vers}
            endif

# install destination in python tree
            set lpy_dirpy = $lpr/lib/$lph/site-packages

# install destination in PACT tree
            set lpy_dirdst = $PSY_InstRoot/lib/$lph

# install source (local build destination)
            set lpy_dirsrc = $PSY_Root/lib/python${lpy_vers}

            unset lpr
            unset lph
         endif

         set have_python     = ( $have_python     $lhave_python)
         set have_py_numeric = ( $have_py_numeric $lhave_py_numeric )
         set have_py_numpy   = ( $have_py_numpy   $lhave_py_numpy )
         set py_path         = ( $py_path         $lpy_path )
         set py_exe          = ( $py_exe          $lpy_exe )
         set py_vers         = ( $py_vers         $lpy_vers )
         set py_ext          = ( $py_ext          $lpy_ext )
         set py_cc           = ( $py_cc           $lpy_cc )
         set py_cfg          = ( $py_cfg          $lpy_cfg )
         set py_inc          = ( $py_inc          $lpy_inc )
         set py_dirpy        = ( $py_dirpy        $lpy_dirpy )
         set py_dirdst       = ( $py_dirdst       $lpy_dirdst )
         set py_dirsrc       = ( $py_dirsrc       $lpy_dirsrc )
      end

      Separator $ALog

      flog $ALog setenv HAVE_PYTHON "$have_python"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# export the results

      dbmset $ALog HAVE_PY_NUMERIC = "$have_py_numeric"^   \
                   HAVE_PY_NUMPY   = "$have_py_numpy"^     \
                   PY_Path         = "$py_path"^           \
                   PY_Exe          = "$py_exe"^            \
                   PY_Vers         = "$py_vers"^           \
                   PY_Ext          = "$py_ext"^            \
                   PY_CC           = "$py_cc"^             \
                   PY_Cfg          = "$py_cfg"^            \
                   PY_Inc          = "$py_inc"^            \
                   PY_DirSrc       = "$py_dirsrc"^         \
                   PY_DirDst       = "$py_dirdst"^         \
                   PY_DirPy        = "$py_dirpy"
   endif

endif

dbmset $ALog HAVE_PYTHON = "$HAVE_PYTHON"

source $Me:h/post-common

exit(0)

