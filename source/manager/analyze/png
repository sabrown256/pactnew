#!/bin/csh -f
#
# PNG - analyze platform PNG
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $ALog "----- analyze/png -----"
Note $ALog "Analyze: png"
Note $ALog ""

dbmget $ALog PNG_Inc     =\? ""^        \
             PNG_Lib     =\? ""^        \
             PNG_RPath   =\? $RootLib^  \
             PNG_Path    =\? /usr^      \
             Z_Lib       =\? ""^        \
             Z_Path      =\? /usr^      \
             HAVE_PNGLIB =\? FALSE^     \
             Cfe_CC_Exe^                \
             Cfe_CC_Flags^              \
             Cfe_LD_Flags^              \
             Cfe_LD_Lib^                \
             Cfe_LD_RPath^              \
             PACT_CC_VERSION^           \
             SYS_ASRoot^                \
             LD_Lib^                    \
             LIB^                       \
             LibM_Lib^                  \
             RPATH

# if we have explicitly said we do not want PNG
# do NOT detect it
if ("$PNG_Path" == none) then
   NoteD $ALog "      no PNG (by request)"
   setenv HAVE_PNGLIB  FALSE

else if ($Z_Path == none) then
   NoteD $ALog "      has PNG (no libz)"
   setenv HAVE_PNGLIB  FALSE

else

   set lvpn = ""

   set UTime = `timer -r`

# write a little PNG test to do better detection than mere
# existence - mere existence doesn't work with 32/64 bit machines
   cat << EOF >! $Tmp.c
#include <png.h>
int main(int c, char **v)
{int rv;
 png_structp pw;
 pw = png_create_write_struct(PNG_LIBPNG_VER_STRING,
		              (png_voidp) NULL, NULL, NULL);
 if (pw == NULL)
    rv = 1;
 else
    {rv = 0;
     png_destroy_write_struct(&pw, (png_infopp) NULL);
     printf("%s\n", PNG_LIBPNG_VER_STRING);};
 return(rv);}
EOF

   set lIncDirs = ""
   set lLibDirs = ""
   set lrpath   = ( `var-list -l $RPATH` )
   foreach i ($PNG_Path)
      set lIncDirs = ( $lIncDirs $i/include )
      set lLibDirs = ( $lLibDirs $i/lib )
   end
   set lLibDirs = ( $lLibDirs $lrpath )
   set lLibDirs = ( $lLibDirs $SYS_ASRoot/lib /usr/local/lib /usr/$LIB /$LIB )
   set lIncDirs = ( $lIncDirs $SYS_ASRoot/include /usr/local/include $RootInc )

   set Implicit = FALSE
   set lHdrs    = ( png.h )
   set ASList   = ( a so )
   set lLib     = png
   set lFile    = $Tmp
   set lKeep    = TRUE

   set lALibs = ""
   foreach i ( $lrpath )
       set lALibs = ( $lALibs -L$i )
   end
   set lALibs = ( $lALibs $LD_Lib $LibM_Lib )

   unset lrpath

   source $SYS_AnaDir/find-package

   if (("$PckLib" != "") && ("$Z_Lib" != "") && ("$PckInc" != "")) then
      NoteD $ALog "      has PNG ($PckLib)"

      if ("$PckPath" != "") then
         flog $ALog setenv RPATH     ${RPATH}:${PckPath}
      endif
      flog $ALog setenv HAVE_PNGLIB  TRUE

      flog $ALog $Tmp
      set lvpn = ( `$Tmp` )

   else
      NoteD $ALog "      no PNG"
      flog $ALog setenv HAVE_PNGLIB FALSE
   endif

   flog $ALog $RM $Tmp $Tmp.c

   set ETime = `timer -b $UTime`

   setenv PNG_Inc   "$PckInc"
   setenv PNG_Lib   "$PckLib"
   setenv PNG_RPath "$PckPath"

# NOTE: used PNG_Path to find libs, incs - there are no executables
   setenv PNG_Path  ""

# export the results
   dbmset $ALog PNG_Inc     = $PNG_Inc^    \
                PNG_Lib     = $PNG_Lib^    \
                PNG_RPath   = $PNG_RPath^  \
                PNG_Path    = $PNG_Path^   \
                PNG_VERSION = $lvpn^       \
                RPATH       = $RPATH
endif

dbexp HAVE_PNGLIB

exit(0)

