#!/bin/csh -f
#
# FC-TYPES - analyze Fortran types
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/pre-common

Note $ALog "----- analyze/fc-types -----"
Note $ALog "Analyze: Fortran types"
Note $ALog ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

dbmget $ALog Cfe_LD_Flags^      \
             Cfe_LD_RPath^      \
             STD_F^             \
             HAVE_FORTRAN^      \
             CROSS_FE^          \
             PSY_Root

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

if ($HAVE_FORTRAN == TRUE) then
   if (("$lFC" != "") && (($STD_F == 'F90') || ($STD_F == 'F2003'))) then

      Note $ALog "lCC = $lCC"
      Note $ALog "lFC = $lFC"

      flog $ALog set lsdir = ../f90kinds

# run getkinds to generate getbytes.f
      Note $ALog ""
      Note $ALog "Determing Fortran kinds"

      Note $ALog ""
      Note $ALog "Compile getkinds.f"
      flog $ALog $lFC $lsdir/getkinds.f -o getkinds
      set xstatus = $status
      if ($xstatus == 0) then
         flog $ALog ($CROSS_FE ./getkinds >&! getbytes.f)
         if ($status != 0) then
            NoteD $ALog "      Cannot determine Fortran kinds"
            flog $ALog cat getbytes.f
         endif
      else
         Note $ALog ""
         Note $ALog "--Compilation failed--"
         Note $ALog "! $lFC $lsdir/getkinds.f -o getkinds"
         cat $Tmp.f >>& $ALog

         Note $ALog "      Cannot compile getkinds.f"
      endif

# compile and link getbytes
      Note $ALog ""
      Note $ALog "Compute Fortran primitive byte sizes"

      Note $ALog ""
      Note $ALog "Compile csizer.c"
      flog $ALog $lCC -I../.. -c $lsdir/csizer.c -o csizer.o
      set xstatus = $status
      if ($xstatus != 0) then
         Note $ALog ""
         Note $ALog "--Compilation failed--"
         Note $ALog "/* $lCC -I../.. -c $lsdir/csizer.c -o csizer.o */"
         cat $Tmp.c >>& $ALog

         Note $ALog "      Cannot compile csizer.c"
      endif

      Note $ALog ""
      Note $ALog "Compile getbytes.f"
      flog $ALog $lFC getbytes.f csizer.o -o getbytes
      set xstatus = $status
      if ($xstatus != 0) then
         Note $ALog ""
         Note $ALog "--Compilation failed--"
         Note $ALog "! $lFC getbytes.f csizer.o -o getbytes"
         cat $Tmp.f >>& $ALog

         Note $ALog "      Cannot compile getbytes.f"
      endif

# run getbytes to generate from_c and from_h
      Note $ALog ""
      Note $ALog "Run getbytes"
      flog $ALog $CROSS_FE ./getbytes
      if ($status != 0) then
         NoteD $ALog "         Cannot compute Fortran primitive byte sizes"
      endif

# run genfiles to generate f90types.h and f90kinds.inc
# requires from_c and from_h as input
      Note $ALog ""
      Note $ALog "Generate Fortran primitive byte size files"

      Note $ALog ""
      Note $ALog "Compiler genfiles.c"
      flog $ALog $lCC -I../.. $lsdir/genfiles.c -o genfiles
      set xstatus = $status
      if ($xstatus != 0) then
         Note $ALog ""
         Note $ALog "--Compilation failed--"
         Note $ALog "/* $lCC -I../.. $lsdir/genfiles.c -o genfiles */"
         cat $Tmp.c >>& $ALog

         Note $ALog "      Cannot compile genfiles.c"
      else
         flog $ALog $CROSS_FE ./genfiles
         if ($status != 0) then
            NoteD $ALog "         Cannot generate Fortran primitive type files"
         endif
      endif

      if ((-f f90types.h) && (-f f90kinds.inc)) then
         flog $ALog mv f90types.h f90kinds.inc $PSY_Root/include
      endif

   endif

endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

source $Me:h/post-common

exit(0)

