#!/bin/csh -f
#
# BFD - analyze platform exe format access support
#     - Computes: HAVE_BFD, HAVE_DEMANGLE, MDE_Lib
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Separator $ALog
Note $ALog "Analyze: exe access support"

SafeEnv MDE_Lib        ""
SafeEnv BFD_Lib        -lbfd
SafeEnv BFD_Path       /usr/$LIB
SafeEnv BFD_Version    0.0.0
SafeEnv HAVE_BFD       FALSE
SafeEnv HAVE_DEMANGLE  FALSE

# if we have explicitly said we do not want BFD
# do NOT detect it
if ("$BFD_Path" == none) then
   NoteD $ALog "      no bfd (by request)"

else

   if ("$BFD_Path" == "") then
      flog $ALog setenv BFD_Path /usr/$LIB
   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# BFD

   cat << EOF >! $Tmp.c
#include <stdlib.h>
#include <bfd.h>
int main(int c, char **v)
   {int rv;
    bfd *et;
    et = bfd_openr(v[0], NULL);
    rv = (et == NULL);
    bfd_close(et);
    return(rv);}
EOF

   flog $ALog cat $Tmp.c

   set libs = ""

# try building without $BFD_Lib
   set ok = FALSE
   flog $ALog $CC_Exe $Tmp.c -o $Tmp $CC_Flags
   if ($status == 0) then
      flog $ALog $Tmp
      if ($status == 0) then
         set ok = TRUE
      endif
   endif

# try building with $BFD_Lib
   if ($ok == FALSE) then
      flog $ALog $CC_Exe $Tmp.c -o $Tmp $CC_Flags $BFD_Lib
      if ($status == 0) then
         flog $ALog $Tmp
         if ($status == 0) then
            set libs = ( $libs $BFD_Lib )
            set ok   = NEED
         endif
      endif
   endif

# try building with $BFD_Lib and -liberty
   if ($ok == FALSE) then
      flog $ALog $CC_Exe $Tmp.c -o $Tmp $CC_Flags $BFD_Lib -liberty
      if ($status == 0) then
         flog $ALog $Tmp
         if ($status == 0) then
            set libs = ( $libs $BFD_Lib -liberty )
            set ok   = NEED
         endif
      endif
   endif

   flog $ALog rm -f $Tmp.c $Tmp

   if ($ok == FALSE) then
      NoteD $ALog "      no bfd"
   else
      flog $ALog ls -l $BFD_Path/libbfd*.so
      if ($status == 0) then
         foreach i ($BFD_Path/libbfd*.so)
            set l = $i:t
            set inf = ( `echo $l:r | sed 's/-/ /g'` )
            if ($#inf > 1) then
               setenv BFD_Version  $inf[2]
            endif
         end      
      endif

      NoteD $ALog "      has bfd ($BFD_Version)"
      flog $ALog setenv MDE_Lib "$MDE_Lib $libs"
      flog $ALog setenv HAVE_BFD TRUE
   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

# DEMANGLE

   cat << EOF >! $Tmp.c
#include <stdlib.h>
#include <demangle.h>
int main(int c, char **v)
   {int v, rv;
    v  = (DMGL_ANSI | DMGL_PARAMS);
    rv = (rv == 0);
    return(rv);}
EOF

   flog $ALog cat $Tmp.c

   set libs = ""

# try building
   set ok = FALSE
   flog $ALog $CC_Exe $Tmp.c -o $Tmp $CC_Flags
   if ($status == 0) then
      NoteD $ALog "      has demangle.h"
      setenv HAVE_DEMANGLE TRUE
   else
      NoteD $ALog "      no demangle.h"
   endif

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

endif

SetParent BFD_Version
SetParent MDE_Lib
SetParent HAVE_BFD
SetParent HAVE_DEMANGLE

Separator $ALog

exit(0)

