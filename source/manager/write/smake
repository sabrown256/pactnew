#!/bin/csh -f
#
# SMAKE - compile the smake program
#
# Source Version: 3.0
# Software Release #: LLNL-CODE-422942
#
# include "cpyright.h"
#

set Me = $0
source $Me:h/common

Note $Log "----- write/smake -----"
Note $Log "Write: smake"
Note $Log ""

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

Separator $Log

Note $Log "   System make wrapper - smake"
Note $Log ""

dbmget $Log SYS_CfgDir^       \
            SYS_Root^         \
            SYS_ID^           \
            SYS_InstRoot^     \
            SYS_Prefix^       \
            GMAKE_Flag^       \
            IncDir^           \
            EtcDir^           \
            BinDir^           \
            MngDir^           \
            Cfg_CC_Exe^       \
            Cfg_CC_Flags^     \
            Cfg_Lex_Flags^    \
            Cfg_LD_Flags^     \
            Cfg_LD_RPath^     \
            PACT_CC_VERSION^  \
            UseTmpDir

set lpactver = `cat $MngDir/.pact-version`

Note $Log "   lpactver      = |$lpactver|"

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

    flog $Log pushd $SYS_CfgDir

    set InstOld = instold

    set Tmp    = tmp-$SYS_ID
    set TPACTX = pactx.$Tmp
    set TMAKEF = mk.$Tmp

# backup the public files
    if ($SYS_InstRoot != "none") then
       if (-d $InstOld) then
          flog $Log $RMDir $InstOld
       endif
       flog $Log mkdir $InstOld

       if (-e $SYS_InstRoot/bin/pact) then
          flog $Log cp $SYS_InstRoot/bin/pact $InstOld
       endif
       if (-e $SYS_InstRoot/etc/make-def) then
          flog $Log cp $SYS_InstRoot/etc/make-def $InstOld
       endif
       if (-e $SYS_InstRoot/etc/make-macros) then
          flog $Log cp $SYS_InstRoot/etc/make-macros $InstOld
       endif

       if (-d $SYS_InstRoot/include) then
          sed "s|$SYS_Root|$SYS_InstRoot|" $EtcDir/make-def > $SYS_InstRoot/etc/make-def
          flog $Log cp $EtcDir/make-macros $SYS_InstRoot/etc/make-macros
       endif
    endif

# write a test Makefile
    flog $Log $RM $TMAKEF
    flog $Log touch $TMAKEF pre-Make

cat << EOF >! $TMAKEF
b:
	@csh -cf "echo OK"

a:
	@$BinDir/smake -f $TMAKEF b

EOF

    flog $Log cat $TMAKEF

# build the small version of the PACT program - smake
    set mkopt = ""
    set mkopt = ( $mkopt -g )
    set mkopt = ( $mkopt -DSYS_ID=\"${SYS_ID}\" )
    set mkopt = ( $mkopt -DSYS_Prefix=\"${SYS_Prefix}\" )
    set mkopt = ( $mkopt -DPACT_VERSION=\"${lpactver}\" )
    set mkopt = ( $mkopt $GMAKE_Flag )
    set mkopt = ( $mkopt -I${IncDir} )

    set RootOpt = ( $mkopt )
    if ($UseTmpDir == TRUE) then
       set RootOpt = ( $RootOpt -DUSE_TMP_DIR )
    endif

    flog $Log set direct = FALSE

    set ok = FALSE
    foreach n ( 1 2 )
       Note $Log "--------  Pass $n ---------"
       flog $Log ${RM} $BinDir/smake

       if ($n == 2) then
          set RootOpt = ( $RootOpt -DSTUPID_MAKE )
       endif

       if ($direct == TRUE) then
          set opt = ""
          set opt = ( $opt $RootOpt $Cfg_CC_Flags $Cfg_Lex_Flags )
          set opt = ( $opt $Cfg_LD_Flags $Cfg_LD_RPath )

          flog $Log $Cfg_CC_Exe $opt ../../psh/smake.c -o $BinDir/smake
       else

# put path to compiler at the head of the path variable for ccw
          source $EtcDir/env-pact.csh

          flog $Log pushd ../../psh
          flog $Log ./ccw "$RootOpt" smake.c -o $BinDir/smake
          flog $Log $BinDir/smake incinstall
          flog $Log popd
       endif

       flog $Log ls -l $BinDir/smake
       flog $Log $BinDir/smake -f $TMAKEF a
       set xstatus = $status

       NoteD $Log -n "   System make wrapper - smake"
       if ($xstatus == 0) then
          if ($n == 1) then
             NoteD $Log " (Does use PATH)"
          else
             NoteD $Log " (Does NOT use PATH)"
          endif
          set ok = TRUE
          break
       endif
    end
    Note $Log "--------  Pass $n ---------"

    if ($ok == FALSE) then
       flog $Log ${RM} $BinDir/smake
       NoteD $Log " "
       NoteD $Log " "
       NoteD $Log "ERROR: SERIOUS MAKE PROBLEM ON THIS PLATFORM"
       NoteD $Log " "
       exit(1)
    endif

    unset opt
    unset ok

    flog $Log $RMDir ${SYS_Prefix}*
    flog $Log $RM `ls`
    flog $Log popd

#--------------------------------------------------------------------------
#--------------------------------------------------------------------------

unset lpactver

exit(0)

